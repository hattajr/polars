var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","comparison","cont_slice","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","DEFAULT","FAST_EXPLODE_LIST","Metadata","MetadataFlags","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","cast","clone","clone","clone_into","clone_into","complement","contains","default","default","deref","deref","deref_mut","deref_mut","difference","drop","drop","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fallible_iter","from_iter","from_name","get_distinct_count","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter_names","not","remove","set","set_distinct_count","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vzip","vzip","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesReshape","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_leaf_array","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","reshape_array","reshape_list","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","EndsWith","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","Unique","UpperBound","Uppercase","ValueCounts","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","replace_chunks","replace_with_chunk","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_set_metadata","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[808,"polars::chunked_array::arithmetic"],[836,"polars::chunked_array::builder"],[1093,"polars::chunked_array::builder::list"],[1110,"polars::chunked_array::collect"],[1124,"polars::chunked_array::float"],[1126,"polars::chunked_array::from_iterator_par"],[1130,"polars::chunked_array::iterator"],[1200,"polars::chunked_array::iterator::par"],[1202,"polars::chunked_array::metadata"],[1305,"polars::chunked_array::object"],[1376,"polars::chunked_array::object::builder"],[1399,"polars::chunked_array::object::registry"],[1427,"polars::chunked_array::ops"],[1625,"polars::chunked_array::ops::arity"],[1660,"polars::chunked_array::ops::float_sorted_arg_max"],[1662,"polars::chunked_array::ops::gather"],[1665,"polars::chunked_array::ops::search_sorted"],[1694,"polars::chunked_array::ops::sort"],[1701,"polars::chunked_array::ops::sort::arg_bottom_k"],[1702,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1709,"polars::chunked_array::ops::sort::options"],[1722,"polars::chunked_array::temporal"],[1729,"polars::chunked_array::temporal::conversion"],[1732,"polars::datatypes"],[3103,"polars::datatypes::categorical"],[3120,"polars::datatypes::categorical::revmap"],[3126,"polars::datatypes::categorical::string_cache"],[3145,"polars::docs"],[3147,"polars::error"],[3231,"polars::error::PolarsError"],[3235,"polars::error::constants"],[3238,"polars::frame"],[3491,"polars::frame::explode"],[3520,"polars::frame::group_by"],[3755,"polars::frame::group_by::GroupByMethod"],[3756,"polars::frame::group_by::GroupsProxy"],[3758,"polars::frame::group_by::aggregations"],[3771,"polars::frame::group_by::expr"],[3774,"polars::frame::row"],[3881,"polars::functions"],[3883,"polars::prelude"],[8789,"polars::prelude::AggExpr"],[8796,"polars::prelude::BooleanFunction"],[8799,"polars::prelude::DslPlan"],[8850,"polars::prelude::Expr"],[8884,"polars::prelude::FunctionExpr"],[8905,"polars::prelude::GroupByMethod"],[8906,"polars::prelude::GroupsProxy"],[8908,"polars::prelude::LiteralValue"],[8911,"polars::prelude::PolarsError"],[8915,"polars::prelude::StringFunction"],[8929,"polars::prelude::aggregations"],[8942,"polars::prelude::arity"],[8977,"polars::prelude::array"],[8996,"polars::prelude::binary"],[9012,"polars::prelude::cat"],[9013,"polars::prelude::chunkedarray"],[9080,"polars::prelude::chunkedarray::string"],[9118,"polars::prelude::chunkedarray::string::infer"],[9148,"polars::prelude::cloud"],[9195,"polars::prelude::cloud::options"],[9203,"polars::prelude::datatypes"],[9469,"polars::prelude::datatypes::categorical"],[9486,"polars::prelude::datatypes::categorical::revmap"],[9492,"polars::prelude::datatypes::categorical::string_cache"],[9496,"polars::prelude::datetime"],[9499,"polars::prelude::default_arrays"],[9505,"polars::prelude::dt"],[9557,"polars::prelude::expr"],[9560,"polars::prelude::fixed_size_list"],[9580,"polars::prelude::float_sorted_arg_max"],[9582,"polars::prelude::function_expr"],[9705,"polars::prelude::function_expr::BooleanFunction"],[9708,"polars::prelude::function_expr::FunctionExpr"],[9729,"polars::prelude::function_expr::StringFunction"],[9743,"polars::prelude::function_expr::cat"],[9745,"polars::prelude::function_expr::pow"],[9749,"polars::prelude::function_expr::rolling"],[9778,"polars::prelude::function_expr::rolling_by"],[9807,"polars::prelude::gather"],[9810,"polars::prelude::interpolate"],[9814,"polars::prelude::interpolate_by"],[9815,"polars::prelude::mode"],[9816,"polars::prelude::nan_propagating_aggregate"],[9820,"polars::prelude::null"],[9850,"polars::prelude::schema_inference"],[9874,"polars::prelude::search_sorted"],[9880,"polars::prelude::series"],[9902,"polars::prelude::slice"],[9905,"polars::prelude::sort"],[9912,"polars::prelude::sort::arg_bottom_k"],[9913,"polars::prelude::sort::arg_sort_multiple"],[9920,"polars::prelude::sort::options"],[9933,"polars::prelude::strings"],[9987,"polars::prelude::udf"],[9993,"polars::prelude::utf8"],[9997,"polars::series"],[10399,"polars::series::arithmetic"],[10420,"polars::series::arithmetic::checked"],[10426,"polars::series::ops"],[10452,"polars::series::unstable"],[10476,"dyn_clone::sealed"],[10477,"polars_core::datatypes"],[10478,"polars_core::chunked_array"],[10479,"num_traits"],[10480,"num_traits::cast"],[10481,"polars_core::series"],[10482,"polars_error"],[10483,"core::result"],[10484,"polars_core::series::arithmetic::borrowed"],[10485,"polars_core::frame::group_by::proxy"],[10486,"polars_core::chunked_array::object"],[10487,"core::option"],[10488,"polars_arrow::array"],[10489,"alloc::boxed"],[10490,"core::iter::traits::iterator"],[10491,"polars_core::chunked_array::list::iterator"],[10492,"core::ops::function"],[10493,"core::marker"],[10494,"alloc::borrow"],[10495,"polars_core::series::unstable"],[10496,"polars_core::datatypes::dtype"],[10497,"alloc::string"],[10498,"polars_core::chunked_array::ops::sort::options"],[10499,"polars_core::series::arithmetic::borrowed::checked"],[10500,"core::slice::iter"],[10501,"core::iter::adapters::map"],[10502,"alloc::vec"],[10503,"core::iter::traits::double_ended"],[10504,"polars_core::chunked_array::metadata"],[10505,"polars_arrow::offset"],[10506,"core::fmt"],[10507,"core::iter::traits::collect"],[10508,"polars_utils::iter::fallible"],[10509,"polars_core::chunked_array::from_iterator"],[10510,"polars_arrow::bitmap::immutable"],[10511,"core::borrow"],[10512,"core::convert"],[10513,"rayon::iter"],[10514,"polars_arrow::pushable"],[10515,"polars_arrow::trusted_len"],[10516,"polars_core::datatypes::any_value"],[10517,"polars_core::chunked_array::logical"],[10518,"polars_core::datatypes::time_unit"],[10519,"core::iter::traits::exact_size"],[10520,"polars_core::series::series_trait"],[10521,"polars_core::chunked_array::iterator"],[10522,"alloc::sync"],[10523,"core::ops::range"],[10524,"polars_core::datatypes::field"],[10525,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10526,"polars_core::chunked_array::ops::rolling_window"],[10527,"polars_ops::chunked_array::scatter"],[10528,"polars_utils::index"],[10529,"ahash::random_state"],[10530,"polars_utils::hashing"],[10531,"ndarray::data_repr"],[10532,"ndarray::dimension::dim"],[10533,"ndarray"],[10534,"either"],[10535,"core::any"],[10536,"polars_core::chunked_array::arithmetic::numeric"],[10537,"polars_core::chunked_array::builder::list::anonymous"],[10538,"polars_core::chunked_array::builder::list::boolean"],[10539,"polars_core::chunked_array::builder::list::primitive"],[10540,"polars_core::chunked_array::builder::list"],[10541,"polars_core::chunked_array::builder"],[10542,"polars_core::chunked_array::builder::list::binary"],[10543,"polars_core::chunked_array::builder::list::null"],[10544,"polars_core::chunked_array::builder::string"],[10545,"polars_arrow::array::binview"],[10546,"polars_core::chunked_array::builder::boolean"],[10547,"polars_core::chunked_array::builder::null"],[10548,"polars_core::chunked_array::builder::primitive"],[10549,"core::clone"],[10550,"polars_core::series::implementations::null"],[10551,"polars_core::chunked_array::collect"],[10552,"polars_core::chunked_array::float"],[10553,"polars_core::chunked_array::from_iterator_par"],[10554,"polars_arrow::array::boolean"],[10555,"polars_arrow::array::fixed_size_list"],[10556,"bitflags::iter"],[10557,"polars_arrow::datatypes"],[10558,"polars_arrow::bitmap::utils::iterator"],[10559,"polars_arrow::bitmap::utils::zip_validity"],[10560,"polars_core::chunked_array::object::builder"],[10561,"polars_core::chunked_array::object::registry"],[10562,"polars_core::chunked_array::ops"],[10563,"core::hash"],[10564,"polars_arrow::legacy::array::slice"],[10565,"polars_core::chunked_array::ops::arity"],[10566,"polars_arrow::array::static_array"],[10567,"core::error"],[10568,"polars_arrow::array::primitive"],[10569,"polars_core::chunked_array::ops::search_sorted"],[10570,"polars_core::utils"],[10571,"polars_row::row"],[10572,"chrono::naive::datetime"],[10573,"chrono_tz::timezones"],[10574,"chrono::naive::time"],[10575,"polars_core::chunked_array::logical::struct_"],[10576,"polars_core::chunked_array::logical::categorical"],[10577,"polars_core::chunked_array::logical::categorical::builder"],[10578,"polars_arrow::array::static_array_collect"],[10579,"bytemuck::zeroable"],[10580,"polars_core::chunked_array::logical::categorical::revmap"],[10581,"polars_core::chunked_array::logical::categorical::merge"],[10582,"polars_arrow::datatypes::physical_type"],[10583,"polars_arrow::types"],[10584,"chrono::time_delta"],[10585,"chrono::naive::date"],[10586,"smartstring::config"],[10587,"smartstring"],[10588,"core::cmp"],[10589,"polars_time::windows::duration"],[10590,"polars_core::frame"],[10591,"polars_core::chunked_array::logical::categorical::string_cache"],[10592,"polars_error::warning"],[10593,"alloc::collections"],[10594,"planus::errors"],[10595,"simdutf8::basic"],[10596,"polars_parquet::parquet::error"],[10597,"regex::error"],[10598,"std::io::error"],[10599,"polars_core::schema"],[10600,"polars_core::series::from"],[10601,"hashbrown::set"],[10602,"polars_arrow::datatypes::schema"],[10603,"polars_core::frame::row"],[10604,"polars_core::frame::group_by"],[10605,"polars_time::group_by::dynamic"],[10606,"polars_lazy::frame"],[10607,"polars_core::frame::explode"],[10608,"polars_core::chunked_array::ndarray"],[10609,"polars_arrow::array::struct_"],[10610,"polars_arrow::record_batch"],[10611,"polars_utils::idx_vec"],[10612,"rayon::iter::plumbing"],[10613,"polars_plan::logical_plan::aexpr"],[10614,"polars_core::frame::group_by::into_groups"],[10615,"core::iter::adapters::copied"],[10616,"core::iter::adapters::zip"],[10617,"polars_utils::float"],[10618,"polars_arrow::types::native"],[10619,"polars_core::frame::group_by::aggregations::agg_list"],[10620,"polars_core::frame::group_by::aggregations"],[10621,"polars_core::frame::group_by::expr"],[10622,"polars_core::frame::row::av_buffer"],[10623,"polars_utils::arena"],[10624,"polars_plan::logical_plan::alp"],[10625,"polars_ops::frame::join::hash_join"],[10626,"polars_ops::frame::join::args"],[10627,"polars_ops::chunked_array::gather::chunked"],[10628,"polars_ops::frame"],[10629,"polars_io::csv::read::reader"],[10630,"polars_io::predicates"],[10631,"polars_io::mmap"],[10632,"polars_plan::dsl::expr"],[10633,"core::alloc"],[10634,"polars_plan::logical_plan::anonymous_scan"],[10635,"polars_lazy::scan::ndjson"],[10636,"polars_lazy::scan::anonymous_scan"],[10637,"polars_plan::dsl::expr_dyn_fn"],[10638,"polars_plan::logical_plan::visitor"],[10639,"polars_plan::dsl::function_expr"],[10640,"polars_ops::series::ops::arg_min_max"],[10641,"polars_plan::dsl::array"],[10642,"polars_plan::dsl::list"],[10643,"polars_plan::dsl::function_expr::schema"],[10644,"polars_io::ipc::ipc_stream"],[10645,"std::io"],[10646,"polars_ops::chunked_array::binary"],[10647,"polars_time::chunkedarray::string"],[10648,"std::os::fd::owned"],[10649,"polars_ops::chunked_array::list"],[10650,"std::os::fd::raw"],[10651,"polars_ops::series::ops"],[10652,"polars_ops::chunked_array::strings"],[10653,"core::mem::maybe_uninit"],[10654,"polars_ops::chunked_array::strings::namespace"],[10655,"polars_io::csv::read::read_impl::batched"],[10656,"polars_io::csv::write::writer"],[10657,"polars_io::ipc::write"],[10658,"polars_io::parquet::read::reader"],[10659,"polars_io::parquet::read::read_impl"],[10660,"polars_io::parquet::write::writer"],[10661,"polars_io::parquet::write::batched_writer"],[10662,"polars_plan::dsl::binary"],[10663,"polars_plan::dsl::udf"],[10664,"polars_lazy::frame::exitable"],[10665,"hashbrown::map"],[10666,"polars_plan::dsl::cat"],[10667,"polars_ops::series::ops::round"],[10668,"polars_time::series"],[10669,"polars_time::chunkedarray::rolling_window"],[10670,"polars_time::windows::bounds"],[10671,"polars_lazy::scan::csv"],[10672,"polars_lazy::scan::ipc"],[10673,"polars_time::windows::group_by"],[10674,"polars_lazy::scan::parquet"],[10675,"polars_time::windows::window"],[10676,"polars_io::csv::read::options"],[10677,"polars_io::csv::write::options"],[10678,"polars_io::ipc::ipc_file"],[10679,"polars_io::json"],[10680,"polars_io::parquet::read::options"],[10681,"polars_io::parquet::write::options"],[10682,"polars_ops::frame::join::asof"],[10683,"polars_ops::series::ops::interpolation::interpolate"],[10684,"polars_ops::series::ops::is_between"],[10685,"polars_ops::series::ops::rank"],[10686,"polars_plan::logical_plan"],[10687,"polars_plan::dsl::arity"],[10688,"polars_plan::dsl::function_expr::boolean"],[10689,"polars_plan::dsl::function_expr::cat"],[10690,"polars_plan::dsl::function_expr::pow"],[10691,"polars_plan::dsl::function_expr::strings"],[10692,"polars_plan::dsl::functions::temporal"],[10693,"polars_plan::dsl::options"],[10694,"polars_plan::frame::opt_state"],[10695,"polars_plan::logical_plan::lit"],[10696,"polars_plan::logical_plan::options"],[10697,"polars_parquet::parquet::metadata::file_metadata"],[10698,"polars_arrow::legacy::kernels::rolling"],[10699,"polars_arrow::legacy::kernels::time"],[10700,"polars_lazy::scan::file_list_reader"],[10701,"polars_io::cloud::options"],[10702,"polars_parquet::parquet::metadata::column_order"],[10703,"polars_ops::chunked_array::binary::namespace"],[10704,"std::path"],[10705,"polars_io::shared"],[10706,"polars_ops::frame::join::cross_join"],[10707,"polars_lazy::dsl::eval"],[10708,"polars_time::chunkedarray::date"],[10709,"polars_time::chunkedarray::datetime"],[10710,"polars_time::chunkedarray::duration"],[10711,"core::default"],[10712,"polars_parquet::parquet::metadata::row_metadata"],[10713,"polars_core::series::ops"],[10714,"polars_plan::dsl::dt"],[10715,"polars_ops::series::ops::various"],[10716,"polars_arrow::scalar"],[10717,"polars_lazy::dsl::list"],[10718,"crossterm::command"],[10719,"polars_plan::dsl::struct_"],[10720,"polars_io::ndjson::core"],[10721,"std::fs"],[10722,"polars_plan::logical_plan::apply"],[10723,"polars_plan::dsl::function_expr::range"],[10724,"polars_plan::dsl::function_expr::list"],[10725,"polars_plan::dsl::function_expr::struct_"],[10726,"polars_plan::dsl::function_expr::binary"],[10727,"polars_plan::dsl::function_expr::array"],[10728,"polars_plan::dsl::function_expr::datetime"],[10729,"std::ffi::os_str"],[10730,"core::ffi::c_str"],[10731,"alloc::ffi::c_str"],[10732,"polars_parquet::arrow::read::statistics"],[10733,"polars_arrow::array::growable::structure"],[10734,"polars_arrow::array::struct_::mutable"],[10735,"polars_arrow::legacy::array::default_arrays"],[10736,"polars_arrow::buffer::immutable"],[10737,"polars_arrow::array::list"],[10738,"polars_core::named_from"],[10739,"polars_ops::frame::join"],[10740,"polars_ops::series::ops::reshape"],[10741,"polars_arrow::legacy::array"],[10742,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10743,"polars_time::chunkedarray::time"],[10744,"parquet_format_safe::parquet_format"],[10745,"polars_arrow::array::struct_::iterator"],[10746,"polars_ops::frame::join::asof::groups"],[10747,"polars_ops::chunked_array::list::namespace"],[10748,"polars_plan::dsl::name"],[10749,"polars_io::options"],[10750,"polars_core::chunked_array::ops::aggregate"],[10751,"polars_core::chunked_array::ops::aggregate::quantile"],[10752,"polars_time::month_end"],[10753,"polars_time::month_start"],[10754,"polars_arrow::legacy::index"],[10755,"polars_ops::chunked_array::strings::split"],[10756,"core::pin"],[10757,"core::io::borrowed_buf"],[10758,"parquet_format_safe::thrift::varint::decode"],[10759,"polars_time::chunkedarray::rolling_window::dispatch"],[10760,"polars_time::round"],[10761,"polars_parquet::parquet::metadata::schema_descriptor"],[10762,"polars_core::chunked_array::ops::aggregate::var"],[10763,"polars_plan::dsl::string"],[10764,"polars_ops::series::ops::to_dummies"],[10765,"polars_time::truncate"],[10766,"std::sync::rwlock"],[10767,"polars_io::csv::read::schema_inference"],[10768,"polars_time::upsample"],[10769,"polars_core::hashing::vector_hasher"],[10770,"core::num::nonzero"],[10771,"alloc::collections::btree::map"],[10772,"polars_ops::chunked_array::array::namespace"],[10773,"polars_ops::chunked_array::array"],[10774,"polars_time::chunkedarray::string::patterns"],[10775,"polars_time::chunkedarray::string::infer"],[10776,"polars_arrow::legacy::array::fixed_size_list"],[10777,"polars_plan::dsl::function_expr::rolling"],[10778,"polars_plan::dsl::function_expr::rolling_by"],[10779,"polars_arrow::legacy::array::null"],[10780,"polars_arrow::bitmap::mutable"],[10781,"polars_arrow::array::utf8"],[10782,"polars_arrow::array::binary"],[10783,"polars_core::series::iterator"],[10784,"polars_core"],[10785,"polars_core::chunked_array::iterator::par"],[10786,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10787,"polars_core::chunked_array::ops::gather"],[10788,"polars_core::chunked_array::ops::sort"],[10789,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10790,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10791,"polars_core::chunked_array::temporal"],[10792,"polars_core::chunked_array::temporal::conversion"],[10793,"polars_core::chunked_array::temporal::time"],[10794,"polars_core::chunked_array::logical::date"],[10795,"polars_core::chunked_array::logical::datetime"],[10796,"polars_core::chunked_array::logical::decimal"],[10797,"polars_core::chunked_array::logical::duration"],[10798,"polars_core::datatypes::aliases"],[10799,"polars_utils::aliases"],[10800,"polars_core::chunked_array::logical::time"],[10801,"polars_error::constants"],[10802,"polars_core::functions"],[10803,"polars_io::utils"],[10804,"polars_io::parquet::metadata"],[10805,"polars_arrow::legacy::prelude"],[10806,"polars_ops::series::ops::rolling"],[10807,"polars_parquet::parquet::write"],[10808,"polars_ops::frame::join::general"],[10809,"polars_ops::series::ops::abs"],[10810,"polars_plan::dsl::functions::selectors"],[10811,"polars_plan::dsl::functions::horizontal"],[10812,"polars_plan::dsl::functions::arity"],[10813,"polars_plan::dsl"],[10814,"polars_plan::dsl::functions::range"],[10815,"polars_plan::dsl::functions::index"],[10816,"polars_ops::chunked_array"],[10817,"polars_plan::dsl::functions::coerce"],[10818,"polars_plan::dsl::functions::syntactic_sugar"],[10819,"polars_time::base_utc_offset"],[10820,"polars_time"],[10821,"polars_ops::series::ops::clip"],[10822,"polars_io"],[10823,"polars_ops::series::ops::horizontal"],[10824,"polars_lazy::dsl::functions"],[10825,"polars_plan::dsl::functions::concat"],[10826,"polars_ops::series::ops::index"],[10827,"polars_io::csv::read::parser"],[10828,"polars_ops::series::ops::cum_agg"],[10829,"polars_ops::series::ops::diff"],[10830,"polars_time::dst_offset"],[10831,"polars_ops::series::ops::floor_divide"],[10832,"polars_ops::chunked_array::strings::concat"],[10833,"polars_ops::chunked_array::datetime::replace_time_zone"],[10834,"polars_time::date_range"],[10835,"polars_ops::series::ops::interpolation"],[10836,"polars_ops::series::ops::interpolation::interpolate_by"],[10837,"polars_io::csv::read::utils"],[10838,"polars_ops::series::ops::is_first_distinct"],[10839,"polars_ops::series::ops::is_in"],[10840,"polars_ops::series::ops::is_last_distinct"],[10841,"polars_io::parquet::read::utils"],[10842,"polars_ops::series::ops::negate"],[10843,"polars_ops::series::ops::not"],[10844,"polars_ops::series::ops::int_range"],[10845,"polars_plan::dsl::functions::repeat"],[10846,"polars_ops::chunked_array::repeat_by"],[10847,"polars_ops::series::ops::replace"],[10848,"polars_io::csv::read"],[10849,"polars_ops::chunked_array::strings::strip"],[10850,"polars_time::chunkedarray"],[10851,"polars_io::cloud"],[10852,"polars_ops::chunked_array::mode"],[10853,"polars_ops::chunked_array::nan_propagating_aggregate"],[10854,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{n}}{l{n}}}}{{{l{A`}}{l{A`}}}}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{l{c}}e}{}Ah{AjAl}}{{{l{Ab}}{l{Ab}}}}{{{f{{l{n}}}}{f{An}}}}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{c}}}}e}{}Ah{AjAl}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ab}}}}{f{Bh}}}B`}{{{f{{l{c}}}}{f{Bh}}}B`Ah}{{{f{{l{n}}}}{f{Bh}}}B`}{{{f{{l{A`}}}}{f{Bh}}}B`}{{{f{{l{{Bj{c}}}}}}{f{Bh}}}B`Bl}{{{f{{l{Bn}}}}{f{Bh}}}B`}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{A`}}}}}d}{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{{Bj{c}}}}}}e}{{l{{Bj{c}}}}}Bl{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{C`{{f{{Af{Ad}}}}}}}{{Dd{{C`{{Dj{{Af{Ad}}}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{C`{{f{An}}}}}{{Dd{{C`{{Dj{An}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Ah{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bn}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{l{Bn}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}Ah{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}Ah}{{{f{{l{n}}}}{f{Df}}}{{l{n}}}}{{{f{{l{A`}}}}{f{Df}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{Df}}}{{l{Ab}}}}{{{f{{l{n}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{A`}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}AhDb}{{{f{{l{Ab}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{n}}}}c}{{l{n}}}{{Dn{{f{An}}}{{Dd{{f{An}}}}}}}}{{{f{Cl{l{c}}}}e}bAh{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Dn{{f{{Af{Ad}}}}}{{Dd{{f{{Af{Ad}}}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{n}}}}c}{{l{n}}}{{Dn{{f{An}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bn}}}}{f{Df}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{n}}}}e{f{Cl{Af{c}}}}}b{}{{Df{{C`{{f{An}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{Af{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bj{c}}}}}}g{f{Cl{Af{e}}}}}bBl{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{c}}}}g{f{Cl{Af{e}}}}}bAh{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{Ab}}}}e{f{Cl{Af{c}}}}}b{}{{Df{{C`{{f{{Af{Ad}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{A`}}}}e{f{Cl{Af{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Ah{{Df{}{{Dd{}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{f{An}}}{{Dd{{Dj{An}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{f{{Af{Ad}}}}}{{Dd{{Dj{{Af{Ad}}}}}}}}Dh}}{{{f{{l{{Bj{c}}}}}}e}{{l{{Bj{c}}}}}Bl{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{n}}}}Eh}{{l{Ej}}}}{{{f{{l{El}}}}Eh}{{l{Ej}}}}{{{f{{l{Ab}}}}Eh}{{l{Ej}}}}{{{f{{l{c}}}}Eh}{{l{Ej}}}Ah}{{{f{{l{A`}}}}Eh}{{l{Ej}}}}{{{f{{l{A`}}}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{El}}}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}Ah}{{{f{{l{n}}}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Ab}}}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Ab}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{{Bj{c}}}}}}}{{Bd{{l{Ej}}Bb}}}Bl}{{{f{{l{n}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{Ej}}Bb}}}Ah}`{{{f{{l{Bn}}}}}{{f{{l{Bn}}}}}}{{{f{{l{n}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}}{{f{{l{Ab}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{n}}}}}{{f{{l{n}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}{{{l{A`}}{l{A`}}}}102201{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}Ah}{{{f{{l{n}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Bn}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{El}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}Ah{{Df{}{{Dd{}}}}Dh}Ah}7561432{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fb}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FbAl}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fl{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}``{{{f{{l{c}}}}}{{Bd{{f{Af}}Bb}}}Ah}{{{f{{l{c}}}}}{{`{Fn}}}Ah}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}e}{}Ah{AjAl}}{{{l{c}}e}{}Ah{AjAl}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Ffb}0{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{G`{c}}}}}Db}{{{f{{l{n}}}}{f{An}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}AhAl}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}Ah}501627483{{{f{{l{Bn}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bAh}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ah}{{{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Bn}}}}{f{{l{A`}}}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{A`}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{j}}}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{{Bj{c}}}}}}{f{{l{A`}}}}}{{Bd{{l{{Bj{c}}}}Bb}}}Bl}{{{f{{l{El}}}}{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}{f{{l{A`}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}Ah}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{A`}}}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{l{{Bj{c}}}}}}{f{ClGh}}}{{Bd{bGj}}}Bl}{{{f{{l{c}}}}{f{ClGh}}}{{Bd{bGj}}}Ah}{{{f{{l{n}}}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{l{Bn}}}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{l{Ab}}}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{l{j}}}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{Bn}}}}c}b{{Dn{{C`{Dl}}}}}}{c{{l{e}}}Cd{{Db{}{{Gl{c}}}}}}{cc{}}0{{{f{An}}c}{{l{e}}}Gn{{Db{}{{Gl{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{Gl{}}}}Db}Gn}{{{f{An}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{An}}{Fl{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}{c{{l{A`}}}{{Gn{}{{Cb{d}}}}}}{c{{l{A`}}}{{Gn{}{{Cb{{C`{d}}}}}}}}{e{{l{n}}}{{Hb{An}}}{{Gn{}{{Cb{c}}}}}}{c{{l{e}}}{{Gn{}{{Cb{{Gf{Fl{C`{Hd}}}}}}}}}Ah}{e{{l{{Bj{c}}}}}Bl{{Gn{}{{Cb{{C`{c}}}}}}}}{e{{l{j}}}{{Hf{B`}}}{{Gn{}{{Cb{c}}}}}}{c{{l{j}}}{{Gn{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{c{{l{e}}}{{Gn{}{{Cb{C`}}}}}Ah}{e{{l{Ab}}}{{Hb{{Af{Ad}}}}}{{Gn{}{{Cb{c}}}}}}{e{{l{n}}}{{Hh{An}}}{{Gn{}{{Cb{{C`{c}}}}}}}}{c{{l{j}}}{{Gn{}{{Cb{{C`{B`}}}}}}}}{e{{l{Ab}}}{{Hh{{Af{Ad}}}}}{{Gn{}{{Cb{{C`{c}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{An}}e}{{l{n}}}{{Hh{An}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{Ab}}}{{Hh{{Af{Ad}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}Ah}{c{{l{A`}}}{{Gn{}{{Cb{d}}}}}}<={e{{l{El}}}{{Hh{{Af{Ad}}}}}{{Gn{}{{Cb{{C`{c}}}}}}}}89;{e{{l{El}}}{{Hb{{Af{Ad}}}}}{{Gn{}{{Cb{c}}}}}}{e{{l{n}}}{{Hb{An}}}{{Gn{}{{Cb{c}}}}}}{c{{l{A`}}}{{Gn{}{{Cb{{C`{d}}}}}}}}=:{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Ch{}{{Cb{c}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}Ah}{{{f{An}}e}{{l{Ab}}}{{Hh{{Af{Ad}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{An}}e}{{l{n}}}{{Hh{An}}}{{Ch{}{{Cb{c}}}}}}{{{f{An}}c}{{l{A`}}}{{Ch{}{{Cb{d}}}}}}`{c{{l{e}}}{{Hj{}{{Cb{C`}}}}}Ah}{e{{l{Ab}}}{{Hh{{Af{Ad}}}}HlHn}{{Hj{}{{Cb{{C`{c}}}}}}}}{e{{l{n}}}{{Hh{An}}HlHn}{{Hj{}{{Cb{{C`{c}}}}}}}}{c{{l{A`}}}{{Hj{}{{Cb{d}}}}}}{c{{l{j}}}{{Hj{}{{Cb{{C`{B`}}}}}}}}{c{{l{A`}}}{{Hj{}{{Cb{{C`{d}}}}}}}}{e{{l{n}}}{{Hb{An}}HlHnI`}{{Hj{}{{Cb{c}}}}}}{e{{l{Ab}}}{{Hb{{Af{Ad}}}}HlHnI`}{{Hj{}{{Cb{c}}}}}}{{c{f{An}}Ed}{{l{j}}}{{Hj{}{{Cb{{C`{B`}}}}}}}}{{{f{An}}{f{{Af{c}}}}}{{l{Ab}}}{{Hh{{Af{Ad}}}}}}{{{f{An}}{f{{Af{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{f{{Af{d}}}}}{{l{A`}}}}{{{f{An}}{f{{Af{c}}}}}{{l{n}}}{{Hh{An}}}}{{{f{An}}{f{Af}}}{{l{c}}}Ah}{{{f{An}}{f{{Af{{C`{c}}}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{f{{Af{{C`{d}}}}}}}{{l{A`}}}}{{{f{An}}{f{{Af{{C`{c}}}}}}}{{l{n}}}{{Hh{An}}}}{{{f{An}}{f{{Af{{C`{c}}}}}}}{{l{Ab}}}{{Hh{{Af{Ad}}}}}}{{{f{An}}{f{{Af{C`}}}}}{{l{c}}}Ah}{c{{l{A`}}}{{Ib{}{{Cb{{C`{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cb{C`}}}}}Ah}{{{f{An}}Fl}{{l{c}}}Ah}{{{f{An}}Fl{C`{Hd}}}{{l{c}}}Ah}{{{f{An}}{f{An}}Ff}{{l{n}}}}{{{f{An}}Ff}{{l{c}}}Ah}{{{f{An}}{f{B`}}Ff}{{l{j}}}}{{{f{An}}{f{{Af{Ad}}}}Ff}{{l{El}}}}{{{f{An}}{f{{Af{Ad}}}}Ff}{{l{Ab}}}}{{{f{An}}{f{B`}}Ff}{{l{Bn}}}}{{{f{An}}dFf}{{l{A`}}}}{{{f{An}}cFf}{{l{{Bj{c}}}}}Bl}{{{f{An}}Ff}{{l{{Bj{c}}}}}Bl}{{{f{An}}Ff}{{l{A`}}}}{{{f{An}}Ff}{{l{j}}}}{{{f{An}}Ff}{{l{n}}}}{{{f{An}}Ff}{{l{El}}}};{{{f{An}}Ff}{{l{Bn}}}}{{{f{An}}Ff}{{l{Ab}}}}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{An}}Ff{f{Ed}}}{{l{j}}}}{{{f{An}}Ff{f{Ed}}Ff}{{l{Bn}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{{Bj{c}}}}}}Ff}{{Bd{IdBb}}}Bl}{{{f{{l{j}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{Ab}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{Bn}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{n}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{c}}}}Ff}{{Bd{IdBb}}}Ah}{{{f{{l{A`}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{El}}}}Ff}{{Bd{IdBb}}}}{{{f{{l{j}}}}Ff}Id}{{{f{{l{{Bj{c}}}}}}Ff}IdBl}{{{f{{l{El}}}}Ff}Id}{{{f{{l{Bn}}}}Ff}Id}{{{f{{l{Ab}}}}Ff}Id}{{{f{{l{n}}}}Ff}Id}{{{f{{l{c}}}}Ff}IdAh}{{{f{{l{A`}}}}Ff}Id}{{{f{{l{Bn}}}}Ff}{{C`{B`}}}}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}IfDb}{{{f{{l{Bn}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{{Bj{c}}}}}}Ff}{{C`{{f{Ih}}}}}Bl}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{n}}}}}Ff}{{{f{{l{j}}}}}Ff}{{{f{{l{El}}}}}Ff}{{{f{{l{Bn}}}}}Ff}{{{f{{l{{Bj{c}}}}}}dd}{{Bd{BhBb}}}Bl}{{{f{{l{El}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Bn}}}}dd}{{Bd{BhBb}}}}{{{f{{l{n}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ab}}}}dd}{{Bd{BhBb}}}}{{{f{{l{A`}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}Ah}{{{f{{l{c}}}}FfdFf}BhF`}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}Ah}{{{f{{l{n}}}}{f{An}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}AhAl}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{A`}}}}073285146{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfIj{C`{Il}}}{{l{c}}}Ah}{{{f{{l{j}}}}}Ed}{{{f{{l{Bn}}}}}Ed}{ce{}{}}0{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}Jf{C`{Ef}}}{{Jb{JhJd}}}}{{{l{Jj}}{C`{Ff}}Ff}{{Bd{{Jb{JlJj}}Bb}}}}{{{l{Jj}}{C`{Ff}}Ff}{{Jb{JlJj}}}}{{{l{Jd}}Jf}{{Jb{JnJd}}}}{{{f{{l{{Bj{c}}}}}}}{}Bl}{{{f{{l{c}}}}}{}Ah}{{{f{{l{Ab}}}}}}{{{f{{l{Bn}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{El}}}}}}{{{f{{l{j}}}}}}{{{f{{l{n}}}}}}{{{f{{l{c}}}}}{{`{HlHnK`FnIb}}}Ah}{{{l{c}}}B`Db}{{{l{Jj}}}B`}{{{l{Jd}}}{{Jb{KbJd}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{A`}}}Kd}000{{{f{{l{c}}}}}{{l{A`}}}Db}02{{{f{{l{c}}}}}KfDb}{{{f{{l{c}}}}}{{`{Kh}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gb}}}}}}}}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hd}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{Kj{c}}}Db}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{f{{l{c}}}}}{}Ah}{{{l{c}}}{}Ah}10{{{f{{l{c}}}}}FfDb}{{{f{{l{c}}}}e}{{l{c}}}Ah{AjKl}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{c}}}}e}{{l{A`}}}AhAl}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}Ah}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{n}}}}{f{An}}}{{l{A`}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{A`}}}}276805134{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`Ah}{{{f{{l{c}}}}}KnAh}{{{f{{l{Ab}}}}}Kn}{{{f{{l{n}}}}}Kn}{{{f{{l{A`}}}}}Kn}{{{f{{l{c}}}}}{{C`{L`}}}Ah}{{{f{{l{A`}}}}}{{C`{L`}}}}{{{f{{l{Eb}}}}}{{C`{Ij}}}}{{{f{{l{c}}}}}{{C`{L`}}}F`}{{{f{{l{E`}}}}}{{C`{L`}}}}{{{f{{l{c}}}}}KnF`}{{{f{{l{Eb}}}}}Kn}{{{f{{l{E`}}}}}Kn}`{{{f{{l{c}}}}}{{C`{{f{{G`{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lb{{G`{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lb{{G`{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lb{{G`{c}}}}}Db}{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`Ah}{{{f{{l{c}}}}}{{C`{Gf}}}Ah}{{{f{{l{n}}}}}Kn}{{{f{{l{A`}}}}}Kn}{{{f{{l{c}}}}}KnAh}{{{f{{l{Ab}}}}}Kn}{{{f{An}}{f{{Af{Ad}}}}FfFf}{{l{A`}}}}{{{f{An}}{f{Af}}}{{l{c}}}Ah}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}e}{}Ah{AjAl}}{{{l{c}}e}{}Ah{AjAl}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}{{Bd{FfBb}}}Ah}{{{f{{l{n}}}}}{{Bd{FfBb}}}}{{{f{{l{Ab}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{f{An}}}Db}{{{f{An}}c}{{l{n}}}{{Hh{{Af{Ef}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hh{{Af{{C`{Ij}}}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{C`{{f{{Af{Ad}}}}}}}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{Fl{Ad}}}}}}}}{{{f{An}}c}{{l{E`}}}{{Hh{{Af{{C`{L`}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hh{{Af{{C`{{f{An}}}}}}}}}}{{{f{An}}c}{{l{Ld}}}{{Hh{{Af{Lf}}}}}}{{{f{An}}c}{{l{n}}}{{Hh{{Af{{C`{Ef}}}}}}}}{{{f{An}}{Lj{Lh}}}{{l{In}}}}{{{f{An}}c}{{l{Ll}}}{{Hh{{Af{{C`{Ad}}}}}}}}{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Hh{{Af{{C`{c}}}}}}}}{{{f{An}}c}{{l{In}}}{{Hh{{Af{{C`{Lh}}}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hh{{Af{Ij}}}}}}{{{f{An}}c}{{l{In}}}{{Hh{{Af{Lh}}}}}}{{{f{An}}c}{{l{Jd}}}{{Hh{{Af{Gb}}}}}}{{{f{An}}c}{{l{n}}}{{Hh{{Af{{f{An}}}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hh{{Af{{C`{M`}}}}}}}}{{{f{An}}c}{{l{E`}}}{{Hh{{Af{L`}}}}}}{{{f{An}}{Lj{Gb}}}{{l{Jd}}}}{{{f{An}}c}{{l{Mb}}}{{Hh{{Af{Md}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{C`{{Fl{Ad}}}}}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{C`{{Dj{{Af{Ad}}}}}}}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{f{{Af{Ad}}}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hh{{Af{d}}}}}}{{{f{An}}c}{{l{Mb}}}{{Hh{{Af{{C`{Md}}}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hh{{Af{M`}}}}}}{{{f{An}}c}{{l{Mf}}}{{Hh{{Af{{C`{Il}}}}}}}}{{{f{An}}{Lj{Mh}}}{{l{Ej}}}}{{{f{An}}c}{{l{Ld}}}{{Hh{{Af{{C`{Lf}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hh{{Af{{C`{{Dj{An}}}}}}}}}}{{{f{An}}c}{{l{Mf}}}{{Hh{{Af{Il}}}}}}{{{f{An}}{Lj{Il}}}{{l{Mf}}}}{{{f{An}}c}{{l{Jd}}}{{Hh{{Af{{C`{Gb}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hh{{Af{{C`{d}}}}}}}}{{{f{An}}c}{{l{Ej}}}{{Hh{{Af{{C`{Mh}}}}}}}}{{{f{An}}{f{{Af{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}c}{{l{Ll}}}{{Hh{{Af{Ad}}}}}}{{{f{An}}c}{{l{n}}}{{Hh{{Af{{Dj{An}}}}}}}}{{{f{An}}c}{{l{Ej}}}{{Hh{{Af{Mh}}}}}}{{{f{An}}c}{{l{Ab}}}{{Hh{{Af{{Dj{{Af{Ad}}}}}}}}}}{{{f{An}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{n}}}}FfFf}{{l{n}}}}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{{Bj{c}}}}}}FfFf}{{l{{Bj{c}}}}}Bl}{{{f{{l{c}}}}FfFf}{{l{c}}}Ah}{{{f{{l{A`}}}}FfFf}{{l{A`}}}}{{{f{{l{El}}}}FfFf}{{l{El}}}}{{{f{{l{Ab}}}}FfFf}{{l{Ab}}}}{{{f{{l{Bn}}}}FfFf}{{l{Bn}}}}{{{f{An}}{Fl{c}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{Fl{c}}Hd}{{l{{Bj{c}}}}}Bl}{{{f{An}}Fl}{{l{c}}}Ah}{{{Lb{Mj}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lb{Mj}}{Fl{{Cf{Cd}}}}MhMh}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{l{A`}}}}{{{f{{l{A`}}}}}}{{{f{{l{n}}}}{f{An}}}{{l{A`}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}Ah}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}AhAl}76{{{f{{l{Bn}}}}{f{{l{Bn}}}}}}153946{{{f{{l{c}}}}}FfDb}`{{{f{{l{Bn}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gd{Gb}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Ml{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{n}}}}}{{`{{Ml{}{{Cb{{C`{{f{An}}}}}}}}}}}}{{{f{{l{n}}}}}{{`{Mn}}}}{{{f{Cl{l{j}}}}}{{`{Mn}}}}{{{f{{l{c}}}}}KnAh}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{E`}}}}L`N`}{{Bd{{C`{L`}}Bb}}}}{{{f{{l{c}}}}L`N`}{{Bd{{C`{L`}}Bb}}}F`}{{{f{{l{Eb}}}}L`N`}{{Bd{{C`{Ij}}Bb}}}}{{{f{{l{E`}}}}L`N`}{{Bd{KnBb}}}}{{{f{{l{Eb}}}}L`N`}{{Bd{KnBb}}}}{{{f{{l{c}}}}L`N`}{{Bd{KnBb}}}F`}{{{f{An}}FfL`}{{Bd{{l{A`}}Bb}}}}{{{f{An}}FfL`L`}{{Bd{{l{c}}Bb}}}Ah}{{{f{An}}Ff}{{l{c}}}Ah}{{{f{An}}FfL`L`}{{l{c}}}Ah}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Mj}}}Db}{{{f{{l{Mb}}}}}B`}{{{f{{l{Ej}}}}}B`}{{{f{{l{Ld}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{Ll}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{In}}}}}B`}982103:4756{{{f{{l{c}}}}e}{}Ah{AjAl}}{{{l{c}}e}{}Ah{AjAl}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{An}}}bDb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{El}}}}}{{l{El}}}}{{{f{{l{{Bj{c}}}}}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{c}}}}}{{l{c}}}Ah}{{{f{{l{Bn}}}}}{{l{Bn}}}}{{{f{{l{c}}}}{f{Df}}Nb}{{Bd{B`Bb}}}Ah}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kd{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}L`dd{C`{Il}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{Il}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{n}}}}{f{{Af{Mh}}}}c}{{Bd{B`Bb}}}{{Gn{}{{Cb{{C`{{f{An}}}}}}}}}}{{{f{{l{A`}}}}{f{{Af{Mh}}}}c}{{Bd{B`Bb}}}{{Gn{}{{Cb{{C`{d}}}}}}}}{{{l{c}}{f{{Af{Mh}}}}e}{{Bd{B`Bb}}}Nd{{Gn{}{{Cb{C`}}}}}}{{{f{{l{A`}}}}c{C`{d}}}{{Bd{{l{A`}}Bb}}}{{Gn{}{{Cb{Mh}}}}}}{{{f{{l{Ab}}}}c{C`{{f{{Af{Ad}}}}}}}{{Bd{{l{Ab}}Bb}}}{{Gn{}{{Cb{Mh}}}}}}{{{f{{l{n}}}}c{C`{{f{An}}}}}{{Bd{{l{n}}Bb}}}{{Gn{}{{Cb{Mh}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}Ah{{Gn{}{{Cb{Mh}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Gn{}{{Cb{Mh}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{Ab}}}}ce}{{Bd{{l{Ab}}Bb}}}{{Gn{}{{Cb{Mh}}}}}{{Df{{C`{{f{{Af{Ad}}}}}}}{{Dd{{C`{{Fl{Ad}}}}}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{Gn{}{{Cb{Mh}}}}}{{Df{{C`{{f{An}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}Ah{{Gn{}{{Cb{Mh}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{Ab}}}}{f{{l{A`}}}}{C`{{f{{Af{Ad}}}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}{C`{d}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}{f{{l{A`}}}}C`}{{Bd{{l{c}}Bb}}}Ah}{{{f{{l{n}}}}{f{{l{A`}}}}{C`{{f{An}}}}}{{Bd{{l{n}}Bb}}}}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Mh}bDb}{{{f{Cl{l{c}}}}Kf}bDb}{{{f{{l{El}}}}Gb}{{l{El}}}}{{{f{{l{n}}}}Gb}{{l{n}}}}{{{f{{l{c}}}}Gb}{{l{c}}}Ah}{{{f{{l{{Bj{c}}}}}}Gb}{{l{{Bj{c}}}}}Bl}{{{f{{l{A`}}}}Gb}{{l{A`}}}}{{{f{{l{Bn}}}}Gb}{{l{Bn}}}}{{{f{{l{Ab}}}}Gb}{{l{Ab}}}}{{{f{{l{j}}}}Gb}{{l{j}}}}{{{f{{l{A`}}}}Gb{C`{d}}}{{l{A`}}}}{{{f{{l{j}}}}Gb{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{{Bj{c}}}}}}Gb{C`{{Bj{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{Ab}}}}Gb{C`{{f{{Af{Ad}}}}}}}{{l{Ab}}}}{{{f{{l{c}}}}GbC`}{{l{c}}}Ah}{{{f{{l{El}}}}Gb{C`{{f{{Af{Ad}}}}}}}{{l{El}}}}{{{f{{l{Bn}}}}Gb{C`{{f{B`}}}}}{{l{Bn}}}}{{{f{{l{n}}}}Gb{C`{{f{An}}}}}{{l{n}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GbFf}{{l{c}}}Db}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{Ab}}}}d}{{l{Ab}}}}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{c}}}}d}{{l{c}}}Ah}{{{f{{l{El}}}}d}{{l{El}}}}{{{f{{l{Ab}}}}Eh}{{l{Ab}}}}{{{f{{l{c}}}}Eh}{{l{c}}}Ah}{{{f{{l{El}}}}Eh}{{l{El}}}}{{{f{{l{A`}}}}Eh}{{l{A`}}}}{{{f{{l{n}}}}Eh}{{l{n}}}}{{{f{{l{c}}}}Ad}{{C`{L`}}}Ah}{{{f{{l{c}}}}Ad}KnF`}{{{f{{l{E`}}}}Ad}Kn}{{{f{{l{Eb}}}}Ad}Kn}{{{l{c}}e}{}Ah{AjAl}}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{f{{l{c}}}}e}{}Ah{AjAl}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{A`}}}}}{{C`{Mh}}}}{{{f{{l{c}}}}}C`Ah}{{{f{{l{c}}}}}KnAh}{{{f{{l{Ab}}}}}Kn}{{{f{{l{A`}}}}}Kn}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hh{{Af{Mh}}}}Nf}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{Af{Nh}}}}Kf}{{l{c}}}Db}{{{f{{l{c}}}}{f{{Af{Nh}}}}}{{l{c}}}Db}{{{f{{l{n}}}}{f{{l{Ej}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{l{Ej}}}}}{{l{Ab}}}}{{{f{{l{n}}}}{f{c}}}{{l{n}}}{{Hh{{Af{Mh}}}}Nf}}{{{f{{l{Ab}}}}{f{c}}}{{l{Ab}}}{{Hh{{Af{Mh}}}}Nf}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{l{c}}}{{Db{}{{Nj{D`}}}}Db}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nj{D`}}}}Db}{{Hh{{Af{Mh}}}}Nf}}`{{{f{{l{c}}}}dNl}{{Fl{{Fl{Nn}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{n}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{Bn}}}}Ed}b}{{{f{{l{j}}}}}{{Bd{{Of{O`{Od{{Ob{Ff}}}}}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{Of{{Oh{f}}{Od{{Ob{Ff}}}}}}Bb}}}Ah}{{{f{c}}}e{}{}}{{{f{{l{Ab}}}}}{{l{n}}}}{{{f{{l{c}}}}}{{Fl{C`}}}Ah}{{{f{{l{c}}}}}{{Oj{Fl{Fl{C`}}}}}Ah}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}}{}Ah}{{{l{c}}}{}Ah}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bn}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{Bd{{l{Bn}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{An}}g}{{Bd{{l{i}}e}}}Cd{}{{Gn{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{Gl{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}Ol{}}0{{{f{{l{{Bj{c}}}}}}}{{Bd{{l{{Bj{c}}}}Bb}}}Bl}{{{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ah}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Ad}{{C`{L`}}}Ah}{{{f{{l{c}}}}Ad}KnF`}{{{f{{l{E`}}}}Ad}Kn}{{{f{{l{Eb}}}}Ad}Kn}{{{f{{l{A`}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bj{c}}}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}Bl}{{{f{{l{Eb}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bj{c}}}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}Bl}{{{f{{l{E`}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bn}}}}}Ff}{{{f{An}}c}{{l{e}}}Cd{{Db{}{{Gl{c}}}}Db}}{{{f{{l{c}}}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{An}}}{{l{c}}}Db}{{{f{{Af{On}}}}e}c{}{{A@`{{f{{l{Ej}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kf}{{l{c}}}Db}{{{f{{l{c}}}}}{}Ah}{{{l{c}}}{}Ah}{{{l{c}}{l{c}}}{}Ah}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ah}32102332012323103223013232103223{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bn}}}}{f{{l{c}}}}e}{{l{Bn}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@j}}{f{Cd}}}b}{{{f{ClA@j}}}b}{{{f{ClA@l}}}b}{{{f{ClA@n}}c}b{{Ch{}{{Cb{{C`{d}}}}}}Ib}}{{{f{Cl{AA`{c}}}}e}bAh{{Ch{}{{Cb{C`}}}}Ib}}{{{f{Cl{AA`{c}}}}e}bAh{{Ch{}{{Cb{}}}}Ib}}{{{f{ClAAb}}}b}{{{f{ClAAd}}}b}65{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}{{{f{ClA@n}}}b}{{{f{ClAAj}}}b}{{{f{Cl{AA`{c}}}}}bAh}{{{f{Cl{AAl{c}}}}}b{AAnNf}}{{{f{ClAB`}}}b}{{{f{ClABb}}}b}{{{f{Cl{ABd{c}}}}}bAh}{{{f{ClA@j}}{C`{{f{Cd}}}}}b}{{{f{ClA@j}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AA`{c}}}}{C`{{f{Af}}}}}bAh}{{{f{Cl{AAl{c}}}}{C`{e}}}b{AAnNf}{{Hh{c}}}}{{{f{ClAAd}}{C`{c}}}b{}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@j}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AA`{c}}}}{f{B`}}}{{Bd{bBb}}}Ah}{{{f{Cl{AA`{c}}}}{f{Af}}}bAh}{{{f{ClAAf}}c}b{{Ch{}{{Cb{{C`{{f{An}}}}}}}}Ib}}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{C`{{f{{Af{Ad}}}}}}}}}}Ib}}{{{f{ClAAd}}c}b{}}{{{f{Cl{AAl{c}}}}e}b{AAnNf}{{Hh{c}}}}{{{f{ClAB`}}d}b}{{{f{Cl{ABd{c}}}}}bAh}{{{f{ClAAf}}c}b{{Ch{}{{Cb{{f{An}}}}}}}}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{f{{Af{Ad}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AAl{c}}}}}{{AAl{c}}}{AAnNf}}{{{f{AB`}}}AB`}{{{f{ABb}}}ABb}{{{f{{ABd{c}}}}}{{ABd{c}}}{ABfAh}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@j}{{}A@l}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{AAf}}}d}{{{f{AAh}}}d}{{{f{A@n}}}d}{{{f{{AA`{c}}}}}dAh}{{{f{AAb}}}d}{{{f{AAf}}}{{f{Mj}}}}{{{f{AAh}}}{{f{Mj}}}}{{{f{A@n}}}{{f{Mj}}}}{{{f{{AA`{c}}}}}{{f{Mj}}}Ah}{{{f{AAb}}}{{f{Mj}}}}{AAd{{l{c}}}Db}{{{f{ClA@j}}}{{l{j}}}}{{{f{ClA@l}}}{{l{j}}}}{{{f{ClAAj}}}{{l{j}}}}{{{f{ClAAb}}}{{l{j}}}}{{{AAl{{Af{Ad}}}}}{{l{Ab}}}}{{{AAl{An}}}{{l{n}}}}{AB`{{l{A`}}}}{ABbABh}{{{ABd{c}}}{{l{c}}}Ah}`{cc{}}0000000000{{{f{An}}e}ABj{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ABj{}{{Ch{}{{Cb{c}}}}}}{{{f{An}}{f{{Af{c}}}}}ABj{}}{{{f{An}}{f{{Af{{C`{c}}}}}}}ABj{}}{{{f{Ed}}FfFf{f{An}}}{{Bd{{Cf{AAb}}Bb}}}}{{}Ff}0000000000{{{f{ClAAf}}}{{Cf{Cd}}}}{{{f{ClAAh}}}{{Cf{Cd}}}}{{{f{ClA@n}}}{{Cf{Cd}}}}{{{f{Cl{AA`{c}}}}}{{Cf{Cd}}}Ah}{{{f{ClAAb}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{An}}Ff{C`{Ed}}}A@j}{{{f{An}}Ff{C`{Ed}}}A@l}{{{f{An}}FfFf}AAf}{{{f{An}}FfFf}AAh}{{{f{An}}FfFf}A@n}{{{f{An}}Ff}AAj}{{{f{An}}FfFfEd}{{AA`{c}}}Ah}{{{f{An}}Ff}{{AAl{c}}}{AAnNf}}{{{f{An}}Ff}AB`}{{{f{An}}Ff}ABb}{{{f{An}}Ff}{{ABd{c}}}Ah}{{{f{An}}FfFfEdEd}{{AA`{c}}}Ah}{{{f{ClAAd}}}b}{{{f{ClAB`}}}b}{{{f{ClABb}}}b}{{{f{Cl{ABd{c}}}}}bAh}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}Ol{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAb}}}b}{{{f{ClAAb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAb}}}d}{{{f{AAb}}}{{f{Mj}}}}{{{f{ClAAb}}}{{l{j}}}}{{{f{Ed}}FfFf{f{An}}}{{Bd{{Cf{AAb}}Bb}}}}{{{f{ClAAb}}}{{Cf{Cd}}}}``{{ABl{f{An}}}{{l{c}}}Db}{{ABn{f{{l{c}}}}}{{l{c}}}Db}10{{ABn{f{An}}Ed}{{l{c}}}Db}0{{ABl{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ABn{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{AC`AC`}``{{ACb{f{An}}Ed}e{}{{ACd{c}}}}{{e{f{An}}Ed}ACd{}{{Hj{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ACf}}}ACh}{{{f{ACj}}Ed}ACl}{{{f{ClACh}}}C`}{{{f{ClACl}}}C`}{{{f{ClACn}}}C`}{{{f{Cl{AD`{c}}}}}C`Ch}32{{{f{Cl{AD`{c}}}}}C`Fn}`{{{f{ACh}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{ACl}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{{AD`{c}}}}}{{Gf{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}Ol{}}000<<<<````````{{{f{c}}h}b{}}0{{}If}{{IfIf}If}{{{f{ClIf}}If}b}10{{{f{If}}}Ad}021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{{G`{c}}}}}{{G`{e}}}DbDb}{{{f{{G`{c}}}}}{{G`{c}}}Db}{{{f{If}}}If}{{{f{c}}{f{Cle}}}b{}{}}0{IfIf}{{{f{If}}If}d}{{}{{G`{c}}}Db}<{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0={Ffb}0?{{{f{If}}{f{If}}}d}{{{f{ClIf}}c}b{{Gn{}{{Cb{If}}}}}}{{{f{{G`{c}}}}{f{ClGh}}}{{Bd{bGj}}}Db}{{{f{If}}{f{ClGh}}}{{Bd{bGj}}}}0000{cc{}}0{Ad{{C`{If}}}}{AdIf}00{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}{cIf{{Gn{}{{Cb{If}}}}}}{{{f{An}}}{{C`{If}}}}{{{f{{G`{c}}}}}{{C`{Mh}}}Db}{{{f{{G`{c}}}}}dDb}{{{f{{G`{c}}}}}IfDb}{{{f{{G`{c}}}}}{{C`{f}}}Db}0{{{f{If}}}Kf}{{}Ff}0{{{f{ClIf}}If}b}{{IfIf}If}{{{f{If}}If}d}{ce{}{}}0{If}{{{f{If}}}d}0{{{f{{G`{c}}}}}KfDb};;{{{f{If}}}{{ADb{If}}}}{{{f{If}}}{{ADd{If}}}}{IfIf}9{{{f{ClIf}}Ifd}b}{{{f{Cl{G`{c}}}}Mh}bDb}{{{f{Cl{G`{c}}}}d}bDb}{{{f{Cl{G`{c}}}}If}bDb}{{{f{Cl{G`{c}}}}}bDb}022{{{f{Cl{G`{c}}}}Kf}bDb}{{{f{ClIf}}Kf}b}?{{{f{ClIf}}If}b}{{IfIf}If}{{{f{c}}}e{}{}}02{c{{Bd{e}}}{}{}}000{{{f{c}}}Ol{}}03{ce{}{}}0````{{{f{c}}h}b{}}{e{{ADf{c}}}Bl{{Gn{}{{Cb{{f{c}}}}}}}}{e{{ADf{c}}}Bl{{Gn{}{{Cb{{C`{{f{c}}}}}}}}}}{{ADhe}g{}{{Gn{}{{Cb{c}}}}}{}}0{{{f{Ih}}}{{f{ADj}}}}{{{f{{ADf{c}}}}}{{f{ADj}}}Bl}{{{f{Cl{ADf{c}}}}}{{f{ClADj}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{ADf{c}}}}}{{ADf{c}}}{ABfBl}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{ADf{c}}}}}{{f{ADh}}}Bl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{Ih}}}}{f{{f{Ih}}}}}d}{{{f{Ih}}{f{Ih}}}d}{{{f{{ADf{c}}}}{f{ClGh}}}{{Bd{bGj}}}{ADlBl}}{cc{}}{{FfADh}{{ADf{c}}}Bl}{{{f{{ADf{c}}}}Ff}{{C`{{f{c}}}}}Bl}{{}ADh}{{{f{Hd}}{f{{ADf{c}}}}{f{{ADf{c}}}}}{{ADf{c}}}Bl}{{ADh{f{Hd}}}{{ADf{c}}}Bl}{{{f{Hd}}{f{{ADf{c}}}}}{{ADf{c}}}Bl}0{{}Ff}{ce{}{}}{{{f{{ADf{c}}}}}{}Bl}{{{f{{ADf{c}}}}Ff}dBl}0{{{f{c}}Ff}d{}}{{{f{{ADf{c}}}}}{{AE`{ADn}}}Bl}{{{f{{ADf{c}}}}}{{AE`{{f{c}}{Fd{c}}ADn}}}Bl}{{{f{{ADf{c}}}}}FfBl}0`{{{f{Cl{ADf{c}}}}{C`{Hd}}}bBl}{{{f{Cl{ADf{c}}}}FfFf}bBl}{{{f{c}}FfFf}e{}{}}01{{{f{Ih}}}{{Cf{Ih}}}}{{{f{{ADf{c}}}}}{{Cf{Cd}}}Bl}{{{f{c}}}e{}{}}{g{{Bd{{ADf{c}}e}}}Bl{}{{Gn{}{{Cb{{Bd{{f{c}}e}}}}}}}}{g{{Bd{{ADf{c}}e}}}Bl{}{{Gn{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{{ADhg}{{Bd{ie}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{Ih}}}{{f{An}}}}{{}{{f{An}}}}{{{f{{ADf{c}}}}}{{C`{{f{Hd}}}}}Bl}{{{f{{ADf{c}}}}Ff}{{f{c}}}Bl}{{{f{{ADf{c}}}}Ff}{}Bl}1{{{f{{ADf{c}}}}}{{f{{Lb{{Fl{c}}}}}}}Bl}{{{f{{ADf{c}}}}}{{Fd{c}}}Bl}{{{f{{ADf{c}}}}}{}Bl}{ce{}{}}{{{ADf{c}}{C`{Hd}}}{{ADf{c}}}Bl}{{{f{{ADf{c}}}}{C`{Hd}}}{{Cf{Cd}}}Bl}1`{{{f{Cl{AEb{c}}}}}bBl}0{{{f{Cl{AEb{c}}}}{C`{c}}}bBl}{{{f{Cl{AEb{c}}}}{f{ADj}}}bBl}{{{f{Cl{AEb{c}}}}c}bBl}{{{f{Cl{AEb{c}}}}{f{ADj}}}{{Bd{bBb}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AEb{c}}}Bl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AEb{c}}}{{l{{Bj{c}}}}}Bl}{cc{}}{{}Ff}{ce{}{}}{{{f{An}}Ff}{{AEb{c}}}Bl}{{{f{Cl{AEb{c}}}}}B`Bl}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{ClAEd}}}b}{{{f{ClAEd}}{C`{{f{ADj}}}}}b}{{{f{ClAEd}}{f{ADj}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AEf}}{f{ClGh}}}{{Bd{bGj}}}}<{{{f{An}}Ff}{{Cf{AEd}}}}{{}{{Lb{Df}}}}{{}ADh}>={{}d}`{{{Cf{Df}}{Lb{Df}}ADh}b}{{{f{ClAEd}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AEl}}{f{Df}}}AEl}{{{f{AEl}}{f{Df}}}{{l{c}}}Db}{{{f{{AEj{}{{AEh{c}}}}}}i{f{Cl{Af{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AEn}}Eh}{{l{Ej}}}}{{{f{AEn}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AF`}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AFb}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{Eh}}}Eh}{{{f{En}}}En}{{{f{AFd}}}AFd}{{{f{c}}{f{Cle}}}b{}{}}00{{}Eh}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Eh}}{f{Eh}}}d}{{{f{En}}{f{En}}}d}{{{f{AFd}}{f{AFd}}}d}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFh}}}{{Bd{B`Bb}}}}{{{f{AFh}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{{f{AFj}}c}{{Bd{AFjBb}}}{}}{{{f{AFl}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Eh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{En}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AFd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{En}}}Eh}{cc{}}0{{{f{Eh}}}En}1`{{{f{An}}cFf}AFn{}}{{{f{An}}Ff}AG`}`{{{f{AGb}}Ff}{{Bd{IdBb}}}}{{{f{AGb}}Ff}Id}??{{{f{Eh}}{f{Clc}}}bAGd}{{{f{En}}{f{Clc}}}bAGd}{{{f{AFd}}{f{Clc}}}bAGd}{{}Ff}00{ce{}{}}00{{{f{AGf}}}{{Bd{{l{A`}}Bb}}}}{{{f{AGh}}}{{Bd{{l{A`}}Bb}}}}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AGj}}}{{C`{c}}}{}}{{{f{AGj}}}{{C`{L`}}}}{{{f{AGl}}}{{C`{c}}}{}}2{{{f{AGj}}}{{C`{{Gf{cc}}}}}{}}``{{{f{AF`}}}{{Bd{FfBb}}}}{{}Eh}{{}En}{{{f{AGn}}FfFf}{{l{c}}}Db}88``{{{f{AFh}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{AGl}}L`N`}{{Bd{{C`{c}}Bb}}}{}}{{{f{AH`}}}B`}0{{{f{AHb}}}AHb}{{{f{AHd}}{f{Df}}Nb}{{Bd{B`Bb}}}}{{{f{AHf}}c{C`{e}}}{{Bd{AHfBb}}}{{Gn{}{{Cb{Mh}}}}}{}}{{{f{AHf}}ci}{{Bd{AHfBb}}}{{Gn{}{{Cb{Mh}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AHf}}{f{{l{A`}}}}{C`{c}}}{{Bd{AHfBb}}}{}}{{{f{AHh}}Gb}{{l{c}}}Db}{{{f{AHj}}Gbc}{{l{e}}}{}Db}{{{f{AHl}}FfFf}AHl}0`{{{f{AEn}}d}{{l{c}}}Db}{{{f{AEn}}Eh}{{l{c}}}Db}{{{f{AHn}}Ad}{{C`{L`}}}}{{{f{AGj}}}{{C`{c}}}{}}{{{f{AI`}}{f{c}}}{{Bd{AI`Bb}}}Nf}{{{f{AIb}}{f{c}}}AIbNf}{{{f{AId}}}{{Fl{{f{{Af{Ad}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00{{{f{AF`}}}{{Bd{AF`Bb}}}}8{ce{}{}}00{{Ehd}Eh}{{End}En}101010{{Enc}En{{Gn{}{{Cb{d}}}}}}{EhEh}{EnEn}`{{{f{AIf}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AIh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAIj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AIl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAIn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAIn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAIn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAIj}AIn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJ`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJ`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAIj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}0{{{f{{l{c}}}}}FfAh}0{{KfKf}Kf}{{{f{{l{Ej}}}}Mh}{{Bd{bBb}}}}{{{f{{AJb{Mh}}}}Mh}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJdd}{{Fl{Mh}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AJd}}}AJd}{{{f{c}}{f{Cle}}}b{}{}}{{}AJd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AJd}}{f{AJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJd}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{f{AJd}}{f{Clc}}}bAGd}{{}Ff}{ce{}{}}{{{f{{Af{f}}}}cMhe}{{Fl{Mh}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4`{{Ff{f{Cl{Fl{d}}}}}b}```{{{f{AHl}}FfFf}AHl}0{{Ff{f{{Af{B`}}}}{f{ClEn}}}{{Bd{{AJf{{l{Ej}}}}Bb}}}}{{{f{{Af{B`}}}}{f{{Af{d}}}}d}{{Bd{AJhBb}}}}{{{f{An}}{f{{Af{B`}}}}{f{{Af{d}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{An}}{f{{Af{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Af{B`}}}}}{{Bd{AJhBb}}}}{{{f{{Af{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````77`{AJjGb}00{{{f{An}}}{{Bd{EfBb}}}}{{{f{An}}}{{Bd{AJlBb}}}}{{{f{AJn}}}Gb}333`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AK`}}c}AK`{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{AKb}}}d}{{{f{Id}}}{{`{{Ch{}{{Cb{Id}}}}}}}}{{{f{Id}}{f{Cl{Fl{Id}}}}}b}{{AKbd}AKb}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{Id}}{f{Id}}}Id}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AK`}}{f{Bh}}}B`}{{{f{ClAKd}}{C`{{f{An}}}}}b}{{{f{ClAKb}}{f{AKb}}}{{Bd{bBb}}}}{{{f{ClAKd}}}b}{{{f{ClAKd}}{f{An}}}b}{{{f{AKb}}Eh}{{l{Ej}}}}{eAKf{}{{Gn{}{{Cb{c}}}}}}0{{ADhe}AKh{}{{Gn{}{{Cb{c}}}}}}0{{{f{Kn}}}Id}{{{f{Id}}}Id}{{{f{{Jb{J`In}}}}}{{`{Ib}}}}{{{f{{Jb{JhJd}}}}}{{`{Ib}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Mj}}}{{f{Ed}}}}{{{f{AKj}}}{{f{Ed}}}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{{f{{Af{c}}}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{{Jb{KbJd}}}}}{{`{Ib}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{ALf{An}}}ALh}{{{f{AKb}}{f{AKb}}c}{{Bd{AKbBb}}}ALj}{{{f{ALl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jb{KbJd}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jb{J`In}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jb{JnJd}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jb{JhJd}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jb{JlJj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AKb}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AK`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{Id}}{f{Ed}}}Id}{{{f{{Jb{JhJd}}}}Jf}{{Jb{JhJd}}}}{{{f{{Jb{JnJd}}}}Jf}{{Jb{JnJd}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AK`}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{{Jb{ce}}}}}{{Jb{ce}}}DbDb}{{{f{ALn}}}ALn}{{{f{ALh}}}ALh}{{{f{AKb}}}AKb}{{{f{AK`}}}AK`}{{{f{Kn}}}Kn}{{{f{AM`}}}AM`}{{{f{Id}}}Id}{{{f{AMb}}}AMb}{{{f{Ed}}}Ed}{{{f{Mj}}}Mj}{{{f{Jf}}}Jf}{{{f{Ll}}}Ll}{{{f{Ld}}}Ld}{{{f{Ej}}}Ej}{{{f{Mf}}}Mf}{{{f{Ln}}}Ln}{{{f{Mb}}}Mb}{{{f{In}}}In}{{{f{Jd}}}Jd}{{{f{Eb}}}Eb}{{{f{E`}}}E`}{{{f{J`}}}J`}{{{f{Kb}}}Kb}{{{f{n}}}n}{{{f{Ab}}}Ab}{{{f{El}}}El}{{{f{A`}}}A`}{{{f{Jl}}}Jl}{{{f{Jh}}}Jh}{{{f{Jn}}}Jn}{{{f{AMd}}}AMd}{{{f{ADh}}}ADh}{{{f{AMf}}}AMf}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMj}}Ed}b}{AMhe{}{{AKf{c}}AIj}}0{{AMhADh}e{}{{AKh{c}}AIj}}0{{{f{Ed}}}d}00{{{ALf{An}}}Ed}{{{f{Mj}}}{{f{Ed}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}AMj}{{}ALn}{{}ALh}{{}Id}{{}AMb}{{}Ed}{{}ADh}{Ff{{f{c}}}{}}00{{{f{{Jb{ce}}}}}fDbDb}1111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}0{{{f{Cl{Jb{ce}}}}}{{f{Cl}}}DbDb}11111111111111111111111111111111111111111{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AKdc}AKb{{Gn{}{{Cb{{C`{{f{An}}}}}}}}}}{Ffb}0000000000000{{{f{ClAK`}}}b}11111111111111111111111111111{{{f{ALl}}}{{f{Ed}}}}{{{f{{Jb{KbJd}}}}}{{f{Ed}}}}{{{f{{Jb{JnJd}}}}}{{f{Ed}}}}{{{f{{Jb{JhJd}}}}}{{f{Ed}}}}{{{f{{Jb{JlJj}}}}}{{f{Ed}}}}{{{f{{Jb{J`In}}}}}{{f{Ed}}}}{{{f{AKb}}}{{f{Ed}}}}{{{f{AK`}}}{{f{Ed}}}}{{{f{Kn}}}{{f{Ed}}}}{{{f{Id}}}Ed}`{{{f{ALn}}{f{ALn}}}d}{{{f{Id}}{f{Id}}}d}{{{f{AMb}}{f{AMb}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ed}}{f{ADh}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{ADh}}{f{ADh}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Id}}{f{Id}}d}d}{{{f{AKb}}{f{AKb}}}}{{{f{AKb}}{f{An}}}}{{{f{AKb}}{f{{l{n}}}}}}{{{f{AK`}}{f{AK`}}}{{l{A`}}}}3210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jb{ce}}}}}MjDbDb}{{{f{AK`}}{f{An}}}{{Bd{B`Bb}}}}{{{f{AK`}}}{{f{{Af{B`}}}}}}{{{f{ClAK`}}}{{f{Cl{Fl{B`}}}}}}{{{f{ALh}}{f{An}}}{{C`{Mh}}}}{{ALj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{AKdAKb}{AMj{{Lb{ALh}}}}{{{f{ALn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{ALh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AM`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Id}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{AMb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Ed}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{Mj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Jf}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{ADh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AMf}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}0{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}}{{Jb{KbJd}}}}22222222222222{{{f{An}}}Id}{{{C`{c}}}Id{{AMl{Id}}}}{cIdAMn}{{{f{{Af{Ad}}}}}Id}{dId}777{{{f{ADh}}}Ed}{IdEd}{{{f{Id}}}Ed}{{{f{Id}}}Mj};{{{f{AN`}}}Mj}<{{{f{AMf}}}Jf}====================={ANbADh}{ANdADh}?{{{f{ADh}}d}Ed}{{{l{Ej}}{Lb{ALh}}dALn}AKb}{{{f{An}}cJf}{{Jb{JnJd}}}{{Gn{}{{Cb{ANf}}}}}}{{{f{An}}cJf}{{Jb{JnJd}}}{{Gn{}{{Cb{{C`{ANf}}}}}}}}{{{l{Ej}}ALn}AKb}{{{f{An}}c}{{Jb{J`In}}}{{Gn{}{{Cb{ANh}}}}}}{{{f{An}}c}{{Jb{J`In}}}{{Gn{}{{Cb{{C`{ANh}}}}}}}}{{{f{An}}cJf}{{Jb{JhJd}}}{{Gn{}{{Cb{AJj}}}}}}{{{f{An}}cJf}{{Jb{JhJd}}}{{Gn{}{{Cb{{C`{AJj}}}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Gn{}{{Cb{AJn}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Gn{}{{Cb{{C`{AJn}}}}}}}}{{{ANl{ANj}}Ed}Mj}{{{f{{l{n}}}}{f{{ALf{An}}}}ALn}{{Bd{AKbBb}}}}{{{Fl{c}}ADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{Fl{c}}ADh}{{AIj{}{{AKl{e}}{AKn{c}}{AL`{g}}}}}{ALb{ALd{e}}}ABf{{Fn{}{{Cb{e}}}}IbHlHn}}{{FfcADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{FfADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{An}}dFfALn}AKb}{{{f{An}}Ff}AK`}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{ALh}}Mh}{{f{An}}}}{{{f{{Jb{JlJj}}}}Ff}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Ff}{{Bd{IdBb}}}}{{{f{{Jb{KbJd}}}}Ff}{{Bd{IdBb}}}}{{{f{{Jb{JnJd}}}}Ff}{{Bd{IdBb}}}}{{{f{{Jb{JhJd}}}}Ff}{{Bd{IdBb}}}}{{{f{ALl}}Ff}{{Bd{IdBb}}}}{{{f{AKb}}Ff}{{Bd{IdBb}}}}{{{f{AK`}}Ff}{{Bd{IdBb}}}}{{{f{{Jb{JhJd}}}}Ff}Id}{{{f{{Jb{JlJj}}}}Ff}Id}{{{f{{Jb{JnJd}}}}Ff}Id}{{{f{{Jb{J`In}}}}Ff}Id}{{{f{{Jb{KbJd}}}}Ff}Id}{{{f{ALl}}Ff}Id}{{{f{AKb}}Ff}Id}{{{f{AK`}}Ff}Id}{{{f{ALh}}}{{f{{ALf{An}}}}}}{{}Ed}000000000000000000000000{{{f{ALh}}Mh}{{C`{{f{An}}}}}}{{{f{AKb}}}{{f{{Lb{ALh}}}}}}{{{f{Ed}}}{{C`{{Fl{Ff}}}}}}{{{f{Id}}}{{C`{{f{An}}}}}}{{{f{ANn}}Ff}Id}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{AKb}}{f{AKb}}}}{{{f{AKb}}{f{An}}}}{{{f{AKb}}{f{{l{n}}}}}}{{{f{AK`}}{f{AK`}}}{{l{A`}}}}1320{{{f{Id}}{f{Clc}}}bAGd}{{{f{AMb}}{f{Clc}}}bAGd}{{{f{Ed}}{f{Clc}}}bAGd}{{{f{Mj}}{f{Clc}}}bAGd}{{{f{Jf}}{f{Clc}}}bAGd}{{{f{ADh}}{f{Clc}}}bAGd}{{{f{AMf}}{f{Clc}}}bAGd}{{{f{Id}}{f{Clc}}d}bAGd}{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{ADh}}}{{C`{{f{ADh}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AK`}}}}{{{Jb{JlJj}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{KbJd}}}B`}{{{Jb{JhJd}}}B`}{{{Jb{J`In}}}B`}{AKbB`}{AK`B`}{{Kn{f{An}}}B`}{Id{{Bd{IdBb}}}}{{{f{Ed}}}d}00{{{f{Id}}}d}11{{{f{AKb}}}d}{{{f{AK`}}}d}1323{{{f{ALh}}}d}34440443434344443444434{{{f{ADh}}}d}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{AE`{cgADn}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{AK`}}}ACn}{{{f{AKb}}}AO`}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{Ed}}}{{f{Ed}}}}{{{f{ALh}}}Ff}{{{f{AKb}}}Ff}{{{f{AK`}}}Ff}{{{f{AKb}}{f{An}}}}{{{f{AKb}}{f{AKb}}}}{{{f{AKb}}{f{{l{n}}}}}}{{{f{AK`}}{f{AK`}}}{{l{A`}}}}2310{{{f{AKb}}{f{AKb}}}{{Bd{{Gf{AKbAKb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{AKb}}}Kn}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClAMj}}{f{{Lb{ALh}}}}}{{Bd{bBb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}03{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}1{{{f{{Jb{J`In}}}}{C`{{f{AJl}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{C`{{f{AJl}}}}}{{Bd{{Jb{JhJd}}Bb}}}}10{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AKb}}}{{Bd{FfBb}}}}{{{f{AKb}}}{{f{An}}}}{{{f{AK`}}}{{f{{ANl{ANj}}}}}}{{{f{Mj}}}{{f{{ANl{ANj}}}}}}`{{{f{{Jb{KbJd}}}}}{{l{In}}}}:{{}c{}}0{{{f{An}}FfALn}AKd}{{{f{An}}c}{{Jb{KbJd}}}{{Hh{{Af{{C`{AJn}}}}}}}}{{{f{An}}c}{{Jb{JhJd}}}{{Hh{{Af{AJj}}}}}}{{{f{An}}c}{{Jb{JnJd}}}{{Hh{{Af{ANf}}}}}}{{{f{An}}c}{{Jb{J`In}}}{{Hh{{Af{ANh}}}}}}{{{f{An}}c}{{Jb{JhJd}}}{{Hh{{Af{{C`{AJj}}}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Hh{{Af{AJn}}}}}}{{{f{An}}c}{{Jb{JnJd}}}{{Hh{{Af{{C`{ANf}}}}}}}}{{{f{An}}c}{{Jb{J`In}}}{{Hh{{Af{{C`{ANh}}}}}}}}{{{Lb{ALh}}}AMj}{{{f{An}}{f{{Af{B`}}}}}{{Bd{AK`Bb}}}}{{EdId}Kn}{{{f{An}}Ed}Mj}{{{f{ClAO`}}}C`}{{{f{AKb}}{f{{l{n}}}}}}{{{f{AKb}}{f{An}}}}{{{f{AKb}}{f{AKb}}}}{{{f{AK`}}{f{AK`}}}{{l{A`}}}}3120{{{f{AKb}}}Ff}{{{f{AK`}}}Ff}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{Id}}{f{Id}}}{{C`{AOb}}}}{{{f{Jf}}{f{Jf}}}{{C`{AOb}}}}{{{f{AKb}}}{{f{{l{Ej}}}}}}{{{f{{Jb{JlJj}}}}}{{C`{Ff}}}}{{{f{ClAK`}}}b}{{{f{AK`}}}{{f{Mj}}}}{{{f{ClAKd}}{f{An}}}{{Gf{Mhd}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAK`}}{f{An}}}b}{{{f{{Jb{J`In}}}}{f{{l{n}}}}AOd{C`{{f{AJl}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{f{{l{n}}}}AOd{C`{{f{AJl}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{AK`}}}{{Bd{{l{El}}Bb}}}}{{{f{ALh}}{f{ALh}}}d}{{{f{{Jb{JlJj}}}}}Ff}{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{{f{ClMj}}{ANl{ANj}}}b}{{{f{Cl{Jb{JnJd}}}}Jf}b}{{{f{Cl{Jb{JhJd}}}}Jf}b}{{{f{Cl{Jb{JhJd}}}}Ef}{{Bd{bBb}}}}{{{f{AO`}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{AKb}}d}AKb}{{{f{AKb}}Eh}AKb}{{{f{{Jb{J`In}}}}{f{An}}}{{l{n}}}}{{{f{{Jb{JhJd}}}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{{Jb{KbJd}}}}{f{An}}}{{l{n}}}}{{{f{Id}}{f{Ed}}}{{C`{Id}}}}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jb{JnJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}{{f{{C`{Ef}}}}}}{{{f{AKb}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}ADh}{{{f{Mj}}d}AN`}{JfAMf}{{{f{Ed}}{f{An}}d}AN`}{Jf{{f{An}}}}{{{f{AKb}}{f{{ALf{An}}}}AOf}AKb}{{{f{AKb}}}{{Bd{AKbBb}}}}{{{f{AKb}}}AKb}{{{f{ADh}}}{{f{ADh}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{ADh}}}AOh}{{{f{{Jb{JhJd}}}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{{Jb{KbJd}}}}{f{An}}}{{l{n}}}}{{{f{{Jb{J`In}}}}{f{An}}}{{l{n}}}}{{{f{c}}}Ef{}}00{{{f{Id}}{f{Id}}}d}{{{f{AK`}}}Ff}{{{f{{Jb{JhJd}}}}{C`{{f{AJl}}}}{f{{l{n}}}}{f{An}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{C`{{f{AJl}}}}{f{{l{n}}}}{f{An}}}{{Bd{{Jb{J`In}}Bb}}}}{g{{Bd{AKfe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{{ADhg}{{Bd{AKhe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{AMh{{Bd{eg}}}{}{{AKf{c}}AIj}{}}0{{AMhADh}{{Bd{eg}}}{}{{AKh{c}}AIj}{}}0{{{f{Id}}}{{Bd{cBb}}}Kl}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Id}}{f{Ed}}}{{Bd{IdBb}}}}{{{f{Ed}}d}{{Bd{ADhBb}}}}{{{f{c}}}Ol{}}000000000000000000000000000000000000000000{{{f{ADh}}}ADh}{{{f{AKb}}}{{Bd{AKbBb}}}}{AK`AOj}{{{f{ClKn}}Id}b}{{{f{AKb}}}d}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}cABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{Kn}}}{{f{Id}}}}{{{f{AKb}}}{{Bd{AOjBb}}}}2{{{f{Ed}}Id}d}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}gABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}{C`{Hd}}}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{Ed}}}Id}```````````{{{f{AKb}}{f{AKb}}c}{{Bd{AKbBb}}}ALj}{{ALj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AKb}}{f{AKb}}}{{Bd{{Gf{AKbAKb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}AOl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{{{f{ClAOl}}}b}{Ffb}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{}d}3``````````````````````{{{f{AOn}}}{{f{An}}}}>>>===`{{BbAOn}Bb}{BbBb}={{{f{AOn}}}f}>>===:::`{{{f{B@`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AOn}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{Bb}}{f{ClGh}}}{{Bd{bGj}}}}0<<{cAOn{{AMl{{Dj{An}}}}}}{B@bBb}{B@dBb}{B@fBb}{B@hBb}{B@jBb}{cc{}}{B@lBb}{{}{{Fh{{f{An}}B@`}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAIn}````{{{Fh{{f{An}}B@`}{{Dd{b}}}}}b}{cBbB@n}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClAOj}}{Fl{B`}}{f{BA`}}}{{Bd{bBb}}}}{{{f{AOj}}{f{Df}}}{{Fl{B`}}}}0{{{f{AOj}}{f{{l{A`}}}}}{{Bd{AOjBb}}}}{{{f{AOj}}{f{{Af{{ANl{ANj}}}}}}}{{Bd{AOjBb}}}}0{{{f{AOj}}GbFf}AOj}{{{f{ClAOj}}}{{f{ClAOj}}}}{{{f{ClAOj}}{f{An}}e}{{Bd{{f{ClAOj}}Bb}}}BAb{{A@`{{f{B`}}}{{Dd{c}}}}}}{{{f{ClAOj}}Ffe}{{Bd{{f{ClAOj}}Bb}}}BAb{{A@`{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{AOj}}}AOj}{{{f{BAd}}}BAd}{{{f{BAf}}}BAf}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{AOj}}{f{An}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOj}}e}{{Bd{{Fl{{f{B`}}}}Bb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{}BAf}{{}AOj}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{AOj}}{f{An}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{An}}}{{Bd{B`Bb}}}}{{{f{AOj}}{f{{Af{c}}}}}AOj{{Hh{An}}}}{{{f{AOj}}{f{{BAh{{f{An}}Nl}}}}}AOj}{{{f{AOj}}{C`{{f{{Af{c}}}}}}}{{Bd{AOjBb}}}{{Hh{An}}}}{{{f{AOj}}}{{Fl{Ed}}}}9{{{f{BAf}}{f{BAf}}}d}{{{f{AOj}}{f{AOj}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOj}}}Ff}`{{{f{AOj}}e}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{AOj}}{Fl{B`}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{AOj}}}{{Bd{bBb}}}}{{{f{AOj}}}{{Fl{Mj}}}}{{{f{AOj}}AFd}{{Bd{AOjBb}}}}{{{f{AOj}}{f{{l{A`}}}}}{{Bd{AOjBb}}}}{{{f{BAd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BAf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AOj}}{f{ClGh}}}{{Bd{bGj}}}}0{cc{}}0000{{{f{BA`}}}AOj}{AK`AOj}{{{f{BAj}}}AOj}{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}{cAOj{{Gn{}{{Cb{B`}}}}}}{{{f{{Af{BAl}}}}}{{Bd{AOjBb}}}}{{{f{{Af{BAl}}}}{f{BA`}}}{{Bd{AOjBb}}}}{{c{f{BA`}}}{{Bd{AOjBb}}}{{Ch{}{{Cb{{f{BAl}}}}}}}}{{{f{AOj}}Ff}{{C`{{Fl{Id}}}}}}{{{f{AOj}}{f{An}}}{{C`{Ff}}}}{{{f{AOj}}}{{Fl{{f{An}}}}}}{{{f{AOj}}}{{Fl{{ANl{ANj}}}}}}{{{f{AOj}}}{{f{{Af{B`}}}}}}{{{f{ClAOj}}}{{f{Cl{Fl{B`}}}}}}{{{f{AOj}}Ff}{{Bd{BAlBb}}}}{{{f{AOj}}Ff{f{ClBAl}}}{{Bd{bBb}}}}{{{f{AOj}}Ff{f{ClBAl}}}b}{{{f{AOj}}}{{C`{{Bd{EdBb}}}}}}`{{{f{AOj}}e}{{Bd{BAnBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{AOj}}{Fl{B`}}{f{BB`}}}{{Bd{{Gf{B`{Fl{B`}}Bh}}Bb}}}}1{{{f{AOj}}{Fl{B`}}dd}{{Bd{BAnBb}}}}{{{f{BAf}}{f{Clc}}}bAGd}{{{f{AOj}}{C`{Ff}}}AOj}{{{f{AOj}}}Ff}{{{f{AOj}}{f{{Af{B`}}}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{{Af{B`}}}}}{{Bd{{f{ClAOj}}Bb}}}}{{{f{ClAOj}}{f{{Af{B`}}}}}{{f{ClAOj}}}}{{{f{AOj}}{BBb{Ff}}}f}{{{f{AOj}}{BBd{Ff}}}f}{{{f{AOj}}{f{An}}}f}{{{f{AOj}}{Lj{Ff}}}f}{{{f{AOj}}{BBf{Ff}}}f}{{{f{AOj}}{BBh{Ff}}}f}{{{f{AOj}}BBj}f}{{{f{AOj}}Ff}f}{{}Ff}0000{{{f{ClAOj}}Ffc}{{Bd{{f{ClAOj}}Bb}}}BAb}{ce{}{}}000000{{AOj{f{An}}}AK`}{{{f{AOj}}}{{Bd{{l{A`}}Bb}}}}{{{f{AOj}}}d}1{{{f{AOj}}}{{Fd{B`}}}}{{{f{AOj}}d}BBl}{{{f{AOj}}}BBn}{AOjBC`}{{{f{AOj}}}{{Bd{{C`{B`}}Bb}}}}{{{f{AOj}}BAd}{{Bd{{C`{B`}}Bb}}}}{{{f{AOj}}ce}{{Bd{AOjBb}}}{{BCb{{ANl{ANj}}}}}{{BCb{{ANl{ANj}}}}}}{{{f{AOj}}BCd}{{Bd{AOjBb}}}}3{{{f{AOj}}}Ff}{{{Fl{c}}}{{Bd{AOjBb}}}BAb}{{{Fl{B`}}}AOj}{{{Fl{B`}}}{{Bd{AOjBb}}}}{{{f{ClBBl}}}C`}{{{f{ClBBn}}}C`}{{{f{AOj}}}AOj}{{AOje}{{Bd{cBb}}}{}{{Df{AOj}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClAOj}}e}{{Bd{cBb}}}{}{{Df{{f{ClAOj}}}{{Dd{{Bd{cBb}}}}}}}}{{AOjgc}{{Bd{eBb}}}{}{}{{Df{AOjc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClAOj}}}{{C`{B`}}}}{{{f{AOj}}{f{AOj}}}d}{{{f{ClAOj}}{f{An}}{f{An}}}{{Bd{{f{ClAOj}}Bb}}}}{{{f{ClAOj}}{f{An}}c}{{Bd{{f{ClAOj}}Bb}}}BAb}{{{f{ClAOj}}Ffc}{{Bd{{f{ClAOj}}Bb}}}BAb}18{{{f{AOj}}{Fl{B`}}{f{BCf}}}{{Bd{{Gf{B`{Fl{B`}}Bh}}Bb}}}}`{{{f{AOj}}{f{B`}}dd{C`{Il}}}{{Bd{AOjBb}}}}0{{{f{AOj}}Ffdd{C`{Il}}}{{Bd{AOjBb}}}}{{{f{AOj}}}BA`}{{{f{AOj}}{f{AOj}}}{{Bd{bBb}}}}{{{f{AOj}}e}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{AOj}}Ff}{{C`{{f{B`}}}}}}{{{f{AOj}}c}{{Bd{AOjBb}}}{{BCh{Ff}}}}2{{{f{AOj}}c}{{Bd{{Fl{B`}}Bb}}}{{BCb{{ANl{ANj}}}}}}{{{f{AOj}}e{f{{Lb{BA`}}}}}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{AOj}}e{f{BA`}}}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{ClAOj}}{f{{Af{c}}}}}{{Bd{bBb}}}{{Hh{An}}}}{{{f{AOj}}}{{Gf{FfFf}}}}{{{f{AOj}}Gb}AOj}{{{f{AOj}}}d}{{{f{ClAOj}}}b}{{{f{BBl}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{BBn}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{AOj}}GbFf}AOj}0{{{f{AOj}}cEn}{{Bd{AOjBb}}}{{BCb{{ANl{ANj}}}}}}{{{f{ClAOj}}cEn}{{Bd{{f{ClAOj}}Bb}}}{{BCb{{ANl{ANj}}}}}}{{{f{ClAOj}}}{{`{{Ch{}{{Cb{AOj}}}}}}}}{{AOjFfd}{{Fl{AOj}}}}{{{f{AOj}}BAd}{{Bd{{C`{B`}}Bb}}}}{{{f{AOj}}{C`{Ff}}}AOj}{{{f{AOj}}{f{{l{Ej}}}}}{{Bd{AOjBb}}}}{{{f{AOj}}{f{{l{Ej}}}}}AOj}{{{f{AOj}}{f{{l{Ej}}}}d}AOj}{{{f{AOj}}}{{f{AOj}}}}{{{f{AOj}}BCj}{{Bd{{Of{O`{Od{{Ob{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{AOj}}FfcEn}{{Bd{AOjBb}}}{{BCb{{ANl{ANj}}}}}}{{{f{ClAOj}}{C`{{f{An}}}}{C`{{Oj{Ef{Fl{Ef}}}}}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{An}}e}{{Bd{{f{ClAOj}}Bb}}}BAb{{A@`{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClAOj}}Ffe}{{Bd{{f{ClAOj}}Bb}}}BAb{{A@`{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BCl{{Bd{AOjBb}}}}{{{Gf{{BCn{{Cf{Cd}}}}{f{{Af{AN`}}}}}}}{{Bd{AOjBb}}}}{{c{f{BA`}}}{{Bd{AOjBb}}}{{Ch{}{{Cb{{Bd{{f{BAl}}Bb}}}}}}}}{{{f{AOj}}{f{An}}}{{Bd{FfBb}}}}44444{{{f{c}}}Ol{}}0000{{{f{AOj}}{C`{{f{{Af{Ef}}}}}}BAf{C`{{Gf{GbFf}}}}}{{Bd{AOjBb}}}}{{{f{AOj}}d{C`{{f{{Af{Ef}}}}}}BAf{C`{{Gf{GbFf}}}}}{{Bd{AOjBb}}}}1{{{f{AOj}}c}{{Bd{AOjBb}}}{{BCb{Ef}}}}{{{f{AOj}}c{f{An}}AOdAOd}{{Bd{AOjBb}}}{{BCb{Ef}}}}0{{{f{AOj}}{f{AOj}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{AOj}}}{{Bd{{f{ClAOj}}Bb}}}}{ce{}{}}0000{{{f{AOj}}}Ff}{{{f{ClAOj}}c}{{Bd{{f{ClAOj}}Bb}}}BAb}{{{f{ClAOj}}c{f{BA`}}}{{Bd{{f{ClAOj}}Bb}}}BAb}{{{f{ClAOj}}B`}{{f{ClAOj}}}}{{{f{AOj}}{f{An}}{C`{Mh}}}{{Bd{AOjBb}}}}{{{f{ClAOj}}{f{An}}{C`{Mh}}}{{f{ClAOj}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BCd}}}BCd}{{{f{c}}{f{Cle}}}b{}{}}{{}BCd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BCd}}{f{BCd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCd}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{f{BCd}}{f{Clc}}}bAGd}`{{}Ff}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BAn}}}{{Bd{AOjBb}}}}`{{{f{BD`}}}{{f{{Af{{BDb{Mh}}}}}}}}{{{f{BAn}}c}{{Bd{AOjBb}}}{{Dn{AOj}{{Dd{{Bd{AOjBb}}}}}}HlHn}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BD`}}}BD`}{{{f{Bh}}}Bh}{{{f{BAn}}}BAn}{{{f{BDd}}}BDd}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BD`}{{}Bh}{Ff{{f{c}}}{}}000{{{f{BDf}}}f}1111{Ff{{f{Clc}}}{}}0000000`{{BDhc}{}BDj}{Ffb}0000{{{f{ClBD`}}}b}111{{{f{BD`}}{f{BD`}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDl}}}Mh}{{{f{BD`}}}{{f{{Af{Mh}}}}}}{{{f{BAn}}}{{Bd{AOjBb}}}}{{{f{ClBD`}}}{{f{Cl{Fl{Mh}}}}}}{{{f{BD`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Bh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BAn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BDd}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{An}}BDd}Ef}{cc{}}0000{{{Fl{{Gf{Mh{BDb{Mh}}}}}}}BD`}{{{Fl{{Fl{{Gf{Mh{BDb{Mh}}}}}}}}}BD`}{{{Fl{{Gf{{Fl{Mh}}{Fl{{BDb{Mh}}}}}}}}}BD`}3{BD`Bh}4{BDnBDd}5{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}{cBD`{{Gn{}{{Cb{{Gf{Mh{BDb{Mh}}}}}}}}}}{cBD`{{Hj{}{{Cb{{Gf{Mh{BDb{Mh}}}}}}}}}}{{{f{Bh}}Ff}BDl}{{{f{BAn}}}{{f{Bh}}}}{{{f{ClBAn}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{Ej}}}}{{{f{BE`}}dd}{{Bd{BhBb}}}}{{{f{BAn}}}{{Bd{AOjBb}}}}{{{f{ClBh}}}{{f{ClBD`}}}}{{}Ff}0000000{ce{}{}}0000000{BhBD`}1{{{f{BD`}}}}{BD`}301{{{f{BDl}}}d}{{{f{Bh}}}d}{{{f{BD`}}}d}{{{f{BD`}}}{{BEd{{BEb{{Fd{Mh}}}}{Fd{{BDb{Mh}}}}}}}}{{{f{Bh}}}BEf}{{{f{BAn}}}{{Fl{B`}}}}{{{f{BAn}}{C`{{Gf{GbFf}}}}}{{Fl{B`}}}}={{{f{BDl}}}Ff}{{{f{Bh}}}Ff}?????{{{Fl{Mh}}{Fl{{BDb{Mh}}}}d}BD`}{{{f{AOj}}{Fl{B`}}Bh{C`{{Fl{Ef}}}}}BAn}{{{f{ClBEf}}}C`}{{{f{ClBEf}}Ff}C`}{{{f{BAn}}c}{{Bd{AOjBb}}}{{Df{AOj}{{Dd{{Bd{AOjBb}}}}}}HlHn}}{{{f{c}}}{}{}}{{{f{Bh}}}BDh}{{{f{BAn}}L`N`}{{Bd{AOjBb}}}}{{BAne}BAn{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{Bh}}GbFf}BDf}{{{f{ClBD`}}}b}{{{f{ClBh}}}b}{{{f{BAn}}Ad}{{Bd{AOjBb}}}}{{{f{BAn}}}{{Bd{AOjBb}}}}{Bh{{Fl{Mh}}}}0{BAnBh}{{{f{ClBAn}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}Ol{}}0000000{BhBh}{{{f{Bh}}}{{f{BD`}}}}{{{f{Bh}}}{{f{{Fl{{Ob{Mh}}}}}}}};{ce{}{}}0000000`````{{{f{BD`}}c}B`{{Df{{Gf{Mh{f{{BDb{Mh}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BD`}}c}B`{{Df{{Gf{Mh{f{{BDb{Mh}}}}}}}{{Dd{}}}}HlHn}}{{{f{{Af{{Ob{Mh}}}}}}c}B`{{Df{{Ob{Mh}}}{{Dd{C`}}}}HlHn}}{{{f{{Af{{Ob{Mh}}}}}}c}B`{{Df{{Ob{Mh}}}{{Dd{}}}}HlHn}}{{{f{{Af{c}}}}e{C`{{Lb{ADj}}}}}{{AJb{c}}}{BEhBEj}{{Ch{}{{Cb{{Gf{MhMh}}}}}}Ib}}{{{f{{Af{c}}}}{f{Hd}}e{C`{{Lb{ADj}}}}}{{AJb{c}}}{BEhBEj}{{Ch{}{{Cb{{Gf{MhMh}}}}}}Ib}}{{{f{{l{c}}}}MhMh}{{l{c}}}Db}{{{f{{Fl{{Ob{Mh}}}}}}{f{{Af{{Cf{Cd}}}}}}}d}{{{f{BEl}}{f{Bh}}}B`}{{BEnBEn}BEn}0`{{{f{BF`}}{f{AOj}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BF`}}}{{Bd{{f{An}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBFb}}Id}{{C`{b}}}}{{{f{ClBFd}}{f{Id}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BFb}}}BFb}{{{f{BFd}}}BFd}{{{f{BAl}}}BAl}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{Af{c}}}}}Ed{{Hf{Ed}}}}{{}BAl}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BAl}}{f{BAl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAl}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{Gf{{f{Ed}}Ff}}}BFb}1{{{Gf{{f{Ed}}Ff}}}BFd}2{{eFf}BA`{{AMl{Ed}}}{{Ch{}{{Cb{{Fl{{Gf{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BFbB`}{BFdB`}{{{f{Ed}}Ff}BFb}{{{f{Ed}}Ff}BFd}{{{Fl{Id}}}BAl}{{{f{ClBFb}}Ff}B`}{{{f{ClBFd}}Ff}B`}{{{f{{Af{BAl}}}}{C`{Ff}}}{{Bd{BA`Bb}}}}0{{{f{{Af{BAl}}}}{C`{Ff}}}{{Bd{{Fl{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00<<<{{{f{{Af{AOj}}}}}{{Bd{AOjBb}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOj{f{{Af{{f{An}}}}}}{f{{Af{{f{An}}}}}}{C`{{f{An}}}}{f{AOj}}}AOj}{{BC`c}{{Bd{AOjBb}}}{{Df{BFf{f{Cl{BFj{BFh}}}}{f{Cl{BFj{BFl}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BFn}}{f{{Af{Mh}}}}dd}AOj}{{{f{BFn}}{Gf{{Oj{{Fl{Mh}}{Fl{Nh}}}}{Oj{{Fl{On}}{Fl{Nh}}}}}}{f{AOj}}BG`}{{Bd{AOjBb}}}}{{{f{BFn}}{f{AOj}}{f{B`}}{f{B`}}BG`}{{Bd{AOjBb}}}}{{{f{An}}{f{An}}}Ef}{{{f{BFn}}{f{AOj}}{f{B`}}{f{B`}}BG`d{C`{{f{{Af{{f{An}}}}}}}}}{{Bd{AOjBb}}}}{{{f{BGb}}{f{{Af{Nh}}}}Kf}AOj}0{{{f{BGb}}{f{{Af{Nh}}}}}AOj}0{{{f{BGd}}{C`{{Fl{{f{An}}}}}}{C`{{f{An}}}}d}{{Bd{AOjBb}}}}{{BC`d}BC`}{{{BGf{c}}{C`{{Lb{BGh}}}}}{{BGf{c}}}BGj}{{{f{B`}}}{{Bd{B`Bb}}}}{BGlBGl}{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{AOd}}Gb{C`{{f{AJl}}}}}{{Bd{GbBb}}}}0{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}1{{BHbc}BC`{{Hh{{Af{BGl}}}}}}5`{{BGl{f{An}}}BGl}{{}BGl}{{BGld}BGl}{c{{Bd{BGlBb}}}{{Hh{{Af{BGl}}}}}}{{{f{{Lb{ce}}}}}{{f{e}}}{}BHd}{{BHfd}BHf}`{{{f{BHh}}}d}{{{f{BHj}}}d}11`{{BGlc}BGl{{AMl{BGl}}}}{{{Lb{BHh}}BHl}{{Bd{BC`Bb}}}}76{{BGlcd}BGl{{AMl{BGl}}}}{{{f{ClAAb}}}b}{{{f{ClAAd}}}b}{{{f{ClAAb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAd}}{C`{c}}}b{}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAd}}c}b{}}{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BHbc{Lb{BA`}}}BC`{{Df{AOj}{{Dd{{Bd{AOjBb}}}}}}HlHn}}{{BGlc{BI`{{Lb{BHn}}}}}BGl{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGlBGlc{BI`{{Lb{BHn}}}}}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{{f{BGl}}{f{Clc}}f}{{Bd{BIbBb}}}{{Dn{{f{BGl}}f}{{Dd{{Bd{BIbBb}}}}}}}}{{{f{AEl}}{f{Df}}}AEl}{{{f{AEl}}{f{Df}}}{{l{c}}}Db}{{BGlc{f{{Af{BGl}}}}{BI`{{Lb{BHn}}}}}BGl{{Df{{f{Cl{Af{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGlBId{f{{Af{BGl}}}}dd}BGl}{{ce{BI`{{Lb{BHn}}}}d}BGl{{Df{{f{Cl{Af{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hh{{Af{BGl}}}}}}{{{f{{AEj{}{{AEh{c}}}}}}i{f{Cl{Af{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BGlBGlGbEd}BGl}{BCl{{Lb{Cd}}}}{{{f{BIf}}}{{C`{Ff}}}}{BIhBGl}{BIjBGl}{BGlBGl}3210{{{f{AEn}}Eh}{{l{Ej}}}}{{BGlEh}BGl}{{{f{BIl}}Eh}{{l{Ej}}}}{{cEn}BGl{{Hh{{Af{BGl}}}}}}{{{f{AEn}}{f{{Af{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AF`}}}{{Bd{{l{Ej}}Bb}}}}6{{{f{BIl}}}{{Bd{{l{Ej}}Bb}}}}{cBGl{{AMl{BGl}}}}{{{f{BIn}}}{{f{{Af{Mj}}}}}}``{BGlBIh}{eAKf{}{{Gn{}{{Cb{c}}}}}}0{{ADhe}AKh{}{{Gn{}{{Cb{c}}}}}}0`{{{f{Cl{BJ`{c}}}}}{{Bd{BAjBb}}}BJb}{{{f{BHh}}}{{f{ADj}}}}{{{f{BIl}}}{{f{ADj}}}}{{{f{BJd}}}{{f{ADj}}}}{{{f{BHj}}}{{f{ADj}}}}{{{f{BCl}}}{{f{ADj}}}}{{{f{ClBIl}}}{{f{ClADj}}}}{{{f{ClBCl}}}{{f{ClADj}}}}{{{f{BJf}}}{{f{{l{Ab}}}}}}{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfdd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Lb{c}}}}}BJj{BJlNf}}{{{f{BJn}}}{{f{{l{j}}}}}}{{{f{{Lb{ce}}}}}{}NfBHd}{{{f{{Lb{c}}}}}LhBK`}{{{f{BKb}}}{{f{BGl}}}}{{{f{{Lb{ce}}}}}{{f{c}}}NfBHd}{{{f{AKj}}}{{f{Ed}}}}{{{f{BKd}}}{{f{B`}}}}{{{f{ClBIl}}}{{Bd{FfBb}}}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{{f{{Af{c}}}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{BKf}}}{{f{{l{n}}}}}}{{{Fl{BGl}}}BGl}{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{Lb{{BKh{c}}e}}}{{Lb{ce}}}{}BHd}{{{Lb{{Af{{BKh{c}}}}e}}}{{Lb{{Af{c}}e}}}{}BHd}{{{f{An}}}BGl}{{BGl{C`{Mh}}}BGl}{{{f{BKj}}}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}}{{l{n}}}}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJl}}}{{Jb{JnJd}}}}`{{{BGf{{Cf{BGj}}}}{C`{{Lb{BA`}}}}}{{Bd{BKlBb}}}}{{{BKn{c}}{f{BA`}}}{{Bd{{BL`{c}}Bb}}}BLb}{{{BLd{c}}{f{BA`}}}{{Bd{{BLf{c}}Bb}}}BLb}{{{BLh{c}}Ff}{{Bd{BLjBb}}}BGj}{{{BLl{c}}{f{BA`}}}{{Bd{{BLn{c}}Bb}}}BLb}{{{f{Cl{BGf{c}}}}}{{Bd{BM`Bb}}}BGj}`{BGlBMb}{{BGlBMdBGl}BGl}{{{f{BIl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lb{ce}}}}}{{f{c}}}NfBHd}111111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BC`MhcEn}BC`{{Hh{{Af{BGl}}}}}}{BCl{{Cf{Cd}}}}`{BC`BC`}```{{{f{BMf}}{f{An}}}{{Bd{EfBb}}}}{{BMh{Fl{BGl}}}{{Bd{BGlBb}}}}{{{f{AKb}}{f{AKb}}c}{{Bd{AKbBb}}}ALj}{{{f{BJd}}{f{Cl{Af{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BMj}}B`B`}{{Bd{B`Bb}}}}{{BMh{Fl{BGl}}}BGl}{{{f{BMl}}}b}{{BGlEd}BGl}{{{f{AFb}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{ALl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{BIl}}{f{Ed}}}{{Bd{B`Bb}}}}{{BC`{BMn{{f{An}}EdNl}}d}BC`}4{{BC`Edd}BC`}4`{BGlBN`}{{{f{{Lb{c}}}}}{{C`{{f{AIn}}}}}{AInNf}}{BGlBGl}{{{f{BNb}}}{{Bd{B`Bb}}}}1`{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}{{{f{BAj}}{f{BAj}}{C`{{f{{Af{Ef}}}}}}{f{An}}}{{Bd{bBb}}}}{{{f{BA`}}{f{BA`}}{C`{{f{{Af{Ef}}}}}}{f{An}}}{{Bd{bBb}}}}0{{{f{BNf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIl}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNf}}c}{{Bd{B`Bb}}}Al}{{{f{BIl}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BIl}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBIl}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlBGlBGl}BGl}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlBGl}BGl}10{{{f{BNh}}}BNh}{{{f{BB`}}}BB`}{{{f{BMl}}}BMl}{{{f{BC`}}}BC`}{{{f{BCf}}}BCf}{{{f{BHb}}}BHb}{{{f{BNj}}}BNj}{{{f{BHl}}}BHl}{{{f{AOd}}}AOd}{{{f{BNl}}}BNl}{{{f{BNn}}}BNn}{{{f{BO`}}}BO`}{{{f{BHj}}}BHj}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{{f{BOf}}}BOf}{{{f{BOh}}}BOh}{{{f{On}}}On}{{{f{Nh}}}Nh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{BG`}}}BG`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{BKb}}}BKb}{{{f{BGl}}}BGl}{{{f{CCl}}}CCl}{{{f{BMd}}}BMd}{{{f{{BI`{c}}}}}{{BI`{c}}}ABf}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{BId}}}BId}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{BMh}}}BMh}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{{Lb{ce}}}}}{{Lb{ce}}}Nf{BHdABf}}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{Nb}}}Nb}{{{f{BCj}}}BCj}{{{f{BA`}}}BA`}{{{f{BCl}}}BCl}{{{f{AN`}}}AN`}{{{f{BAj}}}BAj}{{{f{N`}}}N`}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{BIl}}}{{Lb{BIl}}}}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFf}}}{{C`{{f{CFh}}}}}}````{{{f{AOd}}{f{AOd}}}AOb}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}AOb{CFjNf}BHd}{{{f{{Af{BGl}}}}}BGl}{{BHfCAd}BHf}{{{f{CAd}}{f{CAh}}}d}`{{{f{{Af{B`}}}}}{{Bd{B`Bb}}}}{{{f{An}}}BGl}{BC`{{Bd{AOjBb}}}}{c{{Bd{{Fl{AOj}}Bb}}}{{Hj{}{{Cb{BC`}}}}}}{AMhe{}{{AKf{c}}AIj}}0{{AMhADh}e{}{{AKh{c}}AIj}}0{{ABl{f{An}}}{{l{c}}}Db}{{ABn{f{{l{c}}}}}{{l{c}}}Db}10{{ABn{f{An}}Ed}{{l{c}}}Db}0{BC`{{Bd{BMlBb}}}}{cBGl{{BCb{Ef}}}}{{{f{CEn}}Ff}CFl}``{{{f{BGd}}{Fl{{f{An}}}}{C`{{f{An}}}}d}{{Bd{AOjBb}}}}`{{{f{c}}{f{e}}}AOb{}{}}0``{{{f{CCb}}}{{Bd{{Lb{BA`}}Bb}}}}{{cCEl}{{Bd{BC`Bb}}}{{Hh{{Af{BC`}}}}}}{{{f{BKj}}{f{{l{n}}}}}{{l{n}}}}{{ed}{{Bd{BGlBb}}}{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{{f{CFf}}{Fl{BC`}}}{{Bd{BC`Bb}}}}{{{f{BNl}}{Fl{BC`}}}{{Bd{BC`Bb}}}}44{e{{Bd{BGlBb}}}{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{c{f{An}}d}BGl{{Hh{{Af{BGl}}}}}}{{BIhc}BGl{{AMl{BGl}}}}{{{f{CFn}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{BKj}}{f{An}}d}{{Bd{{l{A`}}Bb}}}}{{BIjc}BGl{{AMl{BGl}}}}{{{f{BA`}}{f{An}}}d}{{{f{CFn}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{BKj}}{f{{l{n}}}}dd}{{Bd{{l{A`}}Bb}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{A`}}Bb}}}}{{{f{Cd}}{f{ADh}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{Ej}}Bb}}}}{BC`BC`}{BGlBGl}{{{f{BKj}}{f{An}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{CG`}}Ad{C`{Ad}}{C`{{f{C@`}}}}Add}{{Bd{FfBb}}}}{{{ALf{An}}}Ed}{{{f{BFn}}{f{{Af{Nh}}}}d}AOj}{{{f{CGb}}c}{{Cf{CGd}}}BLb}{{{f{CGf}}c}{{Cf{CGd}}}BLb}`{{BC`BC`}BC`}{{{f{CGh}}{f{AOj}}{C`{{f{An}}}}{C`{{Gf{GbFf}}}}}{{Bd{AOjBb}}}}{{{f{CGh}}{f{AOj}}{C`{{Gf{GbFf}}}}d}{{Bd{{Gf{AOjAOj}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGld}BGl}{{BGlced}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABf}{{Hh{{Af{BGl}}}}}}212121{{ce}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABf}{{Hh{{Af{BGl}}}}}}32{{CGjBGlFfd}BGl}`{{{f{BCl}}}{{f{ADh}}}}{{{f{AN`}}}{{f{ADh}}}}```{{BGlBGlAOdBO`{C`{Jf}}{C`{Ef}}}BGl}`{CDfBGl}`11{AJjGb}00{{{f{CGl}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CH`}}}{{l{Jd}}}}{{{f{AOd}}}Gb}`{{{f{AOd}}}d}```{{}b}{cbBHd}{{}CGb}{{}CGf}{{}BB`}{{}BC`}{{}BCf}{{}BHl}{{}BNn}{{}BOb}{{}BOf}{{}BOj}{{}BOl}{{}BOn}{{}C@d}{{}C@f}{{}C@h}{{}C@l}{{}C@n}{{}CA`}{{}BG`}{{}CAd}{{}CAf}{{}CAj}{{}CAl}{{}CAn}{{}CB`}{{}CBb}{{}CBl}{{}CC`}{{}CCb}{{}BGl}{{}{{BI`{{Lb{BMj}}}}}}{{}{{BI`{{Lb{CHb}}}}}}{{}{{BI`{{Lb{BHn}}}}}}{{}CDf}{{}CDh}{{}CDl}{{}CDn}{{}CE`}{{}CEb}{{}CEf}{{}CEj}{{}{{Lb{c}}}CHd}{{}CEl}{{}Nb}{{}BCj}{{}BA`}{{}AN`}{{}BAj}{{}N`}`{{}{{Oj{{Fl{On}}{Fl{Nh}}}}}}{Ff{{f{c}}}{}}0{{{f{{AJf{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BI`{c}}}}}f{}}222222222222222222{{{f{{Lb{ce}}}}}{{f{c}}}NfBHd}33333333333333{Ff{{f{Clc}}}{}}00{{{f{Cl{AJf{c}}}}}{{f{Cl}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CCb}}}{{Bd{EfBb}}}}{{{f{BC`}}}{{Bd{EfBb}}}}0001{{{f{{Lb{c}}}}}{{f{An}}}{AInNf}}{{{f{AN`}}{f{CHf}}}{{Bd{CHhBb}}}}```{{{f{B`}}GbCHj}{{Bd{B`Bb}}}}{{BIjGbCHj}BGl}{{BGlGbCHj}BGl}{{{f{CCb}}}{{Bd{{`{B@n}}Bb}}}}`{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlc}BGl{{AMl{BGl}}}}{{{Lb{ADjc}}}{{Bd{{Lb{ec}}{Lb{ADjc}}}}}BHd{ADjHlHn}}{{{Lb{ADjc}}}{{Lb{ec}}}BHd{ADjHlHn}}{{{f{{Lb{ce}}}}}{{CHl{ce}}}Nf{ABfBHd}}{Ffb}0000000000000000000000{{{f{ClBMl}}}b}1{{BC`e}BC`{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lb{ce}}}}}bNfBHd}33333333333333{BGlBGl}{{BC`{C`{{Fl{BGl}}}}}BC`}1{{{f{BIl}}}B`}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJl}}}{{Jb{JnJd}}}}`{BGlCHn}{{{f{ALl}}}{{f{Ed}}}}{{{f{BIl}}}{{f{Ed}}}}`{{{f{Ed}}}BGl}{cBGl{{Hh{{Af{Ed}}}}}}`{CDhBGl}``{{{f{c}}}e{}{{CIb{CI`}}}}0`{{{f{CFn}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{CFn}}{f{{l{Ab}}}}}{{l{A`}}}}{{AOd{f{Ed}}{f{An}}}{{Bd{bBb}}}}{{AOd{C`{{f{An}}}}{f{An}}}{{Bd{bBb}}}}{{{f{CId}}{f{An}}}{{Bd{bBb}}}}`{{{f{BNh}}{f{BNh}}}d}{{{f{BB`}}{f{BB`}}}d}{{{f{BCf}}{f{BCf}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOd}}{f{BOd}}}d}{{{f{BOf}}{f{BOf}}}d}{{{f{On}}{f{On}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{BG`}}{f{BG`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{BKb}}{f{BKb}}}d}{{BGlc}BGl{{AMl{BGl}}}}{{{f{BGl}}{f{BGl}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{BMd}}{f{BMd}}}d}{{{f{{BI`{B`}}}}{f{{BI`{B`}}}}}d}{{{f{{BI`{{Lb{c}}}}}}{f{{BI`{{Lb{c}}}}}}}dNf}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CIfNf}BHd}{{{f{{Lb{Cd}}}}{f{Cd}}}d}{{{f{{Lb{CIh}}}}{f{CIh}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BCj}}{f{BCj}}}d}{{{f{BA`}}{f{BA`}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{BCl}}{f{{f{Cd}}}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{BAj}}{f{BAj}}}d}{{{f{N`}}{f{N`}}}d}{{{f{CFd}}{f{CFd}}}d}{{BGlc}BGl{{AMl{BGl}}}}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIjBGld}BGl}``{{BGlc}BGl{{BCb{Ef}}}}{{BGlc}BGl{{Hh{{Af{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}B@l}}}{}CIl{}}{{{f{BC`}}d}{{Bd{EfBb}}}}{{BC`e}BC`{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{{f{AFh}}}{{Bd{B`Bb}}}}{BGlBGl}{{{f{AFh}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{BGlBGlBGl}BGl}{{{f{CGb}}}CG`}{{{f{CGf}}}CG`}{{{f{BKj}}{f{{l{n}}}}Ff}{{Bd{{l{n}}Bb}}}}{Nh{{Gf{MhMh}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKj}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAb}}}d}``{{{f{BMl}}}{{C`{{Bd{AOjBb}}}}}}{{BC`Ff}{{Bd{AOjBb}}}}{{{f{BMl}}}{{Bd{AOjBb}}}}{{{f{AAb}}}{{f{Mj}}}}{{{f{BIl}}}{{Dj{Mj}}}}{{CInGb}BGl}{{CIn{f{An}}}BGl}{{CIn{f{{Af{c}}}}}BGl{{Hh{An}}}}{{{f{BCl}}}{{f{{Af{AN`}}}}}}```{{BC`c}BC`{{AMl{BGl}}}}{{BGlc}BGl{{AMl{BGl}}}}`10{{BGlAFd}BGl}{{{f{AFj}}c}{{Bd{AFjBb}}}{}}{{{f{AFl}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BIl}}{f{{l{A`}}}}}{{Bd{B`Bb}}}}{{BC`BGl}BC`}5{{BAjc}BAj{{Df{Ff{f{AN`}}}{{Dd{d}}}}}}{{{f{BKj}}{f{An}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{Ej}}Bb}}}}{CJ`{{Bd{AOjBb}}}}{{{f{ClCGd}}{f{ClAOj}}}{{Bd{bBb}}}}{AAd{{l{c}}}Db}{{ALj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{BHfBC`}{{{BGf{c}}}{{Bd{AOjBb}}}BGj}{{{f{Cl{BKn{c}}}}{f{ClAOj}}}{{Bd{bBb}}}BLb}{{{CJb{c}}}{{Bd{AOjBb}}}BGj}{{{BJ`{c}}}{{Bd{AOjBb}}}BJb}{{{f{Cl{CJd{c}}}}{f{ClAOj}}}{{Bd{bBb}}}BLb}{CFf{{Bd{BC`Bb}}}}{{{f{Cl{BLd{c}}}}{f{ClAOj}}}{{Bd{bBb}}}BLb}{{{f{Cl{CJf{c}}}}{f{ClAOj}}}{{Bd{bBb}}}BLb}{{{CJh{c}}}{{Bd{AOjBb}}}BGj}{BNl{{Bd{BC`Bb}}}}{{{CJj{c}}}{{Bd{AOjBb}}}BGj}{{{BLh{c}}}{{Bd{AOjBb}}}BGj}{{{BLl{c}}{f{ClAOj}}}{{Bd{IlBb}}}BLb}{{{f{ClAAb}}}{{l{j}}}}84{BHj{{Bd{BC`Bb}}}}{{{CJb{c}}{C`{{Lb{BGh}}}}d}{{Bd{AOjBb}}}BGj}{{{f{BLj}}Ff}d}{{}BGl}{BC`BC`}{BIjBGl}{BGlBGl}`0``{{}{{BI`{{Lb{BHn}}}}}}{{{f{BNb}}}{{Bd{B`Bb}}}}2{{BGlBGl}BGl}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lb{CJl}}}}}{{Bd{bB@l}}}}{{{f{BJd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BMj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BMf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BNh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BB`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BCf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BNj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AOd}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{BO`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BOd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BOf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{On}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Nh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BOj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BOl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BOn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@b}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@d}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@f}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@h}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@j}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@l}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BHh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{C@n}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CJn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CA`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BG`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CAb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CAd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CAf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CAh}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CAj}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CAl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CAn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CB`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CBn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CC`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BGl}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CCl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BMd}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{{BI`{c}}}}{f{ClGh}}}{{Bd{bGj}}}{}}{{{f{CCn}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CD`}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CDb}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CDd}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{BId}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{CDf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CDh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CDj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CDl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CDn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CE`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BMh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{{Lb{ce}}}}{f{ClGh}}}{{Bd{bGj}}}NfBHd}{{{f{{Lb{ce}}}}{f{ClGh}}}{{Bd{bGj}}}{ADlNf}BHd}{{{f{{Lb{ce}}}}{f{ClGh}}}{{Bd{bGj}}}{B@nNf}BHd}{{{f{CEl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CHh}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CEn}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{Nb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BCj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BA`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BCl}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{AN`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{BAj}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{N`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CF`}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CFb}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{CFd}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{An}}BDd}Ef}```{{BGlce}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABf}{{Hh{{Af{BGl}}}}}}{{BHfd}BHf}``{{{f{An}}c}{{Bd{BGlBb}}}{{Hh{{Af{BGl}}}}}}{{BGl{C`{Mh}}}BGl}{cc{}}0000000000000000000000{CCbBC`}1{BHbBC`}222222222222222222{MhOn}3333333{{{f{An}}}C@`}4444444444{CAhBG`}555555555555555555555555{AdBGl}{MhBGl}7{GbBGl}{dBGl}{MdBGl}{IlBGl}{BKbBGl}{IjBGl}{LhBGl}{L`BGl}{M`BGl}{LfBGl}{{{f{An}}}BGl}{cc{}}0{BId{{BI`{{Lb{BJd}}}}}}1{CK`{{BI`{{Lb{BJd}}}}}}{CCn{{BI`{{Lb{BJd}}}}}}{CKb{{BI`{{Lb{BJd}}}}}}{CKd{{BI`{{Lb{BJd}}}}}}{CD`{{BI`{{Lb{BJd}}}}}}{CDd{{BI`{{Lb{BJd}}}}}}{CKf{{BI`{{Lb{BJd}}}}}}{CKh{{BI`{{Lb{BJd}}}}}}{CKj{{BI`{{Lb{BJd}}}}}}::::{CD`BId};{CKfBId}{CDdBId}{CCnBId}>>>>>>{CEbCE`}??????{{{f{An}}}{{Lb{An}}}}{{{Dj{c}}}{{Lb{c}}}{CKlNf}}{c{{Lb{c}}}{}}{{{f{{Af{c}}}}}{{Lb{{Af{c}}}}}ABf}{CKn{{Lb{CL`}}}}{cc{}}{{{f{CLb}}}{{Lb{CLb}}}}{{{f{CLd}}}{{Lb{CLd}}}}{CLfc{}}{{{Cf{ce}}}{{Lb{ce}}}NfBHd}{CG`{{Lb{CLb}}}}{{{Ob{c}}}{{Lb{{Af{c}}}}}{}}{{{Lb{An}}}{{Lb{{Af{Ad}}}}}}{{{Fl{ce}}}{{Lb{{Af{c}}e}}}{}{BHdABf}}{Ef{{Lb{An}}}}{CLh{{Lb{CLd}}}}{{{f{CL`}}}{{Lb{CL`}}}};;{CLjCHh}<<<<{{{f{BAl}}}BA`}{{{f{{Lb{BAj}}}}}BA`}{{{f{{Af{B`}}}}}BA`}{BAjBA`}{cc{}}{{{Lb{BAj}}}BA`}{{{f{BAj}}}BA`}{CLlBCl}{CLnBCl}44{{{Fl{AN`}}}BAj}55555{{c{C`{Hd}}}CM`{}}{{{CMb{Gb}}{CMb{Ad}}{C`{Hd}}}CMd}{{{CMb{Gb}}{CMb{Ad}}{C`{Hd}}}CMf}{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}00{c{{AJf{{l{e}}}}}{{Gn{}{{Cb{}}}}}Ah}{c{{AJf{{l{A`}}}}}{{Gn{}{{Cb{d}}}}}}{e{{Lb{{Af{c}}}}}{}{{Gn{}{{Cb{c}}}}}}{eBA`{{AMl{Mj}}}{{Gn{}{{Cb{c}}}}}}{{gFf}{{CMh{Gb}}}Hh{{Gn{}{{Cb{{C`{c}}}}}}}{{Gn{}{{Cb{{C`{e}}}}}}}}0{e{{CMh{Gb}}}{{Gn{}{{Cb{{C`{d}}}}}}}{{Gn{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ABj{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gADh}{{CMh{Gb}}}BEj{{Gn{}{{Cb{{C`{c}}}}}}}{{Gn{}{{Cb{{C`{e}}}}}}}}763{{{f{An}}e}ABj{}{{Ch{}{{Cb{c}}}}}}{c{{AJf{{l{e}}}}}{{Hj{}{{Cb{}}}}}Ah}{e{{Lb{{Af{c}}}}}Hl{{Hj{}{{Cb{c}}}}}}`{c{{Bd{{CJj{CJl}}Bb}}}{{AMl{CG`}}}}{{}{{Lb{c}}}Nf}{c{{Lb{ec}}}BHdNf}{{{f{An}}{f{{Af{c}}}}}ABj{}}{{{f{An}}{f{{Af{{C`{c}}}}}}}ABj{}}{{{f{An}}}{{Bd{CMj}}}}{c{{AJf{{l{A`}}}}}{{Ib{}{{Cb{d}}}}}}{c{{AJf{{l{e}}}}}{{Ib{}{{Cb{}}}}}Ah}{Ed{{BI`{{Lb{BHn}}}}}}{{{f{An}}c}CMl{}}{{{Fl{c}}ADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{Fl{c}}ADh}{{AIj{}{{AKl{e}}{AKn{c}}{AL`{g}}}}}{ALb{ALd{e}}}ABf{{Fn{}{{Cb{e}}}}IbHlHn}}`{{{f{An}}cFf}AFn{}}{{FfcADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{BC`BC`cc}BC`{{AMl{BGl}}}}{{{f{CMn}}{f{AOj}}ee}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{An}}Ff}AG`}{{FfADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}``{{BGlc{BI`{{Lb{BHn}}}}CN`}BGl{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}`{{BGlc}BGl{{AMl{BGl}}}}{{BGlFfFf}BGl}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CNbNf}BHd}{{{f{BIl}}Ff}{{Bd{IdBb}}}}{{BIhBGld}BGl}{{BIjBGld}BGl}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}6{{{f{BA`}}{f{An}}}{{C`{{f{Ed}}}}}}{{{f{AGb}}Ff}{{Bd{IdBb}}}}{{{f{ALl}}Ff}{{Bd{IdBb}}}}{{{f{AGb}}Ff}Id}{{{f{ALl}}Ff}Id}{{{f{BA`}}Ff}{{C`{{Gf{{f{{ANl{ANj}}}}{f{Ed}}}}}}}}{{{f{ClBA`}}Ff}{{C`{{Gf{{f{Cl{ANl{ANj}}}}{f{ClEd}}}}}}}}{BN`BGl}{{{f{BC`}}}CEf}{{{f{CEh}}}Ed}{{}Ed}{{{f{BOh}}GbBO`{C`{{f{AJl}}}}}{{Bd{BNjBb}}}}00{{{f{CHb}}{f{BA`}}CNd{f{Mj}}{f{Mj}}}{{C`{Mj}}}}{{{f{BHn}}{f{BA`}}CNd{f{{Af{Mj}}}}}Mj}{{{f{BA`}}{f{An}}}{{C`{Mj}}}}{{{f{ADh}}}{{f{{Af{AN`}}}}}}{{{f{BIn}}}Ff}{{{f{BA`}}{f{An}}}{{C`{{Gf{Ff{f{{ANl{ANj}}}}{f{Ed}}}}}}}}{{{f{CNf}}}B`}{{{f{Cl{BLh{c}}}}}{{Bd{{f{{Lb{CEn}}}}Bb}}}BGj}{{{f{Cl{Lb{ce}}}}}{{C`{{f{Clc}}}}}NfBHd}{{{f{Cl{Lb{ce}}}}}{{f{Clc}}}NfBHd}{{{f{CNh}}}{{Fl{{f{An}}}}}}{{{f{BA`}}}{{Fl{{f{An}}}}}}{{{f{BAj}}}{{Fl{{f{An}}}}}}{{{f{BIl}}Ff}{{C`{{f{Ih}}}}}}{{{f{BIl}}FfFf}{{C`{{f{Ih}}}}}}{{{f{BJd}}}{{C`{{BI`{{Lb{BHn}}}}}}}}{{{f{BOh}}BNjBO`Jf{C`{{f{AJl}}}}BOf}{{Bd{CNjBb}}}}{{{f{BOj}}}{{Lb{BOl}}}}{{{f{Clc}}}{{Bd{CNlBb}}}{BJbBGjNf}}{{{f{CJn}}{f{BA`}}}{{Bd{{Lb{BA`}}Bb}}}}{{cFf}{{Fl{{Gf{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{ANn}}Ff}Id}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{BIl}}Ff}Id}{{{f{CFf}}}d}{{{f{BNl}}}d}`{{BC`e}BHb{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{{f{CNn}}{Fl{B`}}{f{BB`}}}{{Bd{{Gf{B`{Fl{B`}}Bh}}Bb}}}}{{BC`BGlcBB`}BHb{{Hh{{Af{BGl}}}}}}2{{AOdAOd{f{{Af{Gb}}}}BO`Jf{C`{AJl}}}{{Bd{{Fl{{Ob{Mh}}}}Bb}}}}{{BOh{f{{Af{Gb}}}}BO`Jf{f{{C`{Ef}}}}ddBOf}{{Gf{{Fl{{Ob{Mh}}}}{Fl{Gb}}{Fl{Gb}}}}}}{{{f{BE`}}dd}{{Bd{BhBb}}}}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{BGlc}BGl{{AMl{BGl}}}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CNbNf}BHd}21`{{{f{BIl}}}d}{{{f{CO`}}}d}{{{f{BB`}}{f{Clc}}}bAGd}{{{f{BCf}}{f{Clc}}}bAGd}{{{f{AOd}}{f{Clc}}}bAGd}{{{f{BO`}}{f{Clc}}}bAGd}{{{f{BOd}}{f{Clc}}}bAGd}{{{f{BOf}}{f{Clc}}}bAGd}{{{f{BOj}}{f{Clc}}}bAGd}{{{f{BOl}}{f{Clc}}}bAGd}{{{f{BOn}}{f{Clc}}}bAGd}{{{f{C@`}}{f{Clc}}}bAGd}{{{f{C@b}}{f{Clc}}}bAGd}{{{f{C@d}}{f{Clc}}}bAGd}{{{f{C@f}}{f{Clc}}}bAGd}{{{f{C@h}}{f{Clc}}}bAGd}{{{f{C@j}}{f{Clc}}}bAGd}{{{f{C@l}}{f{Clc}}}bAGd}{{{f{C@n}}{f{Clc}}}bAGd}{{{f{CA`}}{f{Clc}}}bAGd}{{{f{BG`}}{f{Clc}}}bAGd}{{{f{CAb}}{f{Clc}}}bAGd}{{{f{CAd}}{f{Clc}}}bAGd}{{{f{CAf}}{f{Clc}}}bAGd}{{{f{CAh}}{f{Clc}}}bAGd}{{{f{CAj}}{f{Clc}}}bAGd}{{{f{CAl}}{f{Clc}}}bAGd}{{{f{CAn}}{f{Clc}}}bAGd}{{{f{CB`}}{f{Clc}}}bAGd}{{{f{CBb}}{f{Clc}}}bAGd}{{{f{CBd}}{f{Clc}}}bAGd}{{{f{CBf}}{f{Clc}}}bAGd}{{{f{CBh}}{f{Clc}}}bAGd}{{{f{CBj}}{f{Clc}}}bAGd}{{{f{CBl}}{f{Clc}}}bAGd}{{{f{CBn}}{f{Clc}}}bAGd}{{{f{CC`}}{f{Clc}}}bAGd}{{{f{BKb}}{f{Clc}}}bAGd}{{{f{BGl}}{f{Clc}}}bAGd}{{{f{CCl}}{f{Clc}}}bAGd}{{{f{BMd}}{f{Clc}}}bAGd}{{{f{CCn}}{f{Clc}}}bAGd}{{{f{CD`}}{f{Clc}}}bAGd}{{{f{CDb}}{f{Clc}}}bAGd}{{{f{CDd}}{f{Clc}}}bAGd}{{{f{BId}}{f{Clc}}}bAGd}{{{f{CDj}}{f{Clc}}}bAGd}{{{f{CDl}}{f{Clc}}}bAGd}{{{f{CDn}}{f{Clc}}}bAGd}{{{f{CE`}}{f{Clc}}}bAGd}{{{f{CEb}}{f{Clc}}}bAGd}{{{f{CEd}}{f{Clc}}}bAGd}{{{f{CEh}}{f{Clc}}}bAGd}{{{f{CEj}}{f{Clc}}}bAGd}{{{f{{Lb{ce}}}}{f{Clg}}}b{CObNf}BHdAGd}{{{f{CEl}}{f{Clc}}}bAGd}{{{f{BCj}}{f{Clc}}}bAGd}{{{f{BA`}}{f{Clc}}}bAGd}{{{f{AN`}}{f{Clc}}}bAGd}{{{f{N`}}{f{Clc}}}bAGd}{{{f{CFd}}{f{Clc}}}bAGd}{{{f{COd}}{f{B`}}CAjd}{{Bd{{Gf{{Gf{{Fl{Mh}}{Fl{Mh}}}}d}}Bb}}}}{{{f{COd}}{f{B`}}CAjd}{{Bd{{Gf{{AJb{Mh}}{AJb{Mh}}}}Bb}}}}{{BHb{C`{Ff}}}BC`}{{BIjBGl}BGl}{{BGl{C`{Ff}}}BGl}{{{f{BKj}}}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}}{{l{n}}}}`{{{f{{Af{{f{{l{n}}}}}}}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{COf}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CH`}}}{{l{Jd}}}}`{{BHfCAh}BHf}``{{{f{On}}}Mh}`{{{f{{Jb{JhJd}}}}{f{{l{n}}}}CFd{Fh{Gb}{{Dd{AJj}}}}{Fh{AJj}{{Dd{Gb}}}}{f{AJl}}{f{AJl}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{C`{{f{An}}}}{Fh{Gb}{{Dd{AJj}}}}{Fh{AJj}{{Dd{Gb}}}}{f{AJl}}{f{AJl}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CNf}}}{{Bd{{l{j}}Bb}}}}{BGlBGl}{{{f{AJj}}}d}{{{BKn{c}}d}{{BKn{c}}}BLb}``0`{{}b}{cb{ABfBHd}}{cBGl{{Hh{{Af{Gb}}}}}}``{{{f{CNh}}{f{An}}}{{C`{Ff}}}}{{{f{BA`}}{f{An}}}{{C`{Ff}}}}{{{f{BAj}}{f{An}}}{{C`{Ff}}}}{{{f{{Af{Mh}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{CNl}}Ad{C`{Ff}}d{C`{{f{BA`}}}}FfFf{C`{{f{C@`}}}}{C`{Ad}}Ad{C`{{f{C@b}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gf{BA`FfFf}}Bb}}}}{{{CJh{c}}{C`{Ff}}}{{CJh{c}}}BGj}{{{CJj{c}}{C`{Ff}}}{{CJj{c}}}BGj}``{{}Ff}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAb}}}{{Cf{Cd}}}}{{BC`BC`cc}BC`{{AMl{BGl}}}}{{{f{CMn}}{f{AOj}}ee}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{ClNh}}}{{f{ClIl}}}}`{{{f{ClBA`}}Ff{ANl{ANj}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BGlBGlGbEd}BGl}{{BGlBGlBGl}BGl}``{{{f{B`}}CBj}B`}{{BGlCBj}BGl}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BGlBGl}BGl}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCl{{Gf{{Fl{AN`}}{Fl{{Cf{Cd}}}}{C`{Hd}}}}}}{{{AJf{c}}}c{}}{{{Lb{ce}}}{{C`{c}}}{}BHd}33{{{f{BGl}}}}{BA`}{{{f{BCl}}}}{COhBIj}{BIjBIj}{{{Lb{ce}}}{}NfBHd}{{BOjc}{{BGf{c}}}BGj}{BAbB`}{{{Lb{BIl}}}B`}{CEnCOj}{BCb{{Fl{c}}}{}}{c{{Fl{Ef}}}{}}{c{{Fl{{ANl{ANj}}}}}{}}{{{f{CAh}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBl}{{Bd{{l{A`}}Bb}}}}{{BGlccCBl}BGl{{AMl{BGl}}}}{cd{{Hh{CLb}}}}{{{f{{Af{Ad}}}}}d}{{{f{AOd}}{C`{{f{An}}}}}d}{{{f{BIl}}}d}{{{f{BA`}}}d}{{{f{BAj}}}d}{{{f{BLj}}}d}{BGlBGl}{{{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{AGf}}}{{Bd{{l{A`}}Bb}}}}2{{{f{AOd}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{BGlc}BGl{{AMl{BGl}}}}54{{{f{AGh}}}{{Bd{{l{A`}}Bb}}}}6{{{f{CGl}}}{{l{A`}}}}{{{f{CGn}}}{{l{A`}}}}{{{f{BNd}}}{{Bd{{l{A`}}Bb}}}}999{{{f{BIl}}}{{l{A`}}}}::0{{{f{Nh}}}d};{{{f{On}}}d}`{{{f{B`}}}d}{{{f{{Lb{CJl}}}}}d}{{}d}{{{f{CId}}Eh}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CAj}}{f{CAh}}}{{Bd{bBb}}}}4?{{{f{CGl}}}{{l{In}}}}{{{f{CGn}}}{{l{In}}}}{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{AE`{cgADn}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{BA`}}}{{`{{Ch{}{{Cb{{Gf{{f{{ANl{ANj}}}}{f{Ed}}}}}}}}}}}}{{{f{BCl}}}{{AE`{{Fl{{Cf{CIh}}}}COlADn}}}}{{{f{BA`}}}{{`{K`}}}}{{{f{ClBA`}}}{{`{K`}}}}11{{{f{CFf}}}{{Bd{{C`{{Cf{Ch}}}}Bb}}}}{{BIhBGld}BGl}{{BC`BC`ccBG`}BC`{{Hh{{Af{BGl}}}}}}{{BIjBGld}BGl}{{{f{CMn}}{f{AOj}}eeBG`}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{f{COn}}{f{AOj}}{f{An}}{f{An}}CBb{C`{Id}}{C`{Ef}}}{{Bd{AOjBb}}}}{{{f{D@`}}{f{AOj}}{f{An}}{f{An}}eeCBb{C`{Id}}}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{BC`BHf}{{{f{D@b}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{D@b}}{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}{{BHfd}BHf}`{CInBGl}{D@dBGl}{{{f{CEn}}}{{f{{C`{{Fl{D@f}}}}}}}}``{{}BGl}{BC`BC`}{BIjBGl}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{BGlBGl}{D@hBC`}4{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CNbNf}BHd}`{{BC`BC`cc}BC`{{AMl{BGl}}}}{{{f{CMn}}{f{AOj}}ee}{{Bd{AOjBb}}}{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{BHfc}BHf{{Hh{{Af{BGl}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}<{{{f{BIl}}}Ff};9{{{f{BA`}}}Ff}{{{f{BCl}}}Ff}{{{f{BAj}}}Ff}{{BC`Mh}BC`}{{{f{BIl}}Ff}B`}{{{f{BLj}}}d}`{BGlBIj}{cBGlD@j}{D@jBGl}{D@lBGl}{CEhBGl}{{BGlc}BGl{{AMl{BGl}}}}0``{{BHjd}BHj}{{{CJj{c}}d}{{CJj{c}}}BGj}```{BGlBGl}{{{f{D@b}}}{{l{Ej}}}}0{{{f{D@b}}{f{{Af{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@b}}GbCHj}{{Bd{{l{j}}Bb}}}}{{{f{D@b}}Gbd}{{Bd{B`Bb}}}}{{{f{D@b}}{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}4{{{f{D@b}}}{{Bd{B`Bb}}}}{{{f{D@b}}}B`}01{{{f{D@b}}}{{Bd{{l{Ej}}Bb}}}}{{{f{D@b}}}{{l{j}}}}{{{f{D@b}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@b}}GbFf}{{l{j}}}}{{{f{D@b}}Eh}{{Bd{{l{j}}Bb}}}}{{{f{D@b}}Ad}B`}7{{{f{D@b}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{BGlc}BGl{{AMl{BGl}}}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CNbNf}BHd}21``````{{{f{AKb}}{f{AKb}}}{{Bd{{Gf{AKbAKb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lb{ce}}}}}{{f{Clc}}}ABf{BHdABf}}{{BC`cCEf{C`{{Lb{CJn}}}}{C`{{f{An}}}}}BC`{{Df{AOj}{{Dd{{Bd{AOjBb}}}}}}HlHn}}{{D@dc}BGl{{Df{{f{An}}}{{Dd{{Bd{EfBb}}}}}}HlHn}}{{BGlc{BI`{{Lb{BHn}}}}}BGl{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGlBGlc{BI`{{Lb{BHn}}}}}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGl{f{Clc}}{f{Cl}}}{{Bd{BGlBb}}}{{Dn{BGl{f{Cl}}}{{Dd{{Bd{BGlBb}}}}}}}}{{{f{BIn}}{C`{{f{Ef}}}}}{{Bd{MjBb}}}}{{{f{BIn}}c}{{Bd{MjBb}}}{{A@`{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BI`{{Lb{BHn}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}HlHn}}{c{{BI`{{Lb{BHn}}}}}{{Df{{f{{Af{{f{Ed}}}}}}}{{Dd{Ed}}}}HlHn}}{{BGlc}BGl{{Dn{BGl}{{Dd{BGl}}}}}}{c{{BI`{{Lb{BHn}}}}}{{Df{{f{Mj}}}{{Dd{Mj}}}}HlHn}}{{D@d{Lb{Df}}}BGl}{c{{BI`{{Lb{BHn}}}}}{{Df{{f{{Af{Mj}}}}}{{Dd{Mj}}}}HlHn}}:{{ce{BI`{{Lb{BHn}}}}}BGl{{Df{{f{Cl{Af{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hh{{Af{BGl}}}}}}{{BGlc{f{{Af{BGl}}}}{BI`{{Lb{BHn}}}}}BGl{{Df{{f{Cl{Af{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGlBId{f{{Af{BGl}}}}dd}BGl}2{{{f{BIn}}}{{Bd{MjBb}}}}{{BOjc}BOj{{Df{BOl}{{Dd{BOl}}}}}}1111{CEhCEh}{{{C`{{f{{Af{Ff}}}}}}{f{BAj}}{C`{{f{{Af{B`}}}}}}{C`{{f{D@n}}}}}AOj}{{{C`{{f{{Af{Ef}}}}}}{f{BA`}}{C`{{f{{Af{B`}}}}}}d}{{C`{{Fl{Ff}}}}}}{{{f{An}}}BGl}{BIhBGl}{BC`BC`}{BIjBGl}{{{f{AGj}}}{{C`{c}}}{}}{BGlBGl}{{{f{DA`}}}Kn}{{{f{BIl}}}{{Bd{KnBb}}}}`754{{{f{AGj}}}{{C`{L`}}}}3{{{f{BIl}}}{{C`{L`}}}}9876{{{f{AGl}}}{{C`{c}}}{}}51{{{f{DAb}}}Kn}4{{BC`BCd}BC`}``{{{CJb{c}}{C`{CG`}}}{{CJb{c}}}BGj}{{{f{ClBA`}}BA`}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBA`}}{f{BA`}}}b}````{{{f{CH`}}}{{l{Jd}}}}`{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}1`{{{f{An}}}BGl}{BIhBGl}{BC`BC`}{BIjBGl}{{{f{AGj}}}{{C`{c}}}{}}{BGlBGl}{{{f{AGj}}}{{C`{{Gf{cc}}}}}{}}```{{{f{DA`}}}Kn}{{{f{BIl}}}{{Bd{KnBb}}}}`{{{f{COf}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}`=```6{{{f{CGl}}}{{l{Ln}}}}21`{{{f{DAd}}{C`{{f{AJl}}}}}{{Bd{DAdBb}}}}{{{f{DAf}}{C`{{f{AJl}}}}}{{Bd{DAfBb}}}}{{{f{AOd}}}Gb}{{{f{AOd}}}d}{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{AOdGb}AOd}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BIl}}}Ff}{{{f{CFf}}}{{C`{Ff}}}}{{{f{BNl}}}{{C`{Ff}}}}{{{f{BHj}}}{{C`{Ff}}}}`````{{{BKn{c}}Ff}{{BKn{c}}}BLb}`{BIhBGl}{BIjBGl}{{{f{AF`}}}{{Bd{FfBb}}}}{BGlBGl}{{{f{BIl}}}{{Bd{FfBb}}}}{{{f{BIl}}}{{f{An}}}}{BGlD@d}````33`{{{f{COf}}}{{l{In}}}}{{{f{CGn}}}{{l{In}}}}{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}{{{f{CH`}}}{{l{Jd}}}}{{{f{AOd}}}Gb}`{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{CIfNf}BHd}{{{f{CAj}}}d}{BGl}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AOd}}}d}{{DAhFf}{{C`{Ff}}}}{{BGlc}BGl{{AMl{BGl}}}}0{{{f{BIn}}}{{Bd{MjBb}}}}{{}c{}}{cCJ`BJb}{cCGdBLb}2{{{f{An}}c}DAj{}}{c{{AJf{c}}}{}}{BC`BHf}{c{{BGf{c}}}BGj}{c{{BKn{c}}}BLb}{{{f{{Af{Mj}}}}}BIn}{c{{CJb{c}}}BGj}{c{{BJ`{c}}}BJb}{c{{CJd{c}}}BLb}{{}CGb}{c{{BLd{c}}}BLb}{{}CGf}{c{{CJf{c}}}BLb}{c{{CJh{c}}}BGj}{GbAOd}{cBNl{{Hh{CLb}}}}{cBHj{{Hh{CLb}}}}{{AOdAOdAOd}BOh}{c{{CJj{c}}}BGj}{{DAl{Lb{CEn}}{Lb{BAj}}Ff{C`{{Fl{Ff}}}}{C`{{Lb{BGh}}}}{C`{D@n}}Ffd{C`{{Fl{B`}}}}CAf}{{Bd{BLjBb}}}}{c{{BLh{c}}}BGj}{c{{BLl{c}}}{BLbBLb}}{CAhBG`}{c{{BI`{c}}}{}}{{BGlBGlBGl}CDf}{{}CDh}{{{f{An}}{Fl{Mj}}{BI`{{Lb{BHn}}}}c}BMhBJd}{c{{Lb{c}}}{}}{{}BA`}{{ADh{Fl{{Cf{Cd}}}}{C`{Hd}}}BCl}{{cADhd}AN`{{AMl{Ef}}}}{e{{Lb{c}}}{}{{A@`{{f{{CHl{c}}}}}{{Dd{c}}}}}}{ADhBCl}{{{f{AGn}}FfFf}{{l{c}}}Db}{{{f{BIl}}FfFf}B`}{{{f{An}}}C@`}{{ce}{{Lb{ce}}}{}BHd}{{{f{BA`}}Ff{ANl{ANj}}Ed}{{Bd{BA`Bb}}}}{{Gb{f{An}}}{{Bd{B`Bb}}}}{EfC@`}{{ADhFf}BCl}{{{Lb{{Af{CG`}}}}}BNl}{{{Lb{{Af{CG`}}}}}BHj}{AdC@`}{{}{{Lb{{BKh{c}}}}}{}}{c{{Lb{{BKh{e}}c}}}BHd{}}{Ff{{Lb{{Af{{BKh{c}}}}}}}{}}{{Ffc}{{Lb{{Af{{BKh{e}}}}c}}}BHd{}}3210{{{f{ClDAn}}}C`}{{{f{ClCNj}}}C`}{{{f{ClBM`}}Ff}{{Bd{{C`{{Fl{AOj}}}}Bb}}}}{{{f{ClBKl}}Ff}{{Bd{{C`{{Fl{AOj}}}}Bb}}}}{{{f{ClBLj}}Ff}{{Bd{{C`{{Fl{AOj}}}}Bb}}}}{{{f{BGl}}{f{Cl{BDb{{f{BGl}}}}}}}b}{{BGl{f{Cl{BDb{BGl}}}}}b}{BGlBGl}0{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}0{GbBGl}`{{}On}{{}Nh}`{{{f{BIl}}}Ff}{BC`BC`}6````{{{f{Cl{BLh{c}}}}}{{Bd{FfBb}}}BGj}````{{{f{AFh}}}{{Bd{{Gd{Gb}}Bb}}}}{{BHfc}BHf{{Hh{{Af{BGl}}}}}}{{BC`{f{Cl{BFj{BFh}}}}{f{Cl{BFj{BFl}}}}}{{Bd{BFfBb}}}}`{{BGlc}BGl{{AMl{BGl}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{CGn}}}{{l{Mb}}}}{{{f{BNd}}}{{Bd{{l{Mb}}Bb}}}}{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}{{CCfc}BGl{{AMl{BGl}}}}{{CCjc}BGl{{AMl{BGl}}}}`{{BGle}BGl{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{BGleCEb}BGl{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}```{{{f{An}}}AOd}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}Jf}{{Jb{JhJd}}}}``{{{f{AOd}}{f{AOd}}}{{C`{AOb}}}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}{{C`{AOb}}}{CNbNf}BHd}{{{f{CFf}}}{{f{CLb}}}}{{{f{BNl}}}{{f{CLb}}}}{{{f{BHj}}}{{f{CLb}}}}`{{{f{CFf}}}{{f{{Af{CG`}}}}}}{{{f{BNl}}}{{f{{Af{CG`}}}}}}{{{f{BHj}}}{{f{{Af{CG`}}}}}}``{{}BGl}{c{{DB`{{Lb{c}}}}}{}}{{ce}{{DB`{{Lb{ce}}}}}{}BHd}````{{BGlc}BGl{{AMl{BGl}}}}```{{D@d{f{An}}}BGl}0{{{f{AOj}}{f{AOj}}d}{{Bd{{Gf{{Oj{{Fl{Mh}}{Fl{Nh}}}}{Oj{{Fl{On}}{Fl{Nh}}}}}}Bb}}}}`{{{f{DA`}}}Kn}{BGlBGl}{BC`{{Bd{{Gf{AOjAOj}}Bb}}}}```{{{f{{Lb{c}}}}{f{ClDBb}}}b{AInNf}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}dNfBHd}{{{f{An}}BGlN`}BGl}{{BC`BGlN`}BC`}{{{f{AGl}}L`N`}{{Bd{{C`{c}}Bb}}}{}}{{BGlBGlN`}BGl}{{{f{DAb}}L`N`}{{Bd{KnBb}}}}{{{f{BIl}}L`N`}{{Bd{KnBb}}}}{{{f{CGl}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}B@l}}}{}CIl{}}````{{{f{DBd}}CC`{C`{Il}}}B`}{{BGlCC`{C`{Il}}}BGl}{{{f{Cl{Lb{CJl}}}}{f{Cl{Af{Ad}}}}}{{Bd{FfB@l}}}}{{{f{Cl{Lb{CJl}}}}DBf}{{Bd{bB@l}}}}{{{BLh{c}}CAf}{{BLh{c}}}BGj}{{{f{Cl{Lb{CJl}}}}{f{Cl{Fl{Ad}}}}}{{Bd{FfB@l}}}}{{{f{Cl{Lb{CJl}}}}{f{ClEf}}}{{Bd{FfB@l}}}}{{{f{Clc}}}{{Bd{eB@l}}}{}DBh}{{{f{Cl{Lb{CJl}}}}{f{Cl{Af{DBj}}}}}{{Bd{FfB@l}}}}{{{f{CFf}}}d}{{{f{BIl}}}B`}{{{f{BNl}}}d}{{{f{BHj}}}d}````{{ce}BGl{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABf}{{Hh{{Af{BGl}}}}}}{{{f{AH`}}}B`}0{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBA`}}{f{An}}}{{C`{Ed}}}}{{{f{ClBIl}}{f{An}}}b}{{BC`ei}BC`{{Hh{An}}}{{Gn{}{{Cb{c}}}}}{{Hh{An}}}{{Gn{}{{Cb{g}}}}}}{{{f{ClBA`}}{f{An}}{ANl{ANj}}}{{C`{{ANl{ANj}}}}}}{{CIn{Fl{Ef}}}BGl}{{cBGl}BGl{{AMl{BGl}}}}{{{f{B`}}{f{{l{Ej}}}}}{{Bd{{l{j}}Bb}}}}{{BGlc}BGl{{AMl{BGl}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BKj}}{f{An}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{BGlcc{C`{c}}{C`{Ed}}}BGl{{AMl{BGl}}}}1{{{f{BIn}}{C`{Ed}}}{{Bd{MjBb}}}}{{{f{BKj}}{f{An}}{f{An}}Ff}{{Bd{{l{n}}Bb}}}}3{{{f{{Jb{JhJd}}}}{C`{{f{An}}}}{f{{l{n}}}}CFd}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{ClBA`}}Ff}b}{{BGl{f{{Af{Gb}}}}CEd}BGl}{{{f{CNf}}{f{{Af{Gb}}}}}{{Bd{B`Bb}}}}0{{{f{CLb}}}CG`}`{{{f{AHb}}}AHb}{{{f{BIl}}}B`}{BIhBGl}{BC`BC`}{BIjBGl}{BGlBGl}`{{BHfc}BHf{{Hh{{Af{BGl}}}}}}{{{f{CNn}}{Fl{B`}}{f{BCf}}}{{Bd{{Gf{B`{Fl{B`}}Bh}}Bb}}}}{{BC`BGlcBCf}BHb{{Hh{{Af{BGl}}}}}}{{BGlBCf}BGl}{{{f{AHd}}{f{Df}}Nb}{{Bd{B`Bb}}}}{{BGl{Lb{Df}}{BI`{{Lb{BHn}}}}Nb}BGl}{{{f{BIl}}{f{Df}}Nb}{{Bd{B`Bb}}}}{{BGlFfc}BGl{{Dn{{f{Cl{l{E`}}}}}{{Dd{{C`{L`}}}}}}HlHnDh}}{{{f{DBl}}Nb}{{Bd{B`Bb}}}}{{BGlNb}BGl}{{{f{DBl}}{f{B`}}BNh}{{Bd{B`Bb}}}}{{BGlBGlBNh}BGl}32102032103{{BGlN`L`Nb}BGl}2{{BGlBGlN`L`BNh}BGl}543254325432{{{f{DBn}}{f{{l{n}}}}AOd{C`{{f{AJl}}}}}{{Bd{DBnBb}}}}{{{f{BNb}}Mh}{{Bd{B`Bb}}}}{{BGlMh}BGl}{{{f{BOh}}Gb{C`{{f{AJl}}}}}{{Bd{GbBb}}}}0{{{f{BNb}}Lh}{{Bd{B`Bb}}}}{{BGlLh}BGl}2````{{{f{CFf}}}{{C`{{f{D@n}}}}}}{{{f{BNl}}}{{C`{{f{D@n}}}}}}{{{f{BHj}}}{{C`{{f{D@n}}}}}}``````{{{f{D@b}}{l{j}}}{{l{j}}}}{{}{{BI`{{Lb{BHn}}}}}}{{BGlBGldd{C`{Il}}}BGl}0`{{{f{BHh}}DC`}{{Bd{AOjBb}}}}{{{f{BHj}}DC`}{{Bd{AOjBb}}}}{{cBNn}{{Bd{BC`Bb}}}{{Hh{CLb}}}}{{{Lb{{Af{CG`}}}}BNn}{{Bd{BC`Bb}}}}{{cBOb}{{Bd{BC`Bb}}}{{Hh{CLb}}}}{{{Lb{{Af{CG`}}}}BOb}{{Bd{BC`Bb}}}}{{DCb{f{{Af{Mh}}}}e}{{Bd{B`Bb}}}Dh{{Gn{}{{Cb{{C`{c}}}}}}}}{{{f{AHf}}c{C`{e}}}{{Bd{AHfBb}}}{{Gn{}{{Cb{Mh}}}}}{}}{{{f{AHf}}ci}{{Bd{AHfBb}}}{{Gn{}{{Cb{Mh}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{Cl{CJb{c}}}}}{{Bd{{Lb{BAj}}Bb}}}BGj}{{{f{Cl{BJ`{c}}}}}{{Bd{BA`Bb}}}BJb}{{{f{BC`}}}{{Bd{{Lb{BA`}}Bb}}}}{{{f{BHj}}{C`{Ff}}}{{Bd{{Lb{BA`}}Bb}}}}{{{f{BLj}}}{{f{{Lb{BAj}}}}}}{{{f{Cl{BLh{c}}}}}{{Bd{{Lb{BAj}}Bb}}}BGj}{{{f{BHh}}{C`{Ff}}}{{Bd{{Lb{BA`}}Bb}}}}{{{f{CEn}}}{{f{DCd}}}}```````{{{f{COf}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CH`}}}{{l{Jd}}}}`{{{f{Cl{Lb{CJl}}}}DCf}{{Bd{IlB@l}}}}{{BC`c}BC`{{Hh{{Af{BGl}}}}}}0````{{{f{AHf}}{f{{l{A`}}}}{C`{c}}}{{Bd{AHfBb}}}{}}{{{f{ClBA`}}{f{An}}Ed}{{C`{Ed}}}}{{{f{ClBA`}}FfEd}{{C`{Ed}}}}{{{BLh{c}}d}{{BLh{c}}}BGj}{{{BLl{c}}d}{{BLl{c}}}BLb}{{{CJb{c}}d}{{CJb{c}}}BGj}{{{BJ`{c}}d}{{BJ`{c}}}BJb}{{{CJh{c}}d}{{CJh{c}}}BGj}4{{CJ`d}CJ`}{{BGlKf}BGl}{{{f{ClBCl}}{C`{Hd}}}b}{{{f{AHh}}Gb}{{l{c}}}Db}{{{f{BIl}}Gb}B`}{{BIhBGl}BGl}{{BC`c}BC`{{AMl{BGl}}}}{{BIjBGl}BGl}{{BGlBGl}BGl}{{{f{AHj}}Gbc}{{l{e}}}{}Db}{{BC`ce}BC`{{AMl{BGl}}}{{AMl{BGl}}}}{{BGlce}BGl{{AMl{BGl}}}{{AMl{BGl}}}}{{{f{ClBA`}}{f{An}}}{{C`{Ed}}}}{{{f{ClBA`}}Ff}{{C`{{Gf{{ANl{ANj}}Ed}}}}}}{BGlBGl}{{{f{ClAAd}}}b}{{{f{ClBIl}}}b}{{BGl{C`{Il}}}BGl}``{{BC`CG`C@d}{{Bd{bBb}}}}{{BC`CG`C@l}{{Bd{bBb}}}}{{BC`CG`CA`}{{Bd{bBb}}}}{{BC`CG`CAl}{{Bd{bBb}}}}`````{{{f{BIl}}GbFf}B`}{{BC`GbMh}BC`}{{BIjBGlBGl}BGl}={{{f{ClBCl}}FfFf}b}0```{{{f{AHl}}FfFf}AHl}{{{f{c}}FfFf}e{}{}}1022{{BClFfFf}BCl}0`{{{f{AEn}}d}{{l{c}}}Db}{{BIhEh}BGl}{{BC`cEn}BC`{{BCb{{ANl{ANj}}}}}}{{BIjEh}BGl}{{BGlEh}BGl}{{BGleEn}BGl{{AMl{BGl}}ABf}{{Hh{{Af{c}}}}}}{{BC`cEn}BC`{{Hh{{Af{BGl}}}}}}{{{f{AEn}}Eh}{{l{c}}}Db}{{{f{BIl}}Eh}{{Bd{B`Bb}}}}{{{f{{Lb{c}}}}}{{C`{{f{AIn}}}}}{AInNf}}{{{f{BKj}}{f{{l{n}}}}}{{l{j}}}}{{{f{BKj}}{f{{l{n}}}}Ff}{{Bd{AK`Bb}}}}0{{{f{{l{n}}}}{f{{l{n}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{{l{n}}}}{f{{l{n}}}}Ffed}{{Bd{AK`Bb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{BGlBGl}`{{{f{CFn}}{f{{Af{Ad}}}}}{{l{A`}}}}{{{f{CFn}}{f{{l{Ab}}}}}{{l{A`}}}}`{{BIhAd}BGl}{{BC`Ad}BC`}{{BIjAd}BGl}{{{f{AHn}}Ad}{{C`{L`}}}}{{BGlAd}BGl}{{{f{BIl}}Ad}{{C`{L`}}}}{{{f{DCh}}Ad}Kn}{{{f{BIl}}Ad}{{Bd{KnBb}}}}{{MhMh}Nh}{BGlDCj}{{{f{{l{n}}}}{f{An}}d}{{l{n}}}}{{{f{BKj}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}}{{l{Ej}}}}0{{{f{BKj}}}{{l{n}}}}{{{f{BKj}}{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3````{{{f{BNd}}{f{An}}}{{Bd{B`Bb}}}}`{{BGlEd}BGl}`{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}606060{{{f{BKj}}{f{{l{n}}}}}{{l{n}}}}10{{{f{{Lb{ce}}}}}FfNfBHd}{BGlCIn}{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHfc}BHf{{Hh{An}}}}{{D@d{f{An}}}BGl}{{{f{BG`}}}{{f{An}}}}`1{{{f{An}}}BGl}{BIhBGl}{BC`BC`}{BIjBGl}{{{f{AGj}}}{{C`{c}}}{}}{BGlBGl}{{{f{DA`}}}Kn}{{{f{BIl}}}{{Bd{KnBb}}}}{{}{{BI`{{Lb{BHn}}}}}}{{{f{Clc}}i}{{Bd{gB@l}}}{}{}{}{{A@`{{f{Cle}}}{{Dd{g}}}}}}{{BC`Mh}BC`}{{BHb{C`{Ff}}}BC`}{{BIjBGl}BGl}{{BGl{C`{Ff}}}BGl}{{{f{AI`}}{f{c}}}{{Bd{AI`Bb}}}Nf}{{{f{BIl}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{DCl}}{f{{Af{Nh}}}}Kf}DCl}{{{f{DCl}}{f{{Af{Nh}}}}}DCl}{{{f{BIl}}{f{{Af{Mh}}}}}{{Bd{B`Bb}}}}{{{f{BIl}}{f{{Af{Mh}}}}}B`}{{{f{AIb}}{f{c}}}AIbNf}{{{f{BIl}}{f{{l{Ej}}}}}B`}{{{f{ClBCl}}}{{C`{Hd}}}}{{BGlBGlBGl}BGl}{{CCdc}CCf{{AMl{BGl}}}}{{CChc}CCj{{AMl{BGl}}}}`{{BGlBGlAOdBO`}BGl}```{{{f{BNd}}Jf}{{Bd{{l{Jd}}Bb}}}}{BC`{{Bd{DCnBb}}}}{CCb{{Bd{DCnBb}}}}1{{{f{CEh}}}{{C`{Id}}}}{{BIjFf}BGl}{{{f{BA`}}d}BAj}{{{f{BCl}}}{{Cf{Cd}}}}{{{f{AId}}}{{Fl{{f{{Af{Ad}}}}}}}}{{{f{BC`}}d}{{Bd{EfBb}}}}{{{f{DD`}}{C`{{f{An}}}}d}{{Bd{AOjBb}}}}{{{f{BGd}}{C`{{f{An}}}}d}{{Bd{AOjBb}}}}{{{f{BGl}}{f{BA`}}CNd}{{Bd{MjBb}}}}{{{f{BKj}}{f{{l{Ej}}}}d}{{Bd{{l{Jd}}Bb}}}}{BIhBGl}{{{f{BKj}}}{{l{n}}}}{D@dBGl}{{{f{On}}}{{C`{Mh}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGlBGl}{{{f{BIn}}}{{Bd{MjBb}}}}{{{f{BNd}}{f{An}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}0000000000{{{f{ClBA`}}{f{BA`}}}{{Bd{dBb}}}}`887``{{BC`MhcEn}BC`{{Hh{{Af{BGl}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{f{DDb}}{C`{{f{AJl}}}}{f{{l{n}}}}{f{An}}}{{Bd{DDbBb}}}}{{{f{AOd}}Gb{C`{{f{AJl}}}}ceg}{{Bd{GbBb}}}{{Df{Gb}{{Dd{Gb}}}}}{{Df{Gb}{{Dd{AJj}}}}}{{Df{AJj}{{Dd{Gb}}}}}}{{{f{AOd}}Gb{C`{{f{AJl}}}}}{{Bd{GbBb}}}}{{{f{BOh}}Gb{C`{{f{AJl}}}}}{{Bd{GbBb}}}}00010`10{g{{Bd{AKfe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{{ADhg}{{Bd{AKhe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{AMh{{Bd{eg}}}{}{{AKf{c}}AIj}{}}0{{AMhADh}{{Bd{eg}}}{}{{AKh{c}}AIj}{}}0{{ABl{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ABn{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Id{{Bd{CEhBb}}}}111{{{Lb{{Af{c}}e}}}{{Bd{{Lb{{Ob{c}}e}}}}}{}BHd}22222222222222{COj{{Bd{CEnB@h}}}}{{{f{BA`}}{f{An}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BA`}}Ff}{{Bd{{Gf{{f{{ANl{ANj}}}}{f{Ed}}}}Bb}}}}{{{f{BA`}}{f{An}}}{{Bd{MjBb}}}}{{{f{BA`}}{f{An}}}{{Bd{{Gf{Ff{f{{ANl{ANj}}}}{f{Ed}}}}Bb}}}}{{{f{ClBA`}}{f{An}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{CNh}}{f{An}}}{{Bd{FfBb}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOj{C`{CG`}}}{{Bd{{BGf{CJl}}Bb}}}}{{{f{BIn}}c}{{Bd{MjBb}}}{{A@`{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BIn}}c}{{Bd{MjBb}}}{{A@`{{f{{Af{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BGlc}{{Bd{BGlBb}}}{{Dn{BGl}{{Dd{{Bd{BGlBb}}}}}}}}{{{f{BIn}}c}{{Bd{MjBb}}}{{A@`{{f{Mj}}}{{Dd{{Bd{MjBb}}}}}}}}{{DAhFf}{{Bd{FfBb}}}}{Ad{{Bd{CBdBb}}}}{Mh{{Bd{CBfBb}}}}{Lh{{Bd{CBhBb}}}}{c{{Bd{{Lb{c}}DDd}}}{}}{{ADh{Fl{{Cf{Cd}}}}{C`{Hd}}}{{Bd{BClBb}}}}{{ce}{{Bd{{Lb{ce}}DDd}}}{}BHd}{{}{{Bd{{Lb{{BKh{c}}}}DDd}}}{}}{c{{Bd{{Lb{{BKh{e}}c}}DDd}}}BHd{}}10`{c{{Bd{{DB`{{Lb{c}}}}DDd}}}{}}{{ce}{{Bd{{DB`{{Lb{ce}}}}DDd}}}{}BHd}{{{f{BJd}}{f{Cl{Fl{Ad}}}}}{{Bd{bBb}}}}{{{Lb{ce}}}{{Bd{c{Lb{ce}}}}}{}BHd}``{{{f{c}}}Ol{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{An}}}}`{{{f{AF`}}}{{Bd{AF`Bb}}}}{BIhBGl}{{BC`{C`{{Fl{Ef}}}}BAf}BC`}{BIjBGl}{BGlBGl}{{{f{BIl}}}{{Bd{B`Bb}}}}4321{{BC`e}BC`{{Hh{An}}}{{Gn{}{{Cb{c}}}}}}{{{Lb{{DDf{c}}}}}{{Bd{cb}}}Hl}{{{Lb{ce}}}cABfBHd}{{{f{ClBOj}}{f{DDh}}}b}5{{{f{DDj}}c{f{An}}AOdAOd}{{Bd{AOjBb}}}{{BCb{Ef}}}}0{{{BLh{c}}d}{{BLh{c}}}BGj}```{{BHfCAj}BHf}`{{{f{BCl}}}{{C`{{f{Hd}}}}}}0{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}cABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{CId}}ddEf}{{Bd{AOjBb}}}}{{BGlddEf}BGl}`2`{{{f{BCl}}}{{f{{Af{{Cf{Cd}}}}}}}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}gABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{BCl}}}COl}{{BIhAd}BGl}{{BC`Ad}BC`}{{BIjAd}BGl}{{{f{AHn}}Ad}{{C`{L`}}}}{{BGlAd}BGl}{{{f{BIl}}Ad}{{C`{L`}}}}{{{f{DCh}}Ad}Kn}{{{f{BIl}}Ad}{{Bd{KnBb}}}}`{{{f{DDl}}Nl{f{Cl{Fl{Il}}}}}{{Bd{bBb}}}}{{{f{DDl}}Nl{f{Cl{Af{Il}}}}}{{Bd{bBb}}}}`{{{f{{Lb{{DDf{c}}}}}}g}{{Bd{eb}}}Hl{}{{A@`{{f{c}}}{{Dd{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lb{ce}}}}}FfNfBHd}{{{f{CGl}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}210{{{f{BOf}}}{{C`{Mh}}}}{{{f{AOd}}}Gb}`{{{f{AOd}}}d}`{cCCd{{AMl{BGl}}}}{{CCfc}CCh{{AMl{BGl}}}}{{CCjc}CCh{{AMl{BGl}}}}```{{BHfBC`}BHf}{{CDfBGl}CDf}{{{BKn{c}}{DDn{Ff}}}{{BKn{c}}}BLb}{{{CJh{c}}{DDn{Ff}}}{{CJh{c}}}BGj}{{BHj{C`{{DDn{Ff}}}}}BHj}{{BNld}BNl}{Ffc{}}0{FfBA`}{{{CJj{c}}{C`{{DDn{Ff}}}}}{{CJj{c}}}BGj}{{BOjFf}BOj}{{BC`d}BC`}{{BG`CAd}BG`}{{BC`BGl}BC`}{{{f{ClBA`}}{ANl{ANj}}Ed}{{C`{Ed}}}}{{{CJb{c}}{C`{{Fl{Ef}}}}}{{CJb{c}}}BGj}{{{BJ`{c}}{C`{{Fl{Ef}}}}}{{BJ`{c}}}BJb}{{BC`c}BC`{{Hh{{Af{BGl}}}}}}{{{BLh{c}}{C`{{Fl{Ef}}}}}{{BLh{c}}}BGj}{{BOj{C`{{Lb{{Fl{Ef}}}}}}}BOj}`2{{BNl{C`{{f{An}}}}}BNl}{{BOl{C`{c}}}BOl{{AMl{C@`}}}}{{{CJd{c}}{C`{C@n}}}{{CJd{c}}}{}}{{CGb{C`{C@n}}}CGb}{{{BLd{c}}{C`{C@n}}}{{BLd{c}}}BLb}{{CGf{C`{C@n}}}CGf}{{{BLl{c}}CAn}{{BLl{c}}}BLb}{{BC`c}BC`{{Hh{{Af{BC`}}}}}}{{{BLl{c}}{C`{Ff}}}{{BLl{c}}}BLb}{{{BKn{c}}{C`{Ef}}}{{BKn{c}}}BLb}0{{CDfBGl}CDf}{{CDhBGl}CDh}{{BNld}BNl}{{BOld}BOl}{{{f{BIn}}Ed}{{Bd{MjBb}}}}{{BNl{C`{{Lb{BA`}}}}}BNl}{{BOj{C`{{Lb{{Fl{Ed}}}}}}}BOj}{{BNlBOn}BNl}{{BOlBOn}BOl}{{BNlAd}BNl}{{BOlAd}BOl}{{CGbCG`}CGb}{{CGfCG`}CGf}{{CIn{Fl{BGl}}}BGl}{{{BKn{c}}{C`{Ff}}}{{BKn{c}}}BLb}{{CDhBGlBGlBGl}CDh}=={{BOjd}BOj}{{{BLh{c}}{C`{{Fl{B`}}}}}{{BLh{c}}}BGj}{{CDfBGlBGlBGl}CDf}3{{CDfBGl}CDf}{{CDhBGl}CDh}{{{CJh{c}}d}{{CJh{c}}}BGj}{{BNld}BNl}{{BHjd}BHj}{{{CJj{c}}d}{{CJj{c}}}BGj}8{{BNl{C`{Ff}}}BNl}{{BHj{C`{Ff}}}BHj}{{BOj{C`{Ff}}}BOj}{{{CJf{c}}DE`}{{CJf{c}}}BLb}{{{CJh{c}}DE`}{{CJh{c}}}BGj}{{{BKn{c}}Ef}{{BKn{c}}}BLb}8>{{AN`{DEb{EfEf}}}AN`}{{BAj{DEb{EfEf}}}BAj}=<<=<:{{BOld}BOl}>{{CFfc}CFf{{AMl{{C`{Ff}}}}}}{{{CJb{c}}{C`{Ff}}}{{CJb{c}}}BGj}{{{BJ`{c}}{C`{Ff}}}{{BJ`{c}}}BJb};{{BNlc}BNl{{AMl{{C`{Ff}}}}}};{{BHjc}BHj{{AMl{{C`{Ff}}}}}}{{{CJj{c}}{C`{Ff}}}{{CJj{c}}}BGj}{{{BLh{c}}{C`{Ff}}}{{BLh{c}}}BGj}=1={{CDhBGl}CDh};{{BNl{C`{C@b}}}BNl}{{BOl{C`{C@b}}}BOl}{{BC`CEf}BC`}{{BOjBOl}BOj}{{CFfCG`}CFf}{{BNlCG`}BNl}{{BHjCG`}BHj}{{{CJj{c}}{C`{e}}}{{CJj{c}}}BGj{{AMl{CG`}}}}{{BOj{C`{c}}}BOj{{AMl{CG`}}}}{{CFf{Lb{{Af{CG`}}}}}CFf}{{BNl{Lb{{Af{CG`}}}}}BNl}{{BHj{Lb{{Af{CG`}}}}}BHj}{{{CJd{c}}d}{{CJd{c}}}{}}{{{BLd{c}}d}{{BLd{c}}}BLb}{{{BLh{c}}{C`{{Lb{BGh}}}}}{{BLh{c}}}BGj}{{BC`d}BC`}{{{CJb{c}}{C`{{Fl{Ff}}}}}{{CJb{c}}}BGj}{{{BJ`{c}}{C`{{Fl{Ff}}}}}{{BJ`{c}}}BJb}{{{CJh{c}}{C`{{Fl{Ef}}}}}{{CJh{c}}}BGj}{{{BLh{c}}{C`{{Fl{Ff}}}}}{{BLh{c}}}BGj}{{BOj{C`{{Lb{{Fl{Ff}}}}}}}BOj}5{{{BKn{c}}Ad}{{BKn{c}}}BLb}{{BNl{C`{Ad}}}BNl}{{BOl{C`{Ad}}}BOl}{{{BKn{c}}C@h}{{BKn{c}}}BLb}{{BNld}BNl}{{BOjd}BOj}{{CFfd}CFf}2{{BHjd}BHj}{{{CJj{c}}d}{{CJj{c}}}BGj}3>{{{BLl{c}}{C`{Ff}}}{{BLl{c}}}BLb}{{CFfc}CFf{{AMl{{C`{D@n}}}}}}{{{CJb{c}}{C`{D@n}}}{{CJb{c}}}BGj}{{{BJ`{c}}{C`{D@n}}}{{BJ`{c}}}BJb}{{BC`{f{An}}{C`{Mh}}}BC`}{{BNl{C`{D@n}}}BNl}{{BNlc}BNl{{AMl{{C`{D@n}}}}}}{{BHj{C`{D@n}}}BHj}{{BHjc}BHj{{AMl{{C`{D@n}}}}}}{{{BLh{c}}{C`{D@n}}}{{BLh{c}}}BGj}{{BOj{C`{D@n}}}BOj}{{{f{BIn}}}{{Bd{MjBb}}}}{{BOjFf}BOj}{{{CJh{c}}{Lb{BA`}}}{{CJh{c}}}BGj}{{BNl{C`{{Lb{BA`}}}}}BNl}{{BHj{C`{{Lb{BA`}}}}}BHj}{{{CJj{c}}{Lb{BA`}}}{{CJj{c}}}BGj}{{{BLh{c}}{C`{{Lb{BAj}}}}}{{BLh{c}}}BGj}{{BOj{C`{{Lb{BA`}}}}}BOj}{{BNlc}{{Bd{BNlBb}}}{{Df{BA`}{{Dd{{Bd{BA`Bb}}}}}}}}{{{CJh{c}}{f{BA`}}}{{CJh{c}}}BGj}{{{CJj{c}}{f{BA`}}}{{CJj{c}}}BGj}3{{CDfBGl}CDf}{{CDhBGl}CDh}{{{BKn{c}}Ad}{{BKn{c}}}BLb}{{BNlAd}BNl}{{BOlAd}BOl}{{BC`d}BC`}{{BNlFf}BNl}{{BOjFf}BOj}102{{{BLl{c}}d}{{BLl{c}}}BLb}3{{{BKn{c}}{C`{Ef}}}{{BKn{c}}}BLb}{{CDfJf}CDf}{{CDf{C`{Ef}}}CDf}{{BNld}BNl}{{BOld}BOl}108{{{f{BCl}}{C`{Hd}}}{{Cf{Cd}}}}{{BCl{C`{Hd}}}BCl}{{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}{C`{Hd}}}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}?{{CDfBGl}CDf}{BC`BC`}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}10{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lb{CJl}}}}{f{{Af{Ad}}}}}{{Bd{FfB@l}}}}{{{f{Clc}}e}{{Bd{FfB@l}}}{}DBh}{{{f{Cl{Lb{CJl}}}}{f{{Af{DEd}}}}}{{Bd{FfB@l}}}}{{BGlc}BGl{{AMl{BGl}}}}{{{f{CGl}}}{{l{In}}}}{{{f{CGn}}}{{l{In}}}}{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}``{{{f{AIf}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BD`}}c}B`{{Df{{Gf{Mh{f{{BDb{Mh}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BD`}}c}B`{{Df{{Gf{Mh{f{{BDb{Mh}}}}}}}{{Dd{}}}}HlHn}}{{{f{{Af{{Ob{Mh}}}}}}c}B`{{Df{{Ob{Mh}}}{{Dd{C`}}}}HlHn}}{{{f{{Af{{Ob{Mh}}}}}}c}B`{{Df{{Ob{Mh}}}{{Dd{}}}}HlHn}}{{{f{{Af{c}}}}e{C`{{Lb{ADj}}}}}{{AJb{c}}}{BEhBEj}{{Ch{}{{Cb{{Gf{MhMh}}}}}}Ib}}{{{f{{Af{c}}}}{f{Hd}}e{C`{{Lb{ADj}}}}}{{AJb{c}}}{BEhBEj}{{Ch{}{{Cb{{Gf{MhMh}}}}}}Ib}}{{{f{{l{c}}}}MhMh}{{l{c}}}Db}{{{f{{Fl{{Ob{Mh}}}}}}{f{{Af{{Cf{Cd}}}}}}}d}{{{f{BEl}}{f{Bh}}}B`}{{BEnBEn}BEn}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AIh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAIj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AIl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAIn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAIn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAIn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAIj}AIn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJ`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJ`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAIj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gl{e}}}}}}0``{{{f{DEf}}}{{l{Ej}}}}0{{{f{DEf}}{f{{l{Jd}}}}d}{{Bd{B`Bb}}}}{{{f{DEf}}{f{{l{n}}}}d}{{Bd{B`Bb}}}}{{{f{DEf}}}B`}{{{f{DEf}}}{{Bd{B`Bb}}}}1{{{f{DEf}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DEf}}}{{l{Bn}}}}{{{f{DEf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEf}}Eh}{{Bd{{l{Bn}}Bb}}}}{{{f{DEf}}Ad}{{Bd{B`Bb}}}}5{{{f{DEf}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEh}}}{{f{{l{Bn}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BMbBGl}BGl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}2````````{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfdd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}`{{{f{CGl}}}{{l{Ln}}}}{{{f{CGn}}}{{l{Ln}}}}{{{f{CH`}}}{{l{Jd}}}}`{{{f{COf}}}{{l{Ln}}}}21{{{f{CGl}}}{{l{A`}}}}{{{f{CGn}}}{{l{A`}}}}{{{f{CGl}}}{{l{In}}}}{{{f{CGn}}}{{l{In}}}}55`46576{{{f{COf}}}{{l{In}}}}16{{{f{CGl}}}{{l{Mb}}}}{{{f{CGn}}}{{l{Mb}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{An}}{f{{Af{{f{An}}}}}}{f{An}}Jf}{{Jb{JhJd}}}}=<{{{f{DBl}}Nb}{{Bd{B`Bb}}}}{{{f{DBl}}{f{B`}}BNh}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfdd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJh}}{C`{{f{An}}}}Jfd{C`{{f{Ef}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{DEj}}}{{f{{l{n}}}}}}{{{f{BJh}}{C`{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEl}}}DEl}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DEl}}{f{DEl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DEl}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{f{DEl}}{f{Clc}}}bAGd}`{{}Ff}{ce{}{}}{{{f{DEl}}{f{An}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DEn{c}}}}}{{DEn{c}}}{ABfAh}}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}?{{{f{An}}}{{C`{DEl}}}}>=`{{{f{Cl{DEn{c}}}}{f{An}}}C`Ah}{{{f{ClDF`}}{f{{Af{Ad}}}}{C`{Jf}}}{{C`{c}}}{}}{{{f{Cl{DEn{Jd}}}}{f{{Af{Ad}}}}{C`{Jf}}}{{C`{Gb}}}}{{{f{Cl{DEn{In}}}}{f{{Af{Ad}}}}{C`{Jf}}}{{C`{Lh}}}}`?>{{c{C`{Jf}}}{{Bd{{DFd{}{{DFb{e}}}}Bb}}}{}{}}{{DEl{C`{Jf}}}{{Bd{{DEn{Jd}}Bb}}}}{{DEl{C`{Jf}}}{{Bd{{DEn{In}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}Ol{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CFh}}}CFh}{{{f{c}}{f{Cle}}}b{}{}}{{}CFh}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CFh}}{f{CFh}}}d}{{{f{DFf}}{f{DFf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFh}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}0{{{f{An}}}{{Bd{DFf}}}}{{{f{An}}g}{{Bd{CFhBb}}}{{Hh{An}}}{{AMl{Ef}}}{{Gn{}{{Cb{{Gf{ce}}}}}}}}{{{f{CFh}}{f{Clc}}}bAGd}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}Ol{}}033`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKf{}{{Gn{}{{Cb{c}}}}}}0{{ADhe}AKh{}{{Gn{}{{Cb{c}}}}}}0{{{f{AKj}}}{{f{Ed}}}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{{f{{Af{c}}}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{AKb}}{f{AKb}}c}{{Bd{AKbBb}}}ALj}{{{f{ALl}}{f{Ed}}}{{Bd{B`Bb}}}}`{AMhe{}{{AKf{c}}AIj}}0{{AMhADh}e{}{{AKh{c}}AIj}}0{{{ALf{An}}}Ed}{{{f{ALl}}}{{f{Ed}}}}`{{ALj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{Fl{c}}ADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{Fl{c}}ADh}{{AIj{}{{AKl{e}}{AKn{c}}{AL`{g}}}}}{ALb{ALd{e}}}ABf{{Fn{}{{Cb{e}}}}IbHlHn}}{{FfcADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{FfADh}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{ALl}}Ff}{{Bd{IdBb}}}}{{{f{ALl}}Ff}Id}{{}Ed}{{{f{ANn}}Ff}Id}4{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{AE`{cgADn}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}{{C`{c}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{{{f{AKb}}{f{AKb}}}{{Bd{{Gf{AKbAKb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{AKfe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{{ADhg}{{Bd{AKhe}}}{}{}{{Gn{}{{Cb{{Bd{ce}}}}}}}}0{AMh{{Bd{eg}}}{}{{AKf{c}}AIj}{}}0{{AMhADh}{{Bd{eg}}}{}{{AKh{c}}AIj}{}}0{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}Ff}cABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}0{{{f{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}}}gABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}{Ffc{}}0{{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}{C`{Hd}}}{{AIj{}{{AKl{c}}{AKn{e}}{AL`{g}}}}}ABf{ALb{ALd{c}}}{{Fn{}{{Cb{c}}}}IbHlHn}}```````````{{{f{AKb}}{f{AKb}}c}{{Bd{AKbBb}}}ALj}{{ALj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jb{JhJd}}}}{f{{l{n}}}}CFd{Fh{Gb}{{Dd{AJj}}}}{Fh{AJj}{{Dd{Gb}}}}{f{AJl}}{f{AJl}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{C`{{f{An}}}}{Fh{Gb}{{Dd{AJj}}}}{Fh{AJj}{{Dd{Gb}}}}{f{AJl}}{f{AJl}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{C`{{f{An}}}}{f{{l{n}}}}CFd}{{Bd{{Jb{JhJd}}Bb}}}}```{{c{C`{Hd}}}CM`{}}{{{CMb{Gb}}{CMb{Ad}}{C`{Hd}}}CMd}{{{CMb{Gb}}{CMb{Ad}}{C`{Hd}}}CMf}`{CHnBGl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CHnJf}BGl}3{{CHnBGlJf}BGl}{{CHnEf}BGl}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CHn{C`{Ef}}BGlCFd}BGl}{{CHnBGlc}BGl{{Hh{An}}}}={{CHn{f{An}}}BGl}>;0>>>>>>>{{CHnBGlEf}BGl}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6{CHnBGl}0?0`{{{f{BF`}}{f{AOj}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BF`}}}{{Bd{{f{An}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DFh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DFh{C`{{f{ADh}}}}}{{Bd{ACjBb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DFh}}}d}{{FfFf}DFh}{{{f{ClDFh}}{Cf{Cd}}}b}{{{f{ClDFh}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6`{{{f{{l{c}}}}}FfAh}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFj}}}DFj}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFj}}{f{DFj}}}d}{{{f{DFj}}{f{ClGh}}}{{Bd{bGj}}}}0{cc{}}{{{f{DFj}}{f{Clc}}}bAGd}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFl}}}DFl}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFl}}{f{DFl}}}d}{{{f{DFl}}{f{ClGh}}}{{Bd{bGj}}}}0{cc{}}{{{f{DFl}}{f{Clc}}}bAGd}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4{{KfKf}Kf}{{{f{{l{Ej}}}}Mh}{{Bd{bBb}}}}{{{f{{AJb{Mh}}}}Mh}{{Bd{bBb}}}}```{{{f{B`}}CBj}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{An}}}B`}0`{{{f{c}}h}b{}}{{{f{DFn}}}{{f{ADj}}}}{{{f{ClDFn}}}{{Cf{Cd}}}}{{{f{ClDFn}}}{{f{ClADj}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFn}}}DFn}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DFn}}}{{f{ADh}}}}{{}DFn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDFn}}Ff}b}{{{f{DFn}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DFn}}}Ff}{FfDFn}{{{f{ClDFn}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{DFn}}}{{C`{{f{DG`}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DDh}}}DDh}{{{f{c}}{f{Cle}}}b{}{}}{{}DDh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DDh}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{f{DDh}}}Ff}{{{f{DDh}}}{{Lb{BA`}}}}{{{f{CNl}}Ad{C`{Ff}}d{C`{{f{BA`}}}}FfFf{C`{{f{C@`}}}}{C`{Ad}}Ad{C`{{f{C@b}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gf{BA`FfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{CNl}}{f{BOj}}}{{Bd{DDhBb}}}}1{{{f{c}}}Ol{}}4{{DDh{Lb{BA`}}}DDh}````{{{f{{l{c}}}}eAJdd}{{Fl{Mh}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{Af{f}}}}cMhe}{{Fl{Mh}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}``{{{f{DGb}}}{{f{B`}}}}{{{f{BNd}}}{{Bd{{l{In}}Bb}}}}{{{f{BNd}}}{{Bd{{l{Ln}}Bb}}}}0{{{f{BNd}}}{{Bd{{l{A`}}Bb}}}}22112{{{f{BNd}}}{{Bd{{l{Mb}}Bb}}}}322{{{f{BNd}}{f{An}}}{{Bd{B`Bb}}}}{{{f{BNd}}Jf}{{Bd{{l{Jd}}Bb}}}}1445`{{{f{AHl}}FfFf}AHl}0`{{Ff{f{Cl{Fl{d}}}}}b}```11{{Ff{f{{Af{B`}}}}{f{ClEn}}}{{Bd{{AJf{{l{Ej}}}}Bb}}}}{{{f{{Af{B`}}}}{f{{Af{d}}}}d}{{Bd{AJhBb}}}}{{{f{An}}{f{{Af{B`}}}}{f{{Af{d}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{An}}{f{{Af{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Af{B`}}}}}{{Bd{AJhBb}}}}{{{f{{Af{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````88```{{{f{BKf}}}{{f{{l{n}}}}}}{{{f{BKj}}}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}}{{l{n}}}}{{{f{BKj}}{f{{l{n}}}}}{{l{n}}}}{{{f{BKj}}{f{An}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}dd}{{Bd{{l{A`}}Bb}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKj}}{f{An}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}Ff}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BKj}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKj}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BKj}}{f{{l{n}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BKj}}{f{An}}}{{Bd{{l{Ej}}Bb}}}}=<{{{f{{Af{{f{{l{n}}}}}}}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}{f{An}}{f{An}}}{{Bd{{l{n}}Bb}}}}0{{{f{BKj}}{f{An}}{f{An}}Ff}{{Bd{{l{n}}Bb}}}}1{{{f{BKj}}{f{{l{n}}}}}{{l{j}}}}{{{f{BKj}}{f{{l{n}}}}Ff}{{Bd{AK`Bb}}}}0{{{f{{l{n}}}}{f{{l{n}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{{l{n}}}}{f{{l{n}}}}Ffed}{{Bd{AK`Bb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{{l{n}}}}{f{An}}d}{{l{n}}}}{{{f{BKj}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{BKj}}}{{l{Ej}}}}0{{{f{BKj}}}{{l{n}}}}{{{f{BKj}}{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}404040{{{f{BKj}}{f{{l{n}}}}}{{l{n}}}}10{{{f{BKj}}{f{{l{Ej}}}}d}{{Bd{{l{Jd}}Bb}}}}444````````{{eFfFf}{{DGd{Gb}}}{{Hh{An}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DGf{Gb}}}{{Hh{{Af{Ad}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{An}}{Fl{{Cf{Cd}}}}{f{ADh}}}{{Bd{B`Bb}}}}{{{f{An}}{Fl{{Cf{Cd}}}}{f{ADh}}{C`{{f{{DEb{EfEf}}}}}}}{{Bd{B`Bb}}}}{{B`c}{}{AjKl}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AjKl}}{{B`B`}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BIl}}Eh}{{l{Ej}}}}{{{f{BIl}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bn}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BIl}}}{{f{ADj}}}}{{{f{ClBIl}}}{{f{ClADj}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBIl}}}{{f{Cl{l{c}}}}}Db}{{{f{BIl}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BIl}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBIl}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ab}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{BIl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BIl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AKb}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Al}{{{f{BIl}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{BIl}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBIl}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kf}}}Kf}1{{{f{BIl}}}{{Lb{BIl}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jb{J`In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JhJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JlJj}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}0{{{f{B`}}}f}1{Ff{{f{Clc}}}{}}00{{{f{B`}}c}{}{AjKl}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AjKl}}{Ffb}00{{{f{BIl}}}B`}{{{f{BIl}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jb{JnJd}}}}Bb}}}}{{{f{Kf}}{f{Kf}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}AMn}{{{f{B`}}{f{An}}}{{Bd{{l{A`}}Bb}}}}3{{{f{B`}}c}{}AMn}{{{f{B`}}{f{An}}}}466{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IdFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{BIl}}}{{Dj{Mj}}}}{{{f{B`}}AFd}{{Bd{B`Bb}}}}{{{f{BIl}}{f{{l{A`}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{A`}}}}d}{{Bd{B`Bb}}}}{{{f{Kf}}{f{ClGh}}}{{Bd{bGj}}}}{{{f{B`}}{f{ClGh}}}{{Bd{bGj}}}}0{{{f{B`}}}Ef}{cc{}}0{{{Jb{KbJd}}}B`}{{{l{c}}}B`Db}{{{Jb{J`In}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{JhJd}}}B`}5{{{f{An}}{f{{Af{Id}}}}d}{{Bd{B`Bb}}}}{{{f{An}}{f{{Af{Id}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{An}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{An}}{Fl{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cb{e}}}}}{}}{cB`{{Gn{}{{Cb{{f{An}}}}}}}}{cB`{{Gn{}{{Cb{Lh}}}}}}{cB`{{Gn{}{{Cb{M`}}}}}}{cB`{{Gn{}{{Cb{Lf}}}}}}{cB`{{Gn{}{{Cb{Il}}}}}}{cB`{{Gn{}{{Cb{{C`{Il}}}}}}}}{cB`{{Gn{}{{Cb{{C`{Ij}}}}}}}}{cB`{{Gn{}{{Cb{{f{Ij}}}}}}}}{cB`{{Gn{}{{Cb{{C`{d}}}}}}}}{cB`{{Gn{}{{Cb{Mh}}}}}}{cB`{{Gn{}{{Cb{Ef}}}}}}{cB`{{Gn{}{{Cb{{f{Lf}}}}}}}}{cB`{{Gn{}{{Cb{{f{Mh}}}}}}}}{cB`{{Gn{}{{Cb{{f{L`}}}}}}}}{cB`{{Gn{}{{Cb{Ad}}}}}}{cB`{{Gn{}{{Cb{{C`{Lf}}}}}}}}{cB`{{Gn{}{{Cb{Gb}}}}}}{cB`{{Gn{}{{Cb{{C`{Md}}}}}}}}{cB`{{Gn{}{{Cb{{C`{L`}}}}}}}}{cB`{{Gn{}{{Cb{{f{d}}}}}}}}{cB`{{Gn{}{{Cb{d}}}}}}{cB`{{Gn{}{{Cb{{f{Ad}}}}}}}}{cB`{{Gn{}{{Cb{Ij}}}}}}{cB`{{Gn{}{{Cb{{C`{Mh}}}}}}}}{cB`{{Gn{}{{Cb{{C`{Ad}}}}}}}}{cB`{{Gn{}{{Cb{{C`{Lh}}}}}}}}{cB`{{Gn{}{{Cb{{f{Gb}}}}}}}}{cB`{{Gn{}{{Cb{L`}}}}}}{cB`{{Gn{}{{Cb{{C`{Gb}}}}}}}}{cB`{{Gn{}{{Cb{Md}}}}}}{cB`{{Gn{}{{Cb{{f{Lh}}}}}}}}{cB`{{Gn{}{{Cb{{f{Il}}}}}}}}{cB`{{Gn{}{{Cb{{f{Md}}}}}}}}{cB`{{Gn{}{{Cb{{f{M`}}}}}}}}{cB`{{Gn{}{{Cb{{C`{M`}}}}}}}}{{{f{An}}{Fl{M`}}}B`}{{{f{An}}{Fl{Lh}}}B`}{{{f{An}}{Fl{Ad}}}B`}{{{f{An}}{Fl{Md}}}B`}{{{f{An}}{Fl{Ij}}}B`}{{{f{An}}{Fl{L`}}}B`}{{{f{An}}{Fl{Mh}}}B`}{{{f{An}}{Fl{Il}}}B`}{{{f{An}}{Fl{Lf}}}B`}{{{f{An}}{Fl{Gb}}}B`}{{{f{An}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BIl}}Ff}{{Bd{IdBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}If}{{{f{BIl}}Ff}{{C`{{f{Ih}}}}}}{{{f{BIl}}FfFf}{{C`{{f{Ih}}}}}}{{{f{BIl}}Ff}Id}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}AMn}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}{f{An}}}{{Bd{{l{A`}}Bb}}}}3{{{f{B`}}{f{An}}}}23{{{f{BIl}}}d}{{{f{Kf}}{f{Clc}}}bAGd}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{Mb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}`{{}Ff}00{ce{}{}}00{B`AOj}1{BAbB`}{B`B`}<{{{f{B`}}}{{Bd{{l{A`}}Bb}}}}000{{{f{BIl}}}{{l{A`}}}}0{{}d}0{{{f{B`}}}Kf}{{{f{B`}}}DGh}{{{f{BIl}}}Ff}{{{f{BIl}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGl}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}{f{An}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}AMn}3210{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Kl}{{{f{BIl}}}{{Bd{KnBb}}}}{{{f{BIl}}}{{C`{L`}}}}{{{f{B`}}}Kn}1232{{{f{B`}}c}{}{AjKl}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AjKl}}?{{{f{BIl}}}{{Bd{FfBb}}}}{{{f{BIl}}}{{f{An}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Lh}}}}}}}}{{{f{An}}{Lj{Gb}}}B`}{{{f{An}}c}B`{{Hh{{Af{{C`{{f{An}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{ANh}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{B`}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{{Fl{Ad}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Il}}}}}}{{{f{An}}{f{B`}}}B`}{{{f{An}}c}B`{{Hh{{Af{B`}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{{Dj{{Af{Ad}}}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{f{{Af{Ad}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{AJj}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{L`}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Mh}}}}}}{{{f{An}}c}B`{{Hh{{Af{M`}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{AJj}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{d}}}}}}}}{{{f{An}}{Lj{Mh}}}B`}{{{f{An}}c}B`{{Hh{{Af{{Dj{{Af{Ad}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{Dj{An}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{ANh}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Ij}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Md}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Ij}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Lf}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Ad}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Ad}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Lf}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Md}}}}}}{{{f{An}}c}B`{{Hh{{Af{ANf}}}}}}{{{f{An}}{Lj{Lh}}}B`}{{{f{An}}c}B`{{Hh{{Af{{C`{{Dj{An}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Lh}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{ANf}}}}}}}}{{{f{An}}c}B`BAb}{{{f{An}}c}B`{{Hh{{Af{{C`{{f{{Af{Ad}}}}}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{L`}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{AJn}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Ef}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{M`}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Mh}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{f{An}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{Gb}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Ef}}}}}}}}{{{f{An}}{Lj{Il}}}B`}{{{f{An}}c}B`{{Hh{{Af{d}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Gb}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{{C`{Il}}}}}}}}{{{f{An}}c}B`{{Hh{{Af{AJn}}}}}}{{{f{An}}c}B`{{Hh{{Af{Id}}}}}}{{{f{An}}c}B`{{Hh{{Af{{Fl{Ad}}}}}}}}{{{f{An}}{f{Ed}}}B`}{{{f{BIl}}FfFf}B`}{{{f{An}}Ff}B`}{{{f{ClDGh}}}C`}{{{f{{AFf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}AMn}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}30{{{f{B`}}c}{}AMn}{{{f{B`}}{f{An}}}}{{{f{B`}}}{{Bd{{f{ABh}}Bb}}}}{{{f{BIl}}}Ff}`{{{f{B`}}}{{Cf{K`}}}}{{{f{B`}}}{{Bd{KnBb}}}}{{{f{BIl}}L`N`}{{Bd{KnBb}}}}{{{f{BIl}}}B`}{{{f{B`}}c}{}{AjKl}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AjKl}}{{{f{ClBIl}}{f{An}}}b}{{{f{ClB`}}{f{An}}}{{f{ClB`}}}}{{{f{B`}}{Fl{{Cf{Cd}}}}}B`}{{{f{B`}}{Cf{Cd}}}B`}7{KfKf}{{{f{BIl}}{f{Df}}Nb}{{Bd{B`Bb}}}}{{{f{B`}}L`dd{C`{Il}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{Il}}}{{Bd{B`Bb}}}}{{{f{ClB`}}Kf}b}{{{f{BIl}}Gb}B`}{{{f{ClBIl}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{Il}}}B`}{{{f{DGh}}}{{Gf{Ff{C`{Ff}}}}}}{{{f{BIl}}GbFf}B`}{{{f{B`}}Eh}{{Bd{B`Bb}}}}{{{f{BIl}}Eh}{{Bd{B`Bb}}}}{{{f{BIl}}Ad}{{C`{L`}}}}{{{f{BIl}}Ad}{{Bd{KnBb}}}}{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Dj{An}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AK`}}Bb}}}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}c}{}{AjKl}}{{B`c}{}{AjKl}}{{{f{B`}}}{{Bd{cBb}}}Kl}{{{f{BIl}}}{{Bd{KnBb}}}}{{{f{B`}}}{{Bd{KnBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BIl}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Af{Nh}}}}Kf}B`}{{{f{B`}}{f{{Af{Nh}}}}}B`}{{{f{BIl}}{f{{Af{Mh}}}}}{{Bd{B`Bb}}}}{{{f{BIl}}{f{{Af{Mh}}}}}B`}{{{f{B`}}{f{{Af{Mh}}}}d}B`}{{{f{B`}}{f{{l{Ej}}}}d}{{Bd{B`Bb}}}}{{{f{BIl}}{f{{l{Ej}}}}}B`}{{{f{B`}}{f{{Af{Mh}}}}}B`}{{{f{B`}}{f{{l{Ej}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jb{KbJd}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{An}}}}d}{{Bd{AOjBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gf{{f{AN`}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}1{{{Gf{{f{An}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AN`}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{An}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}444{{{f{ClB`}}{G`{c}}}dDb}{{{f{c}}}Ol{}}00{{{f{B`}}}{{Bd{{f{{l{Ld}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ll}}}}Bb}}}}{{{f{BIl}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIl}}}{{Bd{{f{{l{c}}}}Bb}}}Db}`{{{f{BIl}}Ad}{{C`{L`}}}}{{{f{BIl}}Ad}{{Bd{KnBb}}}}{ce{}{}}00{{B`{f{An}}}B`}{{{f{B`}}c}B`{AjKl}}{{{f{B`}}{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{Dn{{f{B`}}{f{B`}}}{{Dd{B`}}}}}}{{{BGn{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNf}}c}{{Bd{B`Bb}}}Al}{{{f{{l{Fb}}}}c}{{Bd{B`Bb}}}Al}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CHj}}}CHj}{{{f{c}}{f{Cle}}}b{}{}}{{}CHj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CHj}}{f{CHj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHj}}{f{ClGh}}}{{Bd{bGj}}}}{cc{}}{{{f{CHj}}{f{Clc}}}bAGd}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}3``{{{f{c}}h}b{}}{{{f{ClDl}}}{{f{ClB`}}}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}{ce{}{}}{{{f{ClB`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}","D":"AEInN`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10476],[5,"ListType",1732,10477],[5,"ChunkedArray",17,10478],[5,"StringType",1732,10477],[5,"BooleanType",1732,10477],[5,"BinaryType",1732,10477],[1,"u8"],[1,"slice"],[10,"PolarsNumericType",1732,10477],[10,"Num",10479],[10,"ToPrimitive",10480],[1,"str"],[5,"Series",9997,10481],[6,"PolarsError",3147,10482],[6,"Result",10483],[10,"NumOpsDispatchInner",10399,10484],[6,"GroupsProxy",3520,10485],[5,"ObjectType",1732,10477],[10,"PolarsObject",1305,10486],[5,"FixedSizeListType",1732,10477],[6,"Option",10487],[17,"Item"],[10,"Array",10488],[5,"Box",10489],[10,"Iterator",10490],[5,"AmortizedListIter",10491],[0,"mut"],[17,"IsNested"],[5,"FalseT",1732,10477],[10,"PolarsDataType",1732,10477],[17,"Output"],[10,"Fn",10492],[10,"Copy",10493],[6,"Cow",10494],[5,"UnstableSeries",10452,10495],[10,"FnMut",10492],[5,"Float64Type",1732,10477],[5,"Float32Type",1732,10477],[6,"DataType",1732,10496],[5,"String",10497],[5,"SortOptions",1427,10498],[5,"UInt32Type",1732,10477],[5,"BinaryOffsetType",1732,10477],[5,"SortMultipleOptions",1427,10498],[10,"PolarsIntegerType",1732,10477],[10,"NumOpsDispatchCheckedInner",10420,10499],[5,"Iter",10500],[1,"usize"],[1,"fn"],[5,"Map",10501],[5,"Vec",10502],[10,"DoubleEndedIterator",10503],[5,"Metadata",1202,10504],[1,"i64"],[5,"OffsetsBuffer",10505],[1,"tuple"],[5,"Formatter",10506],[5,"Error",10506],[17,"Array"],[10,"IntoIterator",10507],[10,"FallibleIterator",10508],[10,"PolarsAsRef",10509],[5,"Bitmap",10510],[10,"Borrow",10511],[10,"AsRef",10512],[10,"IntoParallelIterator",10513],[10,"Send",10493],[10,"Sync",10493],[10,"NoOption",10514],[10,"TrustedLen",10515],[6,"AnyValue",1732,10516],[5,"MetadataFlags",1202,10504],[10,"PolarsObjectSafe",1305,10486],[1,"f32"],[1,"u64"],[5,"Int32Type",1732,10477],[5,"DateType",1732,10477],[5,"Logical",1732,10517],[5,"Int64Type",1732,10477],[6,"TimeUnit",1732,10518],[5,"DatetimeType",1732,10477],[5,"Int128Type",1732,10477],[5,"DecimalType",1732,10477],[5,"DurationType",1732,10477],[10,"ExactSizeIterator",10519],[5,"TimeType",1732,10477],[10,"PolarsFloatType",1732,10477],[6,"IsSorted",9997,10520],[10,"PolarsIterator",1130,10521],[6,"ChunkedArrayLayout",17,10478],[10,"NumCast",10480],[5,"Scalar",1732,10516],[1,"f64"],[5,"Arc",3883,10522],[5,"UInt16Type",1732,10477],[1,"u16"],[1,"i32"],[5,"Range",10523],[5,"UInt8Type",1732,10477],[5,"Int8Type",1732,10477],[1,"i8"],[5,"Int16Type",1732,10477],[1,"i16"],[5,"UInt64Type",1732,10477],[1,"u32"],[5,"Field",1732,10524],[10,"ParallelIterator",10513],[10,"IndexedParallelIterator",10513],[6,"QuantileInterpolOptions",3883,10525],[5,"RollingOptionsFixedWindow",3883,10526],[10,"PolarsOpsNumericType",10527],[10,"Sized",10493],[5,"ChunkId",3883,10528],[17,"HasViews"],[5,"RandomState",10529],[5,"BytesHash",10530],[5,"OwnedRepr",10531],[1,"array"],[5,"Dim",10532],[5,"ArrayBase",10533],[5,"ViewRepr",10533],[6,"Either",10534],[5,"TypeId",10535],[5,"NullableIdxSize",3883,10528],[10,"FnOnce",10492],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",808,10536],[5,"AnonymousListBuilder",836,10537],[5,"AnonymousOwnedListBuilder",836,10537],[5,"ListBooleanChunkedBuilder",836,10538],[5,"ListPrimitiveChunkedBuilder",836,10539],[10,"ListBuilderTrait",836,10540],[10,"ChunkedBuilder",836,10541],[5,"ListStringChunkedBuilder",836,10542],[5,"ListBinaryChunkedBuilder",836,10542],[5,"ListNullChunkedBuilder",836,10543],[5,"BinViewChunkedBuilder",836,10544],[10,"ViewType",10545],[5,"BooleanChunkedBuilder",836,10546],[5,"NullChunkedBuilder",836,10547],[5,"PrimitiveChunkedBuilder",836,10548],[10,"Clone",10549],[5,"NullChunked",10550],[10,"NewChunkedArray",836,10541],[10,"ChunkedCollectInferIterExt",1110,10551],[10,"ChunkedCollectIterExt",1110,10551],[10,"Canonical",1124,10552],[10,"ChunkedCollectParIterExt",1126,10553],[10,"FromParIterWithDtype",1126,10553],[5,"BooleanArray",10554],[5,"BoolIterNoNull",1130,10521],[5,"FixedSizeListArray",10555],[5,"FixedSizeListIterNoNull",1130,10521],[5,"StructIter",1130,10521],[5,"SomeIterator",1130,10521],[5,"Iter",10556],[5,"IterNames",10556],[5,"ObjectArray",1305,10486],[6,"ArrowDataType",1732,10557],[10,"Any",10535],[10,"Debug",10506],[5,"BitmapIter",10558],[6,"ZipValidity",10559],[5,"ObjectChunkedBuilder",1376,10560],[10,"AnonymousObjectBuilder",1399,10561],[5,"ObjectRegistry",1399,10561],[17,"FuncRet"],[10,"ChunkApply",1427,10562],[10,"ChunkApplyKernel",1427,10562],[10,"ChunkSort",1427,10562],[10,"ChunkUnique",1427,10562],[10,"ChunkCast",1427,10562],[6,"FillNullStrategy",1427,10562],[10,"ChunkCompare",9997,10562],[10,"ChunkExplode",1427,10562],[10,"ChunkFillNullValue",1427,10562],[10,"ChunkFilter",1427,10562],[10,"ChunkFull",1427,10562],[10,"ChunkFullNull",1427,10562],[10,"ChunkAnyValue",1427,10562],[10,"Hasher",10563],[10,"IsFirstDistinct",1427,10562],[10,"IsLastDistinct",1427,10562],[10,"ChunkAgg",1427,10562],[10,"ChunkQuantile",1427,10562],[10,"ChunkExpandAtIndex",1427,10562],[10,"Reinterpret",1427,10562],[10,"ChunkReverse",1427,10562],[10,"ChunkRollApply",1427,10562],[10,"ChunkSet",1427,10562],[10,"ChunkShift",1427,10562],[10,"ChunkShiftFill",1427,10562],[10,"SlicedArray",1427,10564],[10,"ChunkVar",1427,10562],[10,"ChunkTake",1427,10562],[10,"ChunkTakeUnchecked",1427,10562],[10,"ChunkBytes",1427,10562],[10,"ChunkZip",1427,10562],[10,"BinaryFnMut",1625,10565],[10,"StaticArray",1732,10566],[10,"TernaryFnMut",1625,10565],[10,"Error",10567],[10,"UnaryFnMut",1625,10565],[5,"PrimitiveArray",10568],[6,"SearchSortedSide",1665,10569],[5,"NoNull",3883,10570],[5,"RowsEncoded",10571],[5,"NaiveDateTime",10572],[6,"Tz",10573],[5,"NaiveTime",10574],[5,"StructChunked",1732,10575],[5,"CategoricalChunked",1732,10576],[5,"CategoricalChunkedBuilder",1732,10577],[10,"ArrayFromIter",1732,10578],[10,"ArrayFromIterDtype",1732,10578],[10,"AsRefDataType",1732,10496],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10579],[10,"From",10512],[5,"BinaryViewArrayGeneric",10545],[6,"RevMapping",1732,10580],[10,"CategoricalMergeOperation",1732,10581],[10,"LogicalType",1732,10517],[6,"CategoricalOrdering",1732,10580],[5,"OwnedObject",1732,10516],[6,"UnknownKind",1732,10496],[5,"CategoricalType",1732,10477],[6,"ArrowTimeUnit",1732],[10,"ArrayCollectIterExt",1732,10578],[5,"GlobalRevMapMerger",1732,10581],[10,"Into",10512],[10,"NumericNative",1732,10477],[5,"ArrowField",3883],[6,"IntegerType",10582],[6,"PrimitiveType",10583],[5,"TimeDelta",10584],[5,"NaiveDate",10585],[5,"LazyCompact",10586],[5,"SmartString",10587],[10,"GetAnyValue",1732,10516],[5,"CatIter",1732,10576],[6,"Ordering",10588],[5,"Duration",3883,10589],[1,"u128"],[6,"PhysicalType",10582],[5,"DataFrame",3238,10590],[5,"StringCacheHolder",3126,10591],[5,"ErrString",3147,10482],[6,"PolarsWarning",3147,10592],[5,"TryReserveError",10593],[5,"Error",10594],[5,"Utf8Error",10595],[6,"Error",10596],[6,"Error",10597],[5,"Error",10598],[10,"Display",10506],[5,"Schema",3883,10599],[10,"IntoSeries",9997,10600],[6,"NullStrategy",3238,10590],[6,"UniqueKeepStrategy",3238,10590],[5,"HashSet",10601],[5,"ArrowSchema",3883,10602],[5,"Row",3774,10603],[5,"GroupBy",3520,10604],[5,"DynamicGroupOptions",3883,10605],[5,"RangeFrom",10523],[5,"RangeTo",10523],[5,"RangeInclusive",10523],[5,"RangeToInclusive",10523],[5,"RangeFull",10523],[5,"RecordBatchIter",3238,10590],[5,"PhysRecordBatchIter",3238,10590],[5,"LazyFrame",3883,10606],[10,"IntoVec",3883,10570],[5,"MeltArgs",3491,10607],[5,"RollingGroupOptions",3883,10605],[10,"RangeBounds",10523],[6,"IndexOrder",3883,10608],[5,"StructArray",3883,10609],[5,"RecordBatchT",10610],[5,"GroupsIdx",3520,10485],[5,"UnitVec",10611],[6,"GroupByMethod",3520,10604],[5,"SlicedGroups",3520,10485],[5,"GroupsProxyParIter",3520,10485],[10,"UnindexedConsumer",10612],[6,"GroupsIndicator",3520,10485],[6,"IRAggExpr",10613],[10,"IntoGroupsProxy",3520,10614],[5,"Copied",10615],[5,"Zip",10616],[5,"GroupsProxyIter",3520,10485],[10,"IsFloat",10617],[10,"NativeType",10618],[10,"AggList",3758,10619],[10,"TakeExtremum",3758,10620],[10,"PhysicalAggExpr",3771,10621],[6,"AnyValueBuffer",3774,10622],[6,"AnyValueBufferTrusted",3774,10622],[5,"Node",10623],[6,"IR",10624],[5,"Arena",10623],[6,"AExpr",10613],[10,"JoinDispatch",3883,10625],[5,"JoinArgs",3883,10626],[10,"DfTake",3883,10627],[10,"DataFrameOps",3883,10628],[5,"CsvReader",3883,10629],[10,"PhysicalIoExpr",10630],[10,"MmapBytesReader",10631],[6,"Expr",3883,10632],[10,"LhsNumOps",10399,10484],[10,"NumOpsDispatch",10399,10484],[5,"LazyGroupBy",3883,10606],[10,"Allocator",10633],[5,"JoinBuilder",3883,10606],[10,"AnonymousScan",3883,10634],[5,"LazyJsonLineReader",3883,10635],[5,"ScanArgsAnonymous",3883,10636],[10,"FunctionOutputField",3883,10637],[5,"SpecialEq",3883,10637],[6,"VisitRecursion",10638],[6,"FunctionExpr",3883,10639],[10,"ArgAgg",3883,10640],[5,"ArrayNameSpace",3883,10641],[5,"ListNameSpace",3883,10642],[10,"SeriesTrait",9997,10520],[5,"FieldsMapper",3883,10643],[5,"IpcStreamReader",3883,10644],[10,"Read",10645],[10,"SeriesUdf",3883,10637],[10,"AsBinary",3883,10646],[10,"StringMethods",9013,10647],[5,"BorrowedFd",10648],[10,"AsFd",10648],[10,"AsList",3883,10649],[10,"AsRawFd",10650],[6,"AggExpr",3883,10632],[10,"SeriesSealed",3883,10651],[10,"AsString",3883,10652],[20,"MaybeUninit",10653],[10,"StringNameSpaceImpl",3883,10654],[5,"OwnedBatchedCsvReader",3883,10655],[5,"CsvWriter",3883,10656],[5,"BatchedWriter",10656],[10,"Write",10645],[5,"IpcWriter",3883,10657],[5,"BatchedWriter",10657],[5,"ParquetReader",3883,10658],[5,"BatchedParquetReader",3883,10659],[5,"ParquetWriter",3883,10660],[5,"BatchedWriter",10661],[5,"BatchedCsvReader",3883,10655],[5,"BinaryNameSpace",8996,10662],[6,"Operator",3883,10632],[10,"RenameAliasFn",3883,10637],[5,"UserDefinedFunction",3883,10663],[10,"SeriesBinaryUdf",3883,10637],[5,"InProcessQuery",3883,10664],[5,"HashMap",10665],[5,"CategoricalNameSpace",3883,10666],[10,"RoundSeries",3883,10667],[10,"TemporalMethods",9880,10668],[10,"NumOpsDispatchChecked",10420,10499],[5,"RollingOptionsDynamicWindow",3883,10669],[5,"Bounds",3883,10670],[5,"LazyCsvReader",3883,10671],[5,"ScanArgsIpc",3883,10672],[6,"ClosedWindow",3883,10673],[5,"ScanArgsParquet",3883,10674],[6,"Label",3883,10673],[6,"StartBy",3883,10673],[5,"Window",3883,10675],[5,"CsvReadOptions",3883,10676],[5,"CsvParseOptions",3883,10676],[6,"CsvEncoding",3883,10676],[6,"CommentPrefix",3883,10676],[6,"NullValues",3883,10676],[5,"CsvWriterOptions",3883,10677],[5,"SerializeOptions",3883,10677],[6,"QuoteStyle",3883,10677],[5,"IpcScanOptions",3883,10678],[5,"IpcWriterOptions",3883,10657],[6,"IpcCompression",3883,10657],[5,"JsonWriterOptions",3883,10679],[5,"ParquetOptions",3883,10680],[6,"JoinCoalesce",3883,10626],[6,"ParallelStrategy",3883,10680],[6,"JoinType",3883,10626],[6,"JoinValidation",3883,10626],[5,"ParquetWriteOptions",3883,10681],[6,"ParquetCompression",3883,10681],[5,"AsOfOptions",3883,10682],[6,"AsofStrategy",3883,10682],[5,"GzipLevel",3883,10681],[5,"BrotliLevel",3883,10681],[5,"ZstdLevel",3883,10681],[6,"InterpolationMethod",3883,10683],[6,"ClosedInterval",3883,10684],[6,"RankMethod",3883,10685],[5,"RankOptions",3883,10685],[6,"DslPlan",3883,10686],[5,"When",3883,10687],[5,"Then",3883,10687],[5,"ChainedWhen",3883,10687],[5,"ChainedThen",3883,10687],[6,"Excluded",3883,10632],[6,"BooleanFunction",3883,10688],[6,"CategoricalFunction",3883,10689],[6,"PowFunction",3883,10690],[6,"StringFunction",3883,10691],[5,"DatetimeArgs",3883,10692],[5,"DurationArgs",3883,10692],[5,"RollingCovOptions",3883,10693],[5,"StrptimeOptions",3883,10693],[5,"JoinOptions",3883,10693],[6,"WindowType",3883,10693],[6,"WindowMapping",3883,10693],[6,"NestedType",3883,10693],[5,"OptState",3883,10694],[6,"LiteralValue",3883,10695],[5,"AnonymousScanOptions",3883,10696],[5,"UnionArgs",3883,10696],[5,"FileMetaData",3883,10697],[5,"RollingVarParams",3883,10698],[5,"RollingQuantileParams",3883,10698],[6,"NonExistent",3883,10699],[10,"LazyFileListReader",3883,10700],[5,"CloudOptions",9148,10701],[10,"Ord",10588],[6,"ColumnOrder",10702],[10,"BinaryNameSpaceImpl",3883,10703],[5,"PathBuf",10704],[5,"IpcStreamWriterOption",3883,10644],[10,"SerWriter",3883,10705],[5,"IpcWriterOption",3883,10657],[10,"CrossJoin",3883,10706],[10,"ExprEvalExtension",3883,10707],[10,"DateMethods",9013,10708],[10,"DatetimeMethods",9013,10709],[10,"DurationMethods",9013,10710],[10,"BinaryUdfOutputField",3883,10637],[10,"Default",10711],[5,"RowGroupMetaData",10712],[5,"ParquetStatistics",3883],[6,"NullBehavior",10426,10713],[5,"Weak",10522],[5,"DateLikeNameSpace",9505,10714],[1,"char"],[10,"FromIterator",10507],[10,"SeriesMethods",3883,10715],[10,"PartialEq",10588],[10,"Scalar",10716],[10,"ListNameSpaceExtension",3883,10717],[10,"Command",10718],[5,"StructNameSpace",3883,10719],[10,"SerReader",3883,10705],[5,"IpcReader",3883,10678],[5,"IpcStreamWriter",3883,10644],[5,"JsonWriter",3883,10679],[5,"JsonReader",3883,10679],[5,"JsonLineReader",3883,10720],[5,"File",10721],[10,"UdfSchema",3883,10722],[6,"RangeFunction",10723],[6,"ListFunction",10724],[6,"StructFunction",10725],[6,"BinaryFunction",10726],[6,"ArrayFunction",10727],[6,"TemporalFunction",10728],[10,"ToOwned",10494],[5,"OsString",10729],[5,"OsStr",10729],[5,"Path",10704],[5,"CStr",10730],[1,"never"],[5,"CString",10731],[5,"MutableStatistics",10732],[5,"GrowableStruct",10733],[5,"MutableStructArray",10734],[10,"FromData",9499,10735],[5,"Buffer",10736],[10,"FromDataUtf8",9499,10735],[10,"FromDataBinary",9499,10735],[5,"ListArray",10737],[6,"Ambiguous",3883,10699],[10,"NamedFromOwned",3883,10738],[10,"DataFrameJoinOps",3883,10739],[5,"FunctionOptions",10696],[10,"PartialOrd",10588],[6,"Context",10686],[10,"SeriesReshape",3883,10740],[10,"IndexOfSchema",3883,10599],[5,"BoundsIter",3883,10675],[6,"ReaderBytes",10631],[10,"PolarsTemporalGroupby",3883,10605],[10,"PolarsArray",3883,10741],[10,"Hash",10563],[10,"SeriesJoin",3883,10742],[10,"TimeMethods",9013,10743],[10,"IntoListNameSpace",3883,10717],[5,"FileMetaData",10744],[5,"StructValueIter",10745],[10,"AsofJoin",3883,10682],[10,"AsofJoinBy",3883,10746],[10,"ListNameSpaceImpl",3883,10747],[5,"ExprNameNameSpace",3883,10748],[5,"KeyValue",10744],[10,"IntoLazy",3883,10606],[10,"Literal",3883,10695],[5,"Null",3883,10695],[5,"RowIndex",10749],[10,"ChunkAggSeries",3883,10750],[10,"QuantileAggSeries",3883,10751],[10,"PolarsMonthEnd",3883,10752],[10,"PolarsMonthStart",3883,10753],[10,"IndexToUsize",3883,10754],[10,"NamedFrom",3883,10738],[6,"RowGroupFetcher",10659],[5,"SplitNChars",3883,10755],[5,"Pin",10756],[5,"Request",10567],[10,"SeriesRank",3883,10685],[5,"BorrowedCursor",10757],[10,"VarInt",10758],[5,"IoSliceMut",10645],[10,"SeriesOpsTime",9013,10759],[10,"PolarsRound",3883,10760],[5,"AnonymousScanArgs",3883,10634],[10,"ChunkedSet",3883,10527],[5,"SchemaDescriptor",10761],[6,"SeekFrom",10645],[10,"VarAggSeries",3883,10762],[5,"StringNameSpace",10763],[10,"TakeChunked",3883,10627],[5,"IRPlan",10624],[10,"ToDummies",3883,10764],[10,"PolarsTruncate",3883,10765],[5,"AllocError",10633],[5,"RwLock",10766],[5,"SchemaInferenceResult",9850,10767],[10,"PolarsUpsample",3883,10768],[10,"VecHash",3883,10769],[5,"NonZero",10770],[6,"JsonFormat",3883,10679],[5,"BTreeMap",10771],[5,"IoSlice",10645],[10,"ArrayNameSpace",8977,10772],[10,"AsArray",8977,10773],[10,"AsString",9080,10647],[6,"Pattern",9080,10774],[5,"DatetimeInfer",9118,10775],[10,"StrpTimeParser",9118,10775],[17,"Error"],[10,"TryFromWithUnit",9118,10775],[6,"CloudType",9148,10701],[5,"AnonymousBuilder",9560,10776],[6,"RollingFunction",9749,10777],[6,"RollingFunctionBy",9778,10778],[5,"MutableNullArray",9820,10779],[5,"MutableBitmap",10780],[10,"AsSeries",9880,10668],[5,"Utf8Array",10781],[5,"BinaryArray",10782],[5,"SeriesIter",9997,10783],[10,"InitHashMaps",1732],[10,"InitHashMaps2",1732],[5,"TrueT",1732],[15,"IO",8911],[15,"Context",8911],[15,"Count",8905],[15,"Slice",8906],[8,"AllowedOptimizations",3883],[10,"ListFromIter",3883],[15,"Quantile",8789],[15,"Min",8789],[15,"Max",8789],[15,"IsBetween",9705],[15,"Any",9705],[15,"All",9705],[15,"GroupBy",8799],[15,"Union",8799],[15,"Sort",8799],[15,"Cache",8799],[15,"ExtContext",8799],[15,"DataFrameScan",8799],[15,"Select",8799],[15,"HStack",8799],[15,"Scan",8799],[15,"MapFunction",8799],[15,"Filter",8799],[15,"Distinct",8799],[15,"Slice",8799],[15,"Sink",8799],[15,"Join",8799],[15,"HConcat",8799],[15,"SortBy",8850],[15,"Filter",8850],[15,"Cast",8850],[15,"Sort",8850],[15,"Gather",8850],[15,"RenameAlias",8850],[15,"Ternary",8850],[15,"Function",8850],[15,"Window",8850],[15,"AnonymousFunction",8850],[15,"Slice",8850],[15,"BinaryExpr",8850],[15,"Round",9708],[15,"RoundSF",9708],[15,"Clip",9708],[15,"BackwardFill",9708],[15,"ForwardFill",9708],[15,"Random",9708],[15,"GatherEvery",9708],[15,"ValueCounts",9708],[15,"Rank",9708],[15,"Replace",9708],[15,"CumCount",9708],[15,"CumSum",9708],[15,"CumProd",9708],[15,"CumMin",9708],[15,"CumMax",9708],[15,"Range",8908],[15,"ConcatHorizontal",9729],[15,"ConcatVertical",9729],[15,"ExtractGroups",9729],[15,"SplitExact",9729],[15,"Contains",9729],[15,"Find",9729],[15,"Replace",9729],[10,"Utf8FromIter",9993],[10,"BinaryFromIter",9993]],"r":[[1,10784],[2,10784],[3,10784],[4,10784],[6,10591],[7,10784],[8,10784],[9,10784],[13,10784],[14,10784],[16,10591],[17,10478],[18,10478],[19,10478],[112,10478],[135,10478],[136,10478],[160,10478],[161,10478],[213,10478],[266,10478],[403,10478],[450,10478],[549,10478],[553,10478],[684,10478],[808,10536],[836,10537],[837,10537],[838,10544],[839,10544],[840,10546],[841,10541],[842,10542],[843,10538],[844,10540],[845,10543],[846,10539],[847,10542],[848,10541],[849,10547],[850,10548],[851,10544],[984,10541],[1000,10540],[1028,10541],[1093,10537],[1094,10537],[1095,10542],[1096,10538],[1097,10540],[1098,10543],[1099,10539],[1100,10542],[1108,10540],[1110,10551],[1111,10551],[1124,10552],[1126,10553],[1127,10553],[1130,10521],[1131,10521],[1132,10521],[1133,10521],[1134,10521],[1180,10521],[1200,10785],[1201,10785],[1204,10504],[1205,10504],[1305,10486],[1306,10486],[1307,10486],[1308,10486],[1319,10486],[1347,10486],[1376,10560],[1399,10561],[1400,10561],[1401,10561],[1402,10561],[1414,10561],[1415,10561],[1416,10561],[1419,10561],[1421,10561],[1428,10562],[1429,10562],[1430,10562],[1431,10562],[1432,10562],[1433,10562],[1434,10562],[1435,10562],[1436,10562],[1437,10562],[1438,10562],[1439,10562],[1440,10562],[1441,10562],[1442,10562],[1443,10562],[1444,10562],[1445,10562],[1446,10562],[1447,10562],[1448,10562],[1449,10562],[1450,10562],[1451,10562],[1452,10562],[1453,10562],[1454,10562],[1457,10562],[1458,10562],[1466,10562],[1467,10564],[1468,10498],[1469,10498],[1482,10562],[1523,10562],[1526,10562],[1535,10562],[1538,10562],[1581,10562],[1587,10562],[1623,10562],[1625,10565],[1629,10565],[1630,10565],[1631,10565],[1632,10565],[1633,10565],[1634,10565],[1635,10565],[1636,10565],[1637,10565],[1638,10565],[1639,10565],[1640,10565],[1641,10565],[1642,10565],[1643,10565],[1644,10565],[1645,10565],[1646,10565],[1647,10565],[1648,10565],[1649,10565],[1650,10565],[1651,10565],[1652,10565],[1653,10565],[1654,10565],[1655,10565],[1656,10565],[1657,10565],[1658,10565],[1659,10565],[1660,10786],[1661,10786],[1662,10787],[1663,10787],[1664,10787],[1668,10569],[1670,10569],[1688,10569],[1694,10564],[1695,10788],[1696,10788],[1697,10788],[1698,10788],[1701,10789],[1702,10790],[1703,10790],[1704,10790],[1705,10790],[1706,10790],[1707,10790],[1708,10790],[1709,10564],[1710,10498],[1711,10498],[1722,10791],[1723,10792],[1724,10792],[1725,10792],[1726,10791],[1727,10791],[1728,10793],[1729,10792],[1730,10792],[1731,10792],[1733,10516],[1737,10477],[1738,10578],[1739,10578],[1740,10578],[1741,10557],[1743,10496],[1747,10477],[1749,10477],[1750,10477],[1752,10477],[1757,10477],[1758,10477],[1759,10576],[1762,10576],[1763,10577],[1764,10581],[1765,10580],[1766,10477],[1767,10496],[1768,10496],[1769,10496],[1774,10794],[1775,10477],[1778,10795],[1779,10477],[1784,10796],[1785,10477],[1790,10797],[1791,10477],[1795,10477],[1796,10524],[1797,10524],[1800,10477],[1806,10477],[1807,10477],[1811,10477],[1812,10477],[1813,10516],[1815,10581],[1819,10798],[1820,10754],[1821,10798],[1822,10798],[1823,10799],[1824,10798],[1826,10477],[1827,10477],[1831,10477],[1832,10477],[1836,10477],[1837,10477],[1841,10477],[1842,10477],[1846,10477],[1847,10477],[1857,10477],[1858,10477],[1860,10517],[1861,10517],[1873,10477],[1876,10477],[1878,10477],[1879,10516],[1883,10799],[1884,10799],[1885,10798],[1886,10799],[1887,10799],[1888,10477],[1889,10477],[1890,10477],[1891,10477],[1893,10580],[1894,10516],[1896,10566],[1900,10477],[1902,10477],[1906,10575],[1912,10800],[1913,10477],[1914,10518],[1915,10496],[1918,10477],[1922,10477],[1923,10477],[1927,10477],[1928,10477],[1932,10477],[1933,10477],[1937,10477],[1938,10477],[1942,10496],[2111,10581],[2123,10517],[2212,10496],[2735,10581],[2736,10581],[2739,10496],[3103,10576],[3104,10576],[3105,10577],[3106,10581],[3107,10580],[3109,10581],[3113,10580],[3114,10581],[3116,10581],[3117,10581],[3118,10576],[3119,10576],[3120,10580],[3125,10580],[3126,10591],[3132,10591],[3135,10591],[3143,10591],[3152,10482],[3158,10482],[3159,10482],[3160,10592],[3174,10482],[3187,10482],[3203,10592],[3210,10482],[3211,10482],[3212,10482],[3213,10482],[3214,10482],[3215,10592],[3216,10482],[3235,10801],[3236,10801],[3237,10801],[3239,10590],[3244,10590],[3245,10590],[3247,10590],[3248,10590],[3315,10590],[3349,10590],[3412,10590],[3491,10607],[3520,10485],[3523,10604],[3524,10604],[3526,10485],[3527,10485],[3528,10485],[3529,10485],[3530,10485],[3531,10485],[3534,10485],[3536,10614],[3548,10485],[3557,10604],[3624,10604],[3634,10604],[3758,10619],[3759,10620],[3760,10620],[3761,10620],[3762,10620],[3763,10620],[3764,10620],[3765,10620],[3766,10620],[3767,10620],[3771,10621],[3776,10622],[3777,10622],[3797,10603],[3828,10603],[3849,10603],[3863,10603],[3864,10603],[3865,10603],[3881,10802],[3882,10802],[3885,10632],[3892,10694],[3894,10699],[3897,10634],[3898,10634],[3899,10696],[3905,10516],[3906,10522],[3907,10640],[3910,10536],[3915,10477],[3916,10578],[3918,10578],[3919,10578],[3920,10641],[3921,10488],[3922,10557],[3924,10602],[3926,10646],[3927,10649],[3929,10682],[3930,10496],[3931,10652],[3933,10682],[3934,10746],[3935,10682],[3938,10803],[3943,10655],[3944,10659],[3949,10477],[3950,10544],[3953,10703],[3955,10477],[3956,10477],[3958,10477],[3959,10637],[3966,10477],[3967,10546],[3968,10688],[3969,10477],[3970,10485],[3973,10670],[3974,10675],[3976,10681],[3980,10576],[3984,10576],[3985,10577],[3986,10689],[3987,10581],[3988,10666],[3989,10580],[3990,10477],[3993,10687],[3994,10687],[3995,10562],[3996,10750],[3997,10562],[3998,10562],[3999,10562],[4000,10562],[4001,10562],[4002,10562],[4003,10562],[4004,10562],[4005,10562],[4006,10562],[4007,10562],[4008,10562],[4009,10528],[4010,10626],[4011,10562],[4012,10562],[4013,10562],[4014,10562],[4015,10562],[4016,10562],[4017,10562],[4018,10562],[4019,10562],[4020,10562],[4021,10562],[4022,10562],[4023,10478],[4024,10541],[4025,10551],[4026,10551],[4027,10527],[4029,10684],[4030,10673],[4037,10676],[4048,10706],[4049,10676],[4050,10676],[4051,10676],[4052,10629],[4053,10656],[4054,10677],[4060,10496],[4061,10496],[4062,10590],[4063,10739],[4064,10628],[4068,10496],[4074,10794],[4075,10708],[4077,10477],[4080,10692],[4081,10795],[4082,10709],[4083,10477],[4088,10796],[4089,10477],[4091,10627],[4098,10686],[4102,10589],[4107,10692],[4108,10797],[4109,10710],[4110,10477],[4111,10698],[4112,10605],[4120,10632],[4124,10632],[4125,10707],[4126,10748],[4133,10803],[4134,10803],[4135,10477],[4136,10524],[4138,10524],[4139,10643],[4140,10748],[4141,10697],[4142,10804],[4144,10562],[4145,10562],[4155,10477],[4163,10477],[4164,10477],[4169,10477],[4170,10477],[4178,10735],[4179,10735],[4180,10735],[4184,10639],[4185,10637],[4189,10516],[4191,10637],[4193,10581],[4194,10604],[4196,10604],[4198,10485],[4199,10485],[4200,10485],[4201,10485],[4202,10485],[4203,10485],[4208,10681],[4217,10798],[4218,10803],[4222,10754],[4223,10798],[4224,10485],[4225,10528],[4226,10798],[4229,10664],[4231,10599],[4232,10608],[4233,10754],[4234,10799],[4235,10798],[4237,10626],[4240,10477],[4241,10477],[4246,10477],[4247,10477],[4252,10477],[4253,10477],[4258,10477],[4259,10477],[4264,10477],[4265,10477],[4268,10683],[4270,10614],[4271,10606],[4272,10717],[4273,10600],[4274,10570],[4276,10657],[4277,10678],[4278,10678],[4279,10644],[4280,10644],[4281,10644],[4282,10657],[4283,10657],[4284,10657],[4287,10562],[4291,10562],[4301,10626],[4302,10606],[4303,10626],[4304,10625],[4305,10693],[4307,10626],[4308,10626],[4310,10679],[4311,10720],[4313,10679],[4314,10679],[4315,10679],[4319,10673],[4321,10805],[4323,10805],[4324,10805],[4330,10671],[4331,10700],[4332,10606],[4333,10606],[4334,10635],[4340,10626],[4345,10484],[4352,10542],[4353,10538],[4354,10540],[4355,10477],[4357,10741],[4358,10642],[4359,10717],[4360,10747],[4361,10539],[4362,10542],[4363,10477],[4364,10695],[4366,10695],[4368,10517],[4371,10517],[4396,10607],[4414,10695],[4419,10738],[4420,10738],[4431,10693],[4433,10541],[4435,10570],[4436,10699],[4446,10695],[4454,10676],[4455,10528],[4456,10528],[4457,10484],[4458,10499],[4459,10477],[4462,10477],[4464,10477],[4468,10632],[4469,10694],[4476,10655],[4477,10516],[4479,10680],[4480,10681],[4481,10680],[4482,10658],[4484,10681],[4485,10660],[4486,10700],[4489,10799],[4490,10799],[4491,10798],[4492,10799],[4493,10799],[4495,10741],[4496,10477],[4497,10482],[4498,10477],[4499,10477],[4500,10521],[4501,10752],[4502,10753],[4503,10477],[4504,10486],[4505,10482],[4506,10760],[4507,10605],[4508,10765],[4510,10768],[4512,10690],[4513,10548],[4516,10751],[4517,10525],[4518,10677],[4526,10685],[4527,10685],[4528,10562],[4530,10637],[4535,10580],[4543,10693],[4546,10605],[4547,10669],[4548,10526],[4549,10698],[4550,10806],[4551,10698],[4554,10667],[4555,10807],[4558,10516],[4561,10636],[4562,10672],[4563,10674],[4564,10599],[4567,10599],[4568,10569],[4572,10705],[4573,10705],[4574,10677],[4575,10481],[4577,10637],[4578,10742],[4579,10715],[4580,10759],[4581,10685],[4582,10740],[4583,10651],[4584,10520],[4585,10637],[4598,10564],[4599,10485],[4604,10498],[4605,10498],[4606,10637],[4610,10755],[4612,10673],[4614,10566],[4622,10591],[4624,10477],[4625,10544],[4627,10691],[4628,10647],[4629,10654],[4631,10477],[4638,10693],[4642,10609],[4643,10575],[4646,10719],[4654,10627],[4656,10668],[4658,10687],[4665,10800],[4666,10743],[4667,10477],[4668,10518],[4669,10496],[4673,10764],[4679,10477],[4685,10477],[4686,10477],[4691,10477],[4692,10477],[4697,10477],[4698,10477],[4703,10477],[4704,10477],[4705,10722],[4709,10696],[4711,10590],[4714,10496],[4717,10663],[4726,10762],[4727,10769],[4729,10687],[4731,10675],[4734,10693],[4735,10693],[4742,10681],[4831,10808],[4836,10808],[4845,10809],[4855,10604],[4857,10810],[4859,10811],[4871,10811],[4882,10812],[4888,10813],[4891,10814],[4904,10815],[4909,10815],[4912,10562],[4918,10816],[4943,10817],[4947,10818],[4951,10819],[4959,10813],[4961,10687],[5213,10581],[5218,10818],[5226,10813],[5234,10803],[5235,10803],[5236,10803],[5242,10820],[5245,10821],[5247,10821],[5249,10821],[5431,10822],[5439,10811],[5443,10823],[5444,10810],[5446,10824],[5458,10810],[5469,10824],[5471,10825],[5474,10824],[5475,10824],[5476,10825],[5477,10825],[5486,10741],[5487,10826],[5492,10827],[5493,10496],[5501,10828],[5503,10811],[5504,10828],[5506,10828],[5508,10828],[5510,10811],[5511,10828],[5518,10784],[5520,10814],[5521,10816],[5522,10692],[5524,10814],[5525,10814],[5526,10792],[5527,10792],[5528,10792],[5591,10741],[5592,10625],[5845,10732],[5847,10784],[5849,10829],[5987,10830],[5988,10813],[5993,10810],[5994,10810],[5996,10692],[6004,10589],[6005,10589],[6258,10604],[6284,10562],[6321,10813],[6325,10741],[6328,10562],[6333,10831],[6426,10604],[6430,10811],[6434,10825],[6648,10562],[6656,10813],[6658,10562],[6699,10803],[6701,10803],[6712,10673],[6713,10673],[6790,10832],[6802,10833],[6803,10833],[6806,10834],[6814,10810],[6820,10754],[6821,10767],[6952,10814],[6953,10814],[6955,10835],[6956,10683],[6958,10835],[6959,10836],[7099,10684],[7101,10803],[7102,10837],[7109,10838],[7113,10839],[7116,10840],[7124,10818],[7127,10818],[7133,10826],[7169,10813],[7184,10813],[7196,10695],[7242,10581],[7243,10581],[7248,10812],[7259,10813],[7262,10813],[7270,10841],[7271,10803],[7272,10818],[7281,10818],[7287,10818],[7301,10496],[7312,10818],[7332,10816],[7372,10816],[7382,10842],[7383,10843],[7431,10844],[7452,10818],[7456,10813],[7457,10741],[7510,10482],[7511,10482],[7512,10482],[7513,10482],[7520,10739],[7530,10818],[7561,10811],[7572,10845],[7573,10846],[7575,10847],[7582,10833],[7587,10803],[7681,10848],[7683,10562],[7696,10820],[7734,10741],[7752,10562],[7766,10755],[7768,10755],[7785,10832],[7799,10816],[7800,10849],[7802,10849],[7804,10849],[7806,10849],[7808,10849],[7820,10818],[7843,10687],[7847,10814],[8398,10813],[8419,10741],[8577,10687],[8787,10562],[8929,10619],[8930,10620],[8931,10620],[8932,10620],[8933,10620],[8934,10620],[8935,10620],[8936,10620],[8937,10620],[8938,10620],[8942,10565],[8946,10565],[8947,10565],[8948,10565],[8949,10565],[8950,10565],[8951,10565],[8952,10565],[8953,10565],[8954,10565],[8955,10565],[8956,10565],[8957,10565],[8958,10565],[8959,10565],[8960,10565],[8961,10565],[8962,10565],[8963,10565],[8964,10565],[8965,10565],[8966,10565],[8967,10565],[8968,10565],[8969,10565],[8970,10565],[8971,10565],[8972,10565],[8973,10565],[8974,10565],[8975,10565],[8976,10565],[8977,10772],[8978,10773],[8996,10662],[9012,10666],[9013,10708],[9014,10709],[9015,10710],[9016,10669],[9017,10759],[9018,10647],[9019,10743],[9072,10850],[9080,10647],[9086,10774],[9087,10647],[9109,10647],[9118,10775],[9120,10775],[9121,10775],[9131,10775],[9150,10701],[9151,10701],[9185,10851],[9197,10701],[9198,10701],[9204,10516],[9208,10477],[9209,10578],[9210,10578],[9211,10578],[9212,10557],[9214,10496],[9218,10477],[9220,10477],[9221,10477],[9223,10477],[9228,10477],[9229,10477],[9230,10576],[9233,10576],[9234,10577],[9235,10581],[9236,10580],[9237,10477],[9238,10496],[9239,10496],[9240,10496],[9245,10794],[9246,10477],[9249,10795],[9250,10477],[9255,10796],[9256,10477],[9261,10797],[9262,10477],[9266,10477],[9267,10524],[9268,10524],[9271,10477],[9277,10477],[9278,10477],[9282,10477],[9283,10477],[9284,10516],[9286,10581],[9290,10798],[9291,10754],[9292,10798],[9293,10798],[9294,10799],[9295,10798],[9297,10477],[9298,10477],[9302,10477],[9303,10477],[9307,10477],[9308,10477],[9312,10477],[9313,10477],[9317,10477],[9318,10477],[9328,10477],[9329,10477],[9331,10517],[9332,10517],[9344,10477],[9347,10477],[9349,10477],[9350,10516],[9354,10799],[9355,10799],[9356,10798],[9357,10799],[9358,10799],[9359,10477],[9360,10477],[9361,10477],[9362,10477],[9364,10580],[9365,10516],[9367,10566],[9371,10477],[9373,10477],[9377,10575],[9383,10800],[9384,10477],[9385,10518],[9386,10496],[9389,10477],[9393,10477],[9394,10477],[9398,10477],[9399,10477],[9403,10477],[9404,10477],[9408,10477],[9409,10477],[9413,10496],[9426,10581],[9428,10517],[9433,10496],[9449,10581],[9450,10581],[9451,10496],[9469,10576],[9470,10576],[9471,10577],[9472,10581],[9473,10580],[9475,10581],[9479,10580],[9480,10581],[9482,10581],[9483,10581],[9484,10576],[9485,10576],[9486,10580],[9491,10580],[9492,10591],[9493,10591],[9494,10591],[9495,10591],[9496,10833],[9497,10833],[9498,10833],[9499,10735],[9500,10735],[9501,10735],[9505,10714],[9557,10621],[9560,10776],[9580,10786],[9581,10786],[9595,10688],[9597,10689],[9626,10639],[9657,10690],[9682,10691],[9701,10639],[9702,10639],[9703,10639],[9704,10639],[9743,10689],[9747,10690],[9753,10777],[9782,10778],[9807,10787],[9808,10787],[9809,10787],[9810,10683],[9813,10683],[9814,10836],[9815,10852],[9816,10853],[9817,10853],[9818,10853],[9819,10853],[9820,10779],[9850,10767],[9864,10767],[9877,10569],[9878,10569],[9879,10569],[9880,10668],[9881,10668],[9902,10564],[9905,10564],[9906,10788],[9907,10788],[9908,10788],[9909,10788],[9912,10789],[9913,10790],[9914,10790],[9915,10790],[9916,10790],[9917,10790],[9918,10790],[9919,10790],[9920,10564],[9921,10498],[9922,10498],[9933,10652],[9934,10755],[9935,10654],[9954,10832],[9962,10755],[9964,10755],[9966,10832],[9973,10849],[9975,10849],[9977,10849],[9979,10849],[9981,10849],[9987,10663],[9993,10854],[9994,10854],[9998,10562],[10000,10600],[10001,10520],[10004,10481],[10005,10783],[10006,10783],[10007,10520],[10021,10481],[10196,10481],[10310,10481],[10390,10481],[10399,10484],[10400,10484],[10401,10484],[10403,10484],[10407,10484],[10420,10499],[10421,10499],[10428,10713],[10452,10495],[10453,10495]],"b":[[26,"impl-Add-for-ChunkedArray%3CStringType%3E"],[27,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[28,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[29,"impl-Add-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[32,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[37,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[39,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[40,"impl-AggList-for-ChunkedArray%3CT%3E"],[41,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-ChunkedArray%3CListType%3E"],[49,"impl-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-ChunkedArray%3CFixedSizeListType%3E"],[51,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[56,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[57,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[58,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkedArray%3CListType%3E"],[63,"impl-ChunkedArray%3CFixedSizeListType%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[71,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[79,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[86,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[87,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[90,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[99,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[114,"impl-ChunkedArray%3CStringType%3E"],[115,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[124,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[137,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[169,"impl-Div-for-%26ChunkedArray%3CT%3E"],[170,"impl-Div-for-ChunkedArray%3CT%3E"],[171,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[172,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[179,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[180,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[181,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[182,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[183,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[191,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[192,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[195,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[197,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[201,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[202,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[203,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[204,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[206,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[207,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[208,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[209,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[210,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[214,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[215,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[216,"impl-Debug-for-ChunkedArray%3CT%3E"],[217,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[218,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[219,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-Debug-for-ChunkedArray%3CListType%3E"],[222,"impl-ChunkedArray%3CListType%3E"],[223,"impl-ChunkedArray%3CFixedSizeListType%3E"],[232,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[234,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[235,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[236,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[237,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[238,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[239,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[241,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[242,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[245,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[246,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[247,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[250,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[251,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[252,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[253,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[255,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[256,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[257,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[261,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[262,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[263,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[264,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[267,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[268,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[270,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[272,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[273,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[278,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[281,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[282,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[286,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[290,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[292,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[293,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[294,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[296,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[299,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[301,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[307,"impl-ChunkedArray%3CListType%3E"],[308,"impl-ChunkedArray%3CFixedSizeListType%3E"],[310,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[311,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[312,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[313,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[326,"impl-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkedArray%3CListType%3E"],[329,"impl-ChunkedArray%3CFixedSizeListType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[334,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[335,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[336,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[339,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[340,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[341,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[342,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[343,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[344,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[345,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[347,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[349,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[350,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[351,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[353,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[355,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[356,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[357,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkedArray%3CListType%3E"],[371,"impl-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[380,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[381,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[382,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[383,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[384,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[385,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[386,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[388,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[389,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[419,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[420,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[421,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[422,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[423,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[424,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[425,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[426,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[427,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[428,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[430,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[431,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[432,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[433,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[434,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[435,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[436,"impl-ChunkedArray%3CBooleanType%3E"],[437,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[438,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[440,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[441,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[442,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkedArray%3CBooleanType%3E"],[444,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[445,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[447,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[448,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[449,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[455,"impl-ChunkedArray%3CBooleanType%3E"],[456,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkedArray%3CT%3E"],[464,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[465,"impl-Mul-for-ChunkedArray%3CT%3E"],[466,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[467,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[471,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[473,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[474,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[475,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[476,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[477,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[478,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[479,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[480,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[481,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[482,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[483,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[484,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[485,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[486,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[487,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[488,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[489,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[490,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[491,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[492,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[493,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[494,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[495,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[496,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[497,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[498,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[500,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[504,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[509,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[510,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[512,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[515,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[516,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[517,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[518,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[519,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[520,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[528,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[529,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[530,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[531,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[532,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[533,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[534,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[535,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[536,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[537,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[538,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[539,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[540,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[541,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[542,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[543,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[544,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[545,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[550,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[551,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[552,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[554,"impl-ChunkedArray%3CListType%3E"],[555,"impl-ChunkedArray%3CStringType%3E"],[556,"impl-ChunkedArray%3CStringType%3E"],[557,"impl-ChunkedArray%3CListType%3E"],[560,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[561,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[562,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[563,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[564,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[565,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[572,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[573,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[574,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[575,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[576,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[577,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[578,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[579,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[580,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[581,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[582,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[594,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[595,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[596,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[597,"impl-Rem-for-ChunkedArray%3CT%3E"],[600,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[601,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[602,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[603,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[604,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[605,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[606,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[607,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[612,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[613,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[614,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[615,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[616,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[617,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[618,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[619,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[620,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[621,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[622,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[623,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[624,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[625,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[626,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[631,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[632,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[633,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[635,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[636,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[637,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[638,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[639,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[640,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[641,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[642,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[643,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[644,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[645,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[646,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[653,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[654,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[655,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[656,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[657,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[658,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[661,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[662,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[663,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[664,"impl-Sub-for-ChunkedArray%3CT%3E"],[665,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[666,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[668,"impl-ChunkedArray%3CBooleanType%3E"],[669,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[670,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[671,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[674,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[675,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[678,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[679,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[680,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[681,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[682,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkedArray%3CListType%3E"],[689,"impl-ChunkedArray%3CFixedSizeListType%3E"],[690,"impl-ChunkedArray%3CListType%3E"],[691,"impl-ChunkedArray%3CT%3E"],[696,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[697,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[698,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[699,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[700,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[701,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[703,"impl-ChunkedArray%3CListType%3E"],[704,"impl-ChunkedArray%3CFixedSizeListType%3E"],[717,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[718,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[719,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[721,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[726,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[727,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[728,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[729,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[730,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[731,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[732,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[733,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[734,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[735,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[736,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[737,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[738,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[739,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[740,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[741,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[742,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[743,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[745,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[747,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[749,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[752,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[753,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[755,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[756,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[758,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[760,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[769,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[770,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[771,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[772,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[773,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[774,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[775,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[776,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[777,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[778,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[779,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[780,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[781,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[782,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[783,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[784,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[785,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[979,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[980,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1215,"impl-MetadataFlags"],[1216,"impl-Flags-for-MetadataFlags"],[1243,"impl-Binary-for-MetadataFlags"],[1244,"impl-UpperHex-for-MetadataFlags"],[1245,"impl-LowerHex-for-MetadataFlags"],[1246,"impl-Debug-for-MetadataFlags"],[1247,"impl-Octal-for-MetadataFlags"],[1251,"impl-MetadataFlags"],[1252,"impl-Flags-for-MetadataFlags"],[1310,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1311,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1343,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1344,"impl-ObjectArray%3CT%3E"],[1356,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1357,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1367,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1368,"impl-ObjectArray%3CT%3E"],[1370,"impl-ObjectArray%3CT%3E"],[1371,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1373,"impl-ObjectArray%3CT%3E"],[1374,"impl-Array-for-ObjectArray%3CT%3E"],[1377,"impl-ObjectChunkedBuilder%3CT%3E"],[1378,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1380,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1381,"impl-ObjectChunkedBuilder%3CT%3E"],[2113,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2114,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2115,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2116,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2117,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2121,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2122,"impl-Logical%3CDurationType,+Int64Type%3E"],[2368,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2369,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2370,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2371,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2372,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2381,"impl-PartialEq-for-DataType"],[2382,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2388,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2389,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2390,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2392,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2393,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2394,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2428,"impl-Debug-for-AnyValue%3C\'a%3E"],[2429,"impl-Display-for-AnyValue%3C\'_%3E"],[2431,"impl-Display-for-DataType"],[2432,"impl-Debug-for-DataType"],[2434,"impl-Display-for-TimeUnit"],[2435,"impl-Debug-for-TimeUnit"],[2440,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2441,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2456,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2457,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2458,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2459,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2460,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2464,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2465,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2466,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2467,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2469,"impl-From%3C%26ArrowField%3E-for-Field"],[2493,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2494,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2517,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2518,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2519,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2520,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2521,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2525,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2526,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2527,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2528,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2529,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2565,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2566,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2567,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2569,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2570,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2571,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2673,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2674,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2675,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2676,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2677,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2727,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2728,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2729,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2731,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2732,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2733,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2746,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2747,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2748,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2749,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2772,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2773,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2774,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2775,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2776,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2777,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2778,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2779,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2785,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2786,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2787,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2789,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2790,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2791,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2795,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2796,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2816,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2817,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2824,"impl-Logical%3CDurationType,+Int64Type%3E"],[2825,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2830,"impl-Logical%3CDateType,+Int32Type%3E"],[2831,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2832,"impl-Logical%3CTimeType,+Int64Type%3E"],[2846,"impl-Logical%3CDurationType,+Int64Type%3E"],[2847,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2895,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2896,"impl-Logical%3CTimeType,+Int64Type%3E"],[2897,"impl-Logical%3CDateType,+Int32Type%3E"],[2903,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[2904,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3189,"impl-Display-for-ErrString"],[3190,"impl-Debug-for-ErrString"],[3191,"impl-Display-for-PolarsError"],[3192,"impl-Debug-for-PolarsError"],[3196,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3197,"impl-From%3CError%3E-for-PolarsError"],[3198,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3199,"impl-From%3CError%3E-for-PolarsError"],[3200,"impl-From%3CError%3E-for-PolarsError"],[3202,"impl-From%3CError%3E-for-PolarsError"],[3324,"impl-Display-for-DataFrame"],[3325,"impl-Debug-for-DataFrame"],[3331,"impl-From%3C%26Schema%3E-for-DataFrame"],[3332,"impl-From%3CStructChunked%3E-for-DataFrame"],[3333,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3360,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3361,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3362,"impl-Index%3C%26str%3E-for-DataFrame"],[3363,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3364,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3365,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3366,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3367,"impl-Index%3Cusize%3E-for-DataFrame"],[3458,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3459,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3632,"impl-Debug-for-GroupByMethod"],[3633,"impl-Display-for-GroupByMethod"],[3640,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3641,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3642,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3676,"impl-IntoIterator-for-%26GroupsIdx"],[3677,"impl-IntoIterator-for-GroupsIdx"],[3679,"impl-IntoParallelIterator-for-GroupsIdx"],[3680,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4945,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4946,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5572,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5573,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5574,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6046,"impl-Expr"],[6047,"impl-PartialEq-for-Expr"],[6050,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6051,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6065,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6066,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6067,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6073,"impl-PartialEq-for-StructArray"],[6074,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6342,"impl-Debug-for-Duration"],[6343,"impl-Display-for-Duration"],[6367,"impl-Debug-for-JoinType"],[6368,"impl-Display-for-JoinType"],[6369,"impl-Display-for-JoinValidation"],[6370,"impl-Debug-for-JoinValidation"],[6382,"impl-Display-for-Expr"],[6383,"impl-Debug-for-Expr"],[6385,"impl-Debug-for-Operator"],[6386,"impl-Display-for-Operator"],[6388,"impl-Debug-for-BooleanFunction"],[6389,"impl-Display-for-BooleanFunction"],[6390,"impl-Display-for-CategoricalFunction"],[6391,"impl-Debug-for-CategoricalFunction"],[6392,"impl-Debug-for-PowFunction"],[6393,"impl-Display-for-PowFunction"],[6394,"impl-Debug-for-StringFunction"],[6395,"impl-Display-for-StringFunction"],[6396,"impl-Display-for-FunctionExpr"],[6397,"impl-Debug-for-FunctionExpr"],[6410,"impl-Pointer-for-Arc%3CT,+A%3E"],[6411,"impl-Debug-for-Arc%3CT,+A%3E"],[6412,"impl-Display-for-Arc%3CT,+A%3E"],[6459,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6461,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6524,"impl-From%3Cu8%3E-for-Expr"],[6525,"impl-From%3Cu32%3E-for-Expr"],[6527,"impl-From%3Ci64%3E-for-Expr"],[6528,"impl-From%3Cbool%3E-for-Expr"],[6529,"impl-From%3Ci16%3E-for-Expr"],[6530,"impl-From%3Cu64%3E-for-Expr"],[6531,"impl-From%3CAggExpr%3E-for-Expr"],[6532,"impl-From%3Cf32%3E-for-Expr"],[6533,"impl-From%3Ci32%3E-for-Expr"],[6534,"impl-From%3Cf64%3E-for-Expr"],[6535,"impl-From%3Ci8%3E-for-Expr"],[6536,"impl-From%3Cu16%3E-for-Expr"],[6537,"impl-From%3C%26str%3E-for-Expr"],[6540,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6542,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6543,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6544,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6545,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6546,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6547,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6548,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6549,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6550,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6555,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6557,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6558,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6559,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6573,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6574,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6575,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6576,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6577,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6579,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6580,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6582,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6583,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6584,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6585,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6586,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6587,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6588,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6589,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6597,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6598,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6599,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6600,"impl-From%3CArrowSchema%3E-for-Schema"],[6602,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6603,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6604,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6605,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6620,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6621,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6629,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6630,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6642,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6643,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7739,"impl-StructArray"],[7740,"impl-Array-for-StructArray"],[7748,"impl-StructArray"],[7749,"impl-Array-for-StructArray"],[8422,"impl-StructArray"],[8423,"impl-Array-for-StructArray"],[8666,"impl-LazyCsvReader"],[8667,"impl-LazyFileListReader-for-LazyCsvReader"],[8668,"impl-LazyJsonLineReader"],[8669,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8716,"impl-LazyCsvReader"],[8717,"impl-LazyFileListReader-for-LazyCsvReader"],[8718,"impl-LazyJsonLineReader"],[8719,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8755,"impl-Array-for-StructArray"],[8756,"impl-StructArray"],[9137,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9138,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9143,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9144,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9766,"impl-Debug-for-RollingFunction"],[9767,"impl-Display-for-RollingFunction"],[9795,"impl-Display-for-RollingFunctionBy"],[9796,"impl-Debug-for-RollingFunctionBy"],[10012,"impl-Add%3CT%3E-for-Series"],[10013,"impl-Add-for-%26Series"],[10014,"impl-Add%3CT%3E-for-%26Series"],[10015,"impl-Add-for-Series"],[10030,"impl-AsSeries-for-Series"],[10031,"impl-SeriesSealed-for-Series"],[10075,"impl-Div%3CT%3E-for-%26Series"],[10076,"impl-Div-for-Series"],[10077,"impl-Div-for-%26Series"],[10078,"impl-Div%3CT%3E-for-Series"],[10088,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10089,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10090,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10092,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10093,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10094,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10111,"impl-Debug-for-Series"],[10112,"impl-Display-for-Series"],[10116,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10117,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10118,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10119,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10120,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10127,"impl-FromIterator%3C%26str%3E-for-Series"],[10128,"impl-FromIterator%3Ci32%3E-for-Series"],[10129,"impl-FromIterator%3Ci8%3E-for-Series"],[10130,"impl-FromIterator%3Cu16%3E-for-Series"],[10131,"impl-FromIterator%3Cu64%3E-for-Series"],[10132,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10133,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10134,"impl-FromIterator%3C%26f32%3E-for-Series"],[10135,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10136,"impl-FromIterator%3Cu32%3E-for-Series"],[10137,"impl-FromIterator%3CString%3E-for-Series"],[10138,"impl-FromIterator%3C%26u16%3E-for-Series"],[10139,"impl-FromIterator%3C%26u32%3E-for-Series"],[10140,"impl-FromIterator%3C%26f64%3E-for-Series"],[10141,"impl-FromIterator%3Cu8%3E-for-Series"],[10142,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10143,"impl-FromIterator%3Ci64%3E-for-Series"],[10144,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10145,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10146,"impl-FromIterator%3C%26bool%3E-for-Series"],[10147,"impl-FromIterator%3Cbool%3E-for-Series"],[10148,"impl-FromIterator%3C%26u8%3E-for-Series"],[10149,"impl-FromIterator%3Cf32%3E-for-Series"],[10150,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10151,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10152,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10153,"impl-FromIterator%3C%26i64%3E-for-Series"],[10154,"impl-FromIterator%3Cf64%3E-for-Series"],[10155,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10156,"impl-FromIterator%3Ci16%3E-for-Series"],[10157,"impl-FromIterator%3C%26i32%3E-for-Series"],[10158,"impl-FromIterator%3C%26u64%3E-for-Series"],[10159,"impl-FromIterator%3C%26i16%3E-for-Series"],[10160,"impl-FromIterator%3C%26i8%3E-for-Series"],[10161,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10162,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10163,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10164,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10165,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10166,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10167,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10168,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10169,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10170,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10171,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10181,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10182,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10183,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10185,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10186,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10187,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10223,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10224,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10225,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10227,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10228,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10229,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10238,"impl-Mul%3CT%3E-for-%26Series"],[10239,"impl-Mul-for-Series"],[10240,"impl-Mul-for-%26Series"],[10241,"impl-Mul%3CT%3E-for-Series"],[10245,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10246,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10247,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10248,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10249,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10250,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10251,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10252,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10253,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10254,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10255,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10256,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10257,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10258,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10259,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10260,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10261,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10262,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10263,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10264,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10265,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10266,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10267,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10268,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10269,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10270,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10271,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10272,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10273,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10274,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10275,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10276,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10277,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10278,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10279,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10280,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10281,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10282,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10283,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10284,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10285,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10286,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10287,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10288,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10289,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10290,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10291,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10292,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10293,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10294,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10295,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10301,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10302,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10303,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10305,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10306,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10307,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10315,"impl-Rem%3CT%3E-for-%26Series"],[10316,"impl-Rem-for-%26Series"],[10317,"impl-Rem%3CT%3E-for-Series"],[10342,"impl-Sub-for-%26Series"],[10343,"impl-Sub-for-Series"],[10344,"impl-Sub%3CT%3E-for-%26Series"],[10345,"impl-Sub%3CT%3E-for-Series"],[10371,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10373,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10374,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10375,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAOUNLA5pDmwObQ5uDm8OcA51DngOfQ5+DqMO","e":"OzAAAAEAAK0d+gMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAMwAAADgABQBCAAIARgAKAFUABQBcAAsAawAFAHIAFgCKAAYAkgAIAJ4AAgCiAAAApQAMALQAFADKAAoA1gALAOQAAQDoAB0ADAEUACMBEgA3ARIATwEeAHABAgB3ARAAiQEDAJABAQCUAQEAlwEGAKMBIADIAQYA0QEHANoBMgARAhMAJgIDACsCBAAxAgUAOwIAAD0CGgBZAgcAZQIQAHgCDwCKAhcApQICAK4CAQC1AgAAuQIHAMMCAQDGAgwA1AIAANYCJwAAAwAAAgMjACgDNABfAwgAbAMRAIEDWADnAxIABQQHAA4EXABsBAAAbwQUAIgEAwCQBAMAlgQkAMEEAADEBAgAzwQFANYEAQDZBAAA2wQFAOUEAADnBAAA6gQHAPcEAAD6BAIAAgUIAA4FAQARBQUAGAUDAB4FEwAzBQcAPAUAAD8FAQBCBQEARgUOAFYFAABYBQAAWwUCAF8FAgBjBQIAZwUHAHAFAAByBQUAegUBAH0FAAB/BQEAggUDAIcFAwCMBQIAkAUDAJYFAACZBQAAoQUAAKYFAACpBQEArgUBALEFAAC0BQAAuwUAAMAFAgDLBQYA1AUNAOQFBQDsBQgA9wUEAP4FAAAABgAAAgYBAAgGBQARBgEAGgYBACYGAAAoBgEAKwYAAC4GAAAwBgAANAYAADYGAAA7BgwASgYCAFgGAABaBgcAYwYCAGkGAABrBgMAcAYBAHMGBQB/BhUAlgYBAJoGBACgBgMApwYGALsGAwDABgcAyQYEANAGAgDUBgUA3AYAAN4GDADvBgEA8wYBAPkGAQD8BgEA/wYDAAQHAAAGBwAACQcBAA0HAAAPBwEAEgcAABQHAgAYBwwAJgcAACgHAQArBwAALQcBADAHAAAyBwEANQcAADcHAQA6BwAAPgcAAEIHAQBGBwAASQcAAEsHAABNBwMAUgcAAFUHCABfBwEAYgcFAGkHAQBtBwAAbwcCAHQHAAB5BwMAfgcBAIEHAACDBwEAhgcAAIgHAQCLBwAAjQcBAJAHAACSBwEAlQcAAJcHAACaByYAwgcXANsHbgBMCFAAnggHAKgIlwBBCQcASgkoAHQJAQB3CQ8AiQkBAJkJBAChCQMApgkAAKgJAAC+CQEAwQkAAMkJAADMCQAAzgkGANYJBADcCQAA3gkEAOQJAQDnCRkABgoPABgKKgBECgAAcAoJAHwKAAB+CgEAgQoEAIcKAQCMCgAAjgoFAJUKAACYCgIAnQoEAKMKAACmCg8AuAoAALsKEgDPCgAA0goNAOEKDADvCgAA8QoBAPUKDgAFCwAADAsAAA4LAAATCw8AJQsAACcLAgAsCyEAUwtlALoLLwDrCwIA7ws1ACYMAQApDAgAMwwAADUMAQA4DAQAPgwBAEMMAABFDAIASQwAAEwMGgBoDBEAfAwFAIMMBACLDAQAkQwVAKoMAACtDAoAuQwCAMEMEADUDBAA7AwBAPAMAgD0DAAA9gwAAPsMAwAEDQMAFg0AABgNAAAaDQEAIQ0MADQNAgBHDQEAVA0BAFgNAABeDQAAZw0BAGoNAABtDQEAdA0AAHYNBAB+DQYAhw0JAJINAACVDQEAmQ0EAKUNDQC0DQIAuQ0KAMUNAQDIDQMAzQ0DANINCQDdDQcA5g0BAOkNGAADDigALQ4GADkOAgA9DgAAPw4AAEEOAwBHDgAASw4HAFsODQBqDgEAcQ4DAHYOAQB6DgIAfw4AAIEOHwCkDgwAsw4FALoOBwDDDiMA6Q4LAPYODgAGDwAACA8AAAoPAwARDwYAGw8OACwPBQA0DwAANw8IAEEPAQBFDwQASw8FAFIPAABXDwkAYg8BAGYPAwBrDwEAbg8KAHoPAAB9DwAAfw8JAIoPAACMDwgAlg8DAJ4PAAChDwAAqQ8CALAPAACzDwEAuQ8KAMUPDwDYDwYA4A8BAOMPAwDrDwMA8g8CAPkPAwD+DwAAABAKAA0QCgAZEAIAHhAAACEQAAAjEAUAKhADAC8QBAA1EAMAPBACAEIQAABEEAEASBAAAEoQBABREA8AYhAAAGUQAQBoEAMAbhACAHQQEwCJEAkAlRAAAJcQAQCbEAAAnRABAKEQAACjEAEApxAAAKkQBACwEAEAsxABALcQAAC6EAAAvBADAMEQAgDFEAYAzhAHANgQAADcEAEA4BAAAOIQAADkEAEA5xABAOoQAQDvEA4AAREFAAgRBwASEQIAFhEGACERAQAkEQAAJhEBACkRAwAvEQEAMhECADYRAAA4EQMAPhEEAEQRAwBJEQEATBEBAE8RAQBSEQEAVREAAFcRAABZEQAAWxECAGARAwBlEQcAbxECAHURAAB3EQQAfREDAIIRAACFEQAAhxEEAI0RAwCSEQIAlhECAJoRDACoESQAzhEGANYRAwDdEQEA4REAAOMRBgDrEQQA8REAAPMRAgD4EQEA+xEBAAASCwAQEgYAGBIJACUSAQAoEgYAMBIBADQSAQA6EgQAQBIJAEwSAABOEgEAUhIAAFQSAQBYEgAAWhIBAF4SAABgEgMAZhIDAGsSAgByEgcAexIAAH4SAwCEEgIAiBJZAOMSAwDrEgAA7RIAAPASBQD4EgAA/xIAAAETAAAEEwAABhMAAAoTBQAUEwAAGBMAAB8TAAAjEwAALxMCADMTBAA5EwAAOxMCAD8TAQBFEwEASBMEAE4TAQBWEwoAYxPyAFcUAABZFAEAXBQAAF4UAgBlFAEAaxQAAG0UAAB1FAAAdxQBAHoUAACEFEoA0BQLAN0UVwA2FQEAOhUBAD4VAABCFQIASBUKAFYVBABgFQAAYhUAAGwVAQBwFQAAdhUAAHgVAQB9FQEAjBUAAJIVAACXFQIAnRUAAJ8VBQCnFSgA0RX7AM8WAADUFgEA1xYDAN0WAADfFgIA5hYYAAAXUABSFw0AZBcBAGkXAABsFwAAcBcCAHQXKgCgFxEAsxcMAMMXpABsGAAAcBgAAHIYBAB4GAAAfBgAAIIYAACEGAAAjRgAAJAYAACYGAAAmxgCAKAYAwClGAEAqRgBAKwYAACuGAMAthgAALkYAQC+GF4AHhkAACEZAAA8GQAAPhkAAFEZAABZGQAAZBkAAH0ZAQCAGQoAjRkAAI8ZCACcGQAAnhkCAKcZAAC2GQAAwRkAAMYZAwDLGQMA0RkAANcZAADaGQQA4BkAAOYZAQDqGQIA8BkFAPcZAgD7GQAA/hkBAAEaAAADGgAABRoAAAoaAAATGgAAFhoBABkaAgAeGgAAIRoAACUaAQApGgQAMhoBADYaAABBGgAAQxo9AIQaAgCLGgAAjRoAAI8aBACXGgAAmRoAAJwaAACjGgIAqBp7ACYbAAArGwIALxsBAKobAACsGwYAtRsBALgbBQDAGwAAwhsCAMYbAQDKGwAAzRsBANobAADcGwAA3xsBAOIbAwDoGwIA+RsBAPwbAQAFHAAABxwBAAocAAAOHAIAFBwAABYcAQAaHAAAHxwBACMcAQAnHAIAKxwDADEcDgBFHAAASxwBAFIcAABVHAUAXhwAAGYcAgB7HAAAghwBAIYcAACKHAEAjRwAAJAcAACVHAAAlxwAAJkcAAChHAAAoxwCAKocCAC5HAgAxxwAAMkcAADNHAAA0xwAANUcAwDdHAEA4BwBAOMcAADmHAcA7xwAAPEcAgD1HAAA+BwBAAgdAAALHQEAFh0GACIdAgAqHQAAMB0CADQdAAA9HQAAPx0DAEQdBQBMHQUAVx0DAFwdAABgHQIAZh0AAGkdAAB1HQAAeB0BAHsdAQB+HQMAhB0FAIsdBACWHQAAmB0AAJwdAACfHQAAoR0DAKgdAACsHQAArh0AALAdAQDTHQAA2B0AAOIdAwDnHQUA7h0AAPAdAADzHQAA+R0BAP4dAgACHgIACB4AAAoeAQANHgEAEB4BABceAwAeHgAAKh4AACweAAAzHgQAPR4BAEIeAABEHgAARh4AAEkeAABLHgAAUR4JAFweAABeHgAAYh4AAGgeAABqHgAAcR4AAHgeCgCFHgIAih4CAJUeAACkHgAAph4AAKkeAgCtHgMAsx4BALYeAAC5HgAAvR5ZABkfCgAlHwAAKx8LADgfAQA7H4YAxB8AAMgfdwBDIAAARSADAFAgAABTIAAAVyB2AM8gAADbIAAA4iAEAOggAQDsIAAA7iAAAPAgAAD0IAAA+iAAAPwgAAD+IHcAfSEDAIYhAACJIQAAjCEAAI4hAQCUIQAAnCEAAKUhAACrIQAAtiEAALwhAADJIQEA3CEAAN4hAQDiIQAA6yEDAPAhBAAFIgAADiIAABAiAAAYIgAAHSIAAC0iAQA0IgAANiIAADoiFABTIgEAViJFAJ4iAACgIgAAoiIBAKUiAQCoIgQAriI1AOYiBQDtIgkA+CICAP4iAAAAIwMABSMBAAgjBQASIxIAJiMBACkjAgAuIwAAMSMDADYjBgBNIwAAWyMCAHEjAAB5IwgAhiMAAIgjCwCVIwIAmSMRAKwjAQCvIw8AwCMXANojAADcIwIA4SMMAO8jBwD4IwQA/yMCAAMkBQALJAAADSQMAB4kAQAiJAEAKCQBACskAQAuJAMAMyQAADUkAAA4JAEAPCQAAD4kAQBBJAAAQyQCAEckDABVJAAAVyQBAFokAABcJAEAXyQAAGEkAQBkJAAAZiQBAGkkAABtJAAAcSQBAHUkAAB4JAAAeiQAAHwkAwCBJAAAhCQIAI4kAQCRJAUAmCQBAJwkAACeJAIAoyQAAKgkAwCtJAEAsCQAALIkAQC1JAAAtyQBALokAAC8JAEAvyQAAMEkAQDEJAAAxiQAAMkkEQDcJAYA5SQAAOgkEAD6JAgABCUBAAclCAARJQAAEyUBABklAAAbJQQAJCUBAC0lAgAzJQAANSUAAD8lAABOJQMAViUKAGIlAABkJQgAbyW5AComAQAtJhgARyYBAEomDgBbJhEAbiYAAHAmFQCHJgEAiiYAAIwmCwCZJgIAoCYAALMmAwC6JgYAziYFANYmAADfJgAA4SYBAOgmBwD2JgoACicEABAnAAASJwIAFicEAB0nAwAiJwEAJicAACwnBAA1JwIAOScGAEMnAgBKJwIATicBAFQnDgBmJwEAaicBAG0nAQByJwIAfycDAIUnBACNJwAAjycuAMEnAADGJwAAyCcAAMonAADMJwAAzicAANQnBADcJwMA5ycCAO4nAADxJwEA9ScBAPonAAD/JwMABigwADgoAAA7KAEAPigBAEMoAQBHKAEATCgCAFQoAABXKAEAXCgBAGAoAABkKAAAZygDAHAoAAB7KAAAfSgBAIAoCwCNKAIAligBAJooAgCeKAAAoCgWALkoAQC9KA4AzSgBANAoBQDXKAoA4ygAAOUoAADnKAQA"}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCTTFFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","comparison","cont_slice","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","DEFAULT","FAST_EXPLODE_LIST","Metadata","MetadataFlags","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","cast","clone","clone","clone_into","clone_into","complement","contains","default","default","deref","deref","deref_mut","deref_mut","difference","drop","drop","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fallible_iter","from_iter","from_name","get_distinct_count","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter_names","not","remove","set","set_distinct_count","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vzip","vzip","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","replace_chunks","replace_with_chunk","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_set_metadata","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[419,"polars_core::chunked_array::arithmetic"],[447,"polars_core::chunked_array::builder"],[551,"polars_core::chunked_array::builder::list"],[705,"polars_core::chunked_array::collect"],[719,"polars_core::chunked_array::float"],[721,"polars_core::chunked_array::from_iterator_par"],[725,"polars_core::chunked_array::iterator"],[762,"polars_core::chunked_array::iterator::par"],[764,"polars_core::chunked_array::metadata"],[867,"polars_core::chunked_array::object"],[938,"polars_core::chunked_array::object::builder"],[961,"polars_core::chunked_array::object::registry"],[989,"polars_core::chunked_array::ops"],[1110,"polars_core::chunked_array::ops::arity"],[1145,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1147,"polars_core::chunked_array::ops::gather"],[1150,"polars_core::chunked_array::ops::search_sorted"],[1179,"polars_core::chunked_array::ops::sort"],[1186,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1187,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1194,"polars_core::chunked_array::ops::sort::options"],[1268,"polars_core::chunked_array::temporal"],[1269,"polars_core::chunked_array::temporal::conversion"],[1272,"polars_core::config"],[1276,"polars_core::datatypes"],[2680,"polars_core::datatypes::categorical"],[2820,"polars_core::datatypes::categorical::revmap"],[2872,"polars_core::datatypes::categorical::string_cache"],[2891,"polars_core::datatypes::revmap"],[2897,"polars_core::datatypes::string_cache"],[2901,"polars_core::error"],[2962,"polars_core::error::PolarsError"],[2966,"polars_core::error::constants"],[2969,"polars_core::export"],[2977,"polars_core::fmt"],[3007,"polars_core::frame"],[3269,"polars_core::frame::explode"],[3298,"polars_core::frame::group_by"],[3533,"polars_core::frame::group_by::GroupByMethod"],[3534,"polars_core::frame::group_by::GroupsProxy"],[3536,"polars_core::frame::group_by::aggregations"],[3549,"polars_core::frame::group_by::expr"],[3552,"polars_core::frame::row"],[3646,"polars_core::functions"],[3648,"polars_core::hashing"],[3696,"polars_core::prelude"],[4250,"polars_core::prelude::PolarsError"],[4254,"polars_core::prelude::default_arrays"],[4260,"polars_core::prelude::list"],[4283,"polars_core::prelude::null"],[4313,"polars_core::prelude::revmap"],[4319,"polars_core::prelude::slice"],[4322,"polars_core::prelude::string_cache"],[4326,"polars_core::prelude::utf8"],[4330,"polars_core::random"],[4331,"polars_core::schema"],[4405,"polars_core::series"],[4787,"polars_core::series::arithmetic"],[4812,"polars_core::series::arithmetic::checked"],[4820,"polars_core::series::ops"],[4846,"polars_core::series::unstable"],[4870,"polars_core::utils"],[4979,"polars_core::utils::flatten"],[4984,"dyn_clone::sealed"],[4985,"num_traits"],[4986,"num_traits::cast"],[4987,"polars_error"],[4988,"polars_core::series::arithmetic::borrowed"],[4989,"polars_core::frame::group_by::proxy"],[4990,"core::option"],[4991,"core::iter::traits::iterator"],[4992,"core::ops::function"],[4993,"core::marker"],[4994,"polars_core::datatypes::dtype"],[4995,"alloc::string"],[4996,"polars_core::datatypes::aliases"],[4997,"polars_core::series::arithmetic::borrowed::checked"],[4998,"polars_arrow::array"],[4999,"alloc::vec"],[5000,"core::iter::traits::double_ended"],[5001,"core::fmt"],[5002,"core::iter::traits::collect"],[5003,"core::result"],[5004,"polars_utils::iter::fallible"],[5005,"polars_arrow::bitmap::immutable"],[5006,"rayon::iter"],[5007,"polars_arrow::trusted_len"],[5008,"polars_core::datatypes::any_value"],[5009,"polars_core::chunked_array::logical::decimal"],[5010,"core::iter::traits::exact_size"],[5011,"polars_core::series::series_trait"],[5012,"core::slice::iter"],[5013,"core::iter::adapters::map"],[5014,"alloc::sync"],[5015,"core::convert"],[5016,"core::ops::range"],[5017,"polars_core::datatypes::field"],[5018,"polars_utils::index"],[5019,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5020,"polars_core::chunked_array::ops::rolling_window"],[5021,"ahash::random_state"],[5022,"polars_utils::hashing"],[5023,"ndarray::aliases"],[5024,"either"],[5025,"core::any"],[5026,"polars_core::chunked_array::arithmetic::numeric"],[5027,"polars_core::chunked_array::builder::string"],[5028,"polars_arrow::array::binview"],[5029,"polars_core::chunked_array::builder::boolean"],[5030,"polars_core::chunked_array::builder::null"],[5031,"polars_core::chunked_array::builder::primitive"],[5032,"core::clone"],[5033,"polars_core::chunked_array::builder::list::anonymous"],[5034,"polars_core::chunked_array::builder::list::boolean"],[5035,"polars_core::chunked_array::builder::list::primitive"],[5036,"polars_core::chunked_array::builder::list::binary"],[5037,"polars_core::chunked_array::builder::list::null"],[5038,"alloc::boxed"],[5039,"polars_arrow::array::boolean"],[5040,"bitflags::iter"],[5041,"polars_arrow::datatypes"],[5042,"polars_arrow::bitmap::utils::iterator"],[5043,"polars_arrow::bitmap::utils::zip_validity"],[5044,"polars_arrow::offset"],[5045,"core::hash"],[5046,"polars_arrow::array::static_array"],[5047,"core::error"],[5048,"polars_arrow::array::primitive"],[5049,"polars_arrow::legacy::array::slice"],[5050,"polars_row::row"],[5051,"chrono::naive::datetime"],[5052,"alloc::borrow"],[5053,"polars_arrow::array::static_array_collect"],[5054,"bytemuck::zeroable"],[5055,"polars_core::chunked_array::logical::categorical"],[5056,"polars_core::chunked_array::logical::categorical::merge"],[5057,"polars_core::chunked_array::logical"],[5058,"polars_core::datatypes::time_unit"],[5059,"polars_arrow::datatypes::physical_type"],[5060,"polars_arrow::types"],[5061,"core::borrow"],[5062,"smartstring::alias"],[5063,"polars_arrow::pushable"],[5064,"core::cmp"],[5065,"polars_core::chunked_array::logical::categorical::builder"],[5066,"polars_core::chunked_array::logical::categorical::revmap"],[5067,"polars_core::chunked_array::logical::categorical::string_cache"],[5068,"polars_error::warning"],[5069,"polars_core::series::from"],[5070,"polars_utils::aliases"],[5071,"polars_arrow::datatypes::schema"],[5072,"polars_core::chunked_array::ndarray"],[5073,"polars_arrow::array::struct_"],[5074,"polars_arrow::record_batch"],[5075,"polars_utils::idx_vec"],[5076,"rayon::iter::plumbing"],[5077,"polars_core::frame::group_by::into_groups"],[5078,"core::iter::adapters::copied"],[5079,"core::iter::adapters::zip"],[5080,"polars_arrow::legacy::kernels::rolling"],[5081,"polars_utils::float"],[5082,"polars_arrow::types::native"],[5083,"polars_core::frame::group_by::aggregations::agg_list"],[5084,"polars_core::frame::row::av_buffer"],[5085,"polars_arrow::array::binary"],[5086,"polars_core::hashing::identity"],[5087,"hashbrown::map"],[5088,"polars_core::hashing::vector_hasher"],[5089,"core::alloc"],[5090,"std::os::fd::owned"],[5091,"std::os::fd::raw"],[5092,"core::mem::maybe_uninit"],[5093,"polars_arrow::legacy::kernels::time"],[5094,"core::default"],[5095,"polars_arrow::scalar"],[5096,"std::fs"],[5097,"std::io::error"],[5098,"alloc::collections"],[5099,"regex::error"],[5100,"simdutf8::basic"],[5101,"core::ffi::c_str"],[5102,"std::ffi::os_str"],[5103,"alloc::ffi::c_str"],[5104,"std::path"],[5105,"polars_arrow::legacy::array::default_arrays"],[5106,"polars_arrow::buffer::immutable"],[5107,"polars_arrow::array::list"],[5108,"polars_core::named_from"],[5109,"polars_arrow::legacy::array"],[5110,"polars_core::chunked_array::ops::aggregate"],[5111,"polars_core::chunked_array::ops::aggregate::quantile"],[5112,"polars_arrow::legacy::index"],[5113,"core::pin"],[5114,"core::io::borrowed_buf"],[5115,"std::io"],[5116,"polars_core::chunked_array::ops::aggregate::var"],[5117,"alloc::collections::btree::map"],[5118,"polars_arrow::legacy::array::list"],[5119,"polars_arrow::legacy::array::null"],[5120,"polars_arrow::bitmap::mutable"],[5121,"polars_arrow::array::utf8"],[5122,"polars_core::series::iterator"],[5123,"polars_arrow::legacy::utils"],[5124,"polars_arrow::legacy::trusted_len::rev"],[5125,"smartstring::config"],[5126,"smartstring"],[5127,"polars_error::constants"],[5128,"polars_arrow::legacy::prelude"],[5129,"polars_arrow::legacy::array::utf8"],[5130,"polars_core::utils::any_value"],[5131,"polars_core::utils::schema"],[5132,"polars_core::utils::supertype"],[5133,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Dd{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Cn}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ef}{{{f{{l{c}}}}e}{{Af{Ad}}}EfAb}{{{f{{l{c}}}}}EhBn}{{{f{{l{c}}}}}{{f{{El{Ej}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{El{Ej}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}``{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{{l{c}}}}}{{`{{En{}{{B`{{f{Dd}}}}}}}}}n}{{}{{l{c}}}Bn}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{F`b}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Fb{c}}}}}Bn}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fd}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{F`}}}Bn}`{{{f{{l{Al}}}}{f{BhFf}}}Fh}{{{f{{l{c}}}}{f{BhFf}}}Fhn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fj{{Bn{}{{Fl{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Fn{{Bn{}{{Fl{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Fl{}}}}Bn}Fn}{{{f{Bf}}{El{Ej}}}{{l{c}}}Bn}{{{f{Bf}}{El{Ej}}Df}{{l{c}}}Bn}{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{c{{l{Al}}}{{Fn{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Fn{}{{B`{An}}}}}n}{c{{l{e}}}{{Fn{}{{B`{{Gf{El{An{Gd}}}}}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}32{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gh{}{{B`{An}}}}}n}{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{f{Bf}}{f{{Dd{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gj{}{{B`{An}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}El{An{Gd}}}{{l{c}}}n}{{{f{Bf}}F`}{{l{c}}}n}0{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{{f{Bf}}F`{f{Df}}}Dj}{{{f{{l{c}}}}F`}AnBn}{{{f{{l{c}}}}F`}{{Af{Gl}}}n}{{{f{{l{c}}}}F`}Gln}{{{f{{l{j}}}}F`}{{An{Ad}}}}{{{f{{l{c}}}}}GnBn}{{{f{{l{j}}}}}Ad}{{{f{{l{{H`{c}}}}}}F`}{{An{{f{Hb}}}}}Hd}06{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}F`dF`}AjEd}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{}F`}0{{F`Hf{An{Hh}}}{{l{c}}}n}{{{f{{l{j}}}}}Df}{ce{}{}}0{{{l{Hj}}{An{F`}}F`}{{Af{Hl}}}}{{{l{Hj}}{An{F`}}F`}Hl}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{HnI`{Ib{}{{B`{}}}}EnGj}}}n}{{{l{c}}}AdBn}:{{{f{{l{c}}}}}FdId}000{{{f{{l{c}}}}}FdBn}0<{{{f{{l{c}}}}}IfBn}{{{f{{l{c}}}}}{{`{{Ih{}{{B`{An}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Ij}}}}}}}}{{{f{{l{c}}}}}{{J`{{Il{Ej}}{In{{f{Ej}}}{{C`{{An{{f{Gd}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{F`}}}Bn}{{{f{{l{c}}}}}{{Jb{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}F`Bn}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jd}}00{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}10{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Jfn}{{{f{{l{c}}}}}{{An{Jh}}}n}{{{f{{l{Al}}}}}{{An{Jh}}}}{{{f{{l{c}}}}}{{An{Jh}}}Ed}{{{f{{l{c}}}}}JfEd}`{{{f{{l{c}}}}}{{An{{f{{Fb{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{Jj{{Fb{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Jj{{Fb{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Jj{{Fb{c}}}}}Bn}:9{{{f{{l{c}}}}}{{An{Gf}}}n}9{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{f{Bf}}{f{{Dd{Db}}}}F`F`}{{l{Al}}}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{F`}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Jl}}}{{Jn{{Dd{{An{Ij}}}}}}}}{{{f{Bf}}{Kb{K`}}}{{l{Kd}}}}{{{f{Bf}}{Kb{Ij}}}{{l{Jl}}}}{{{f{Bf}}c}{{l{Jl}}}{{Jn{{Dd{Ij}}}}}}{{{f{Bf}}{Kb{Kf}}}{{l{Kh}}}}{{{f{Bf}}c}{{l{Kj}}}{{Jn{{Dd{Hh}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{Jn{{Dd{{An{Hh}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Jn{{Dd{{An{K`}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Jn{{Dd{{An{d}}}}}}}}{{{f{Bf}}c}{{l{D`}}}{{Jn{{Dd{{An{{El{Db}}}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Jn{{Dd{d}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Jn{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{Jn{{Dd{{An{Kf}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Jn{{Dd{K`}}}}}}{{{f{Bf}}{Kb{Hh}}}{{l{Kj}}}}{{{f{Bf}}c}{{l{D`}}}{{Jn{{Dd{{El{Db}}}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{Jn{{Dd{Kf}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Jn{{Dd{{An{Hf}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Jn{{Dd{Dh}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Jn{{Dd{Hf}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Jn{{Dd{Jh}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Jn{{Dd{{An{Jh}}}}}}}}{{{f{Bf}}}{{l{{H`{c}}}}}Hd}{{{f{{l{c}}}}F`F`}{{l{c}}}n}{{{f{Bf}}{El{c}}}{{l{{H`{c}}}}}Hd}{{{f{Bf}}{El{c}}Gd}{{l{{H`{c}}}}}Hd}{{{f{Bf}}El}{{l{c}}}n}{{{Jj{Kl}}{El{Ej}}}{{l{c}}}Bn}{{{Jj{Kl}}{El{Ej}}KnKn}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}F`Bn}``{{{f{{l{j}}}}}{{`{{L`{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Cn}}}}}{{`{{L`{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{Cn}}}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Jfn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JhLd}{{Af{{An{Jh}}}}}Ed}{{{f{{l{c}}}}JhLd}{{Af{Jf}}}Ed}{{{f{Bf}}F`Jh}{{Af{{l{Al}}}}}}{{{f{Bf}}F`JhJh}{{Af{{l{c}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`JhJh}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Kl}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lf}{{Af{Ad}}}n}{{{f{{l{c}}}}F`e}{{Af{{l{c}}}}}Id{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jhdd{An{Hh}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}F`dd{An{Hh}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Fn{}{{B`{Kn}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Fn{}{{B`{Kn}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fd}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Kn}bBn}{{{f{Bh{l{c}}}}If}bBn}{{{f{{l{c}}}}Ij}{{l{c}}}n}{{{f{{l{c}}}}IjAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}IjF`}{{l{c}}}Bn}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}Db}{{An{Jh}}}n}{{{f{{l{c}}}}Db}JfEd}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{Kn}}}}{{{f{{l{c}}}}}Jfn}{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Jn{{Dd{Kn}}}}Lh}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Lj{Bl}}}}Bn}{{Jn{{Dd{Kn}}}}Lh}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Lj{Bl}}}}Bn}}`{{{f{{l{c}}}}dLl}{{El{{El{Ln}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{Cn}}}}F`}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{M`}}}}{{{f{{l{c}}}}}{{Af{Mb}}}n}{{{f{c}}}e{}{}}{{{f{{l{D`}}}}}Md}{{{f{{l{c}}}}}{{El{An}}}n}{{{f{{l{c}}}}}{{Mf{El{El{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{G`{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{G`{eg}}}}}}}Bn}{c{{G`{e}}}{}{}}0{{{f{Bf}}g}{{G`{{l{i}}e}}}Fj{}{{Fn{}{{B`{{G`{ce}}}}}}}{{Bn{}{{Fl{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mh{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}F`}{}Bn}{{{f{{l{c}}}}Db}{{An{Jh}}}n}{{{f{{l{c}}}}Db}JfEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fj{{Bn{}{{Fl{c}}}}Bn}}{{{f{{l{c}}}}{El{Ej}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}If}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}3201{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}543210452376452301453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}e{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}g{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNf}}}b}{{{f{Bh{Nh{c}}}}}b{NjLh}}{{{f{BhNl}}}b}{{{f{BhNn}}}b}{{{f{Bh{O`{c}}}}}bn}{{{f{Bh{Nh{c}}}}{An{e}}}b{NjLh}{{Jn{c}}}}{{{f{BhNf}}{An{c}}}b{}}{{{f{BhNf}}c}b{}}{{{f{Bh{Nh{c}}}}e}b{NjLh}{{Jn{c}}}}{{{f{BhNl}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nh{c}}}}}{{Nh{c}}}{NjLh}}{{{f{Nl}}}Nl}{{{f{Nn}}}Nn}{{{f{{O`{c}}}}}{{O`{c}}}{nOb}}{{{f{c}}{f{Bhe}}}b{}{}}000{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{F`b}000{Nf{{l{c}}}Bn}{{{Nh{{Dd{Db}}}}}Eb}{{{Nh{Bf}}}Md}{OdMd}{OfEb}{NlFd}`{{{O`{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Oh{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Oh{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}Oh{}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Oh{}}{{}F`}000{ce{}{}}000`{{{f{Bf}}F`}{{Nh{c}}}{NjLh}}{{{f{Bf}}F`}Nl}{{{f{Bf}}F`}Nn}{{{f{Bf}}F`}{{O`{c}}}n}{{{f{BhNf}}}b}{{{f{BhNl}}}b}{{{f{BhNn}}}b}{{{f{Bh{O`{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}000;;;;````````{{{f{BhOj}}{f{Fj}}}b}{{{f{BhOj}}}b}{{{f{BhOl}}}b}{{{f{BhOn}}c}b{{Bd{}{{B`{{An{d}}}}}}Gj}}{{{f{Bh{A@`{c}}}}e}bn{{Bd{}{{B`{An}}}}Gj}}{{{f{Bh{A@`{c}}}}e}bn{{Bd{}{{B`{}}}}Gj}}{{{f{BhA@b}}}b}54{{{f{BhA@d}}}b}{{{f{BhA@f}}}b}{{{f{BhOn}}}b}{{{f{BhA@h}}}b}{{{f{Bh{A@`{c}}}}}bn}{{{f{BhOj}}{An{{f{Fj}}}}}b}{{{f{BhOj}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@b}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@`{c}}}}{An{{f{Dd}}}}}bn}{{{f{BhA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BhOj}}{f{Ad}}}{{Af{b}}}}{{{f{BhOl}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@`{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@`{c}}}}{f{Dd}}}bn}{{{f{BhA@d}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gj}}{{{f{BhA@f}}c}b{{Bd{}{{B`{{An{{f{{Dd{Db}}}}}}}}}}Gj}}{{{f{BhA@d}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@f}}c}b{{Bd{}{{B`{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}Oj}{{}Ol}{F`{{f{c}}}{}}000000{F`{{f{Bhc}}}{}}000000{F`b}000000{{{f{A@d}}}d}{{{f{A@f}}}d}{{{f{On}}}d}{{{f{{A@`{c}}}}}dn}{{{f{A@b}}}d}{{{f{A@d}}}{{f{Kl}}}}{{{f{A@f}}}{{f{Kl}}}}{{{f{On}}}{{f{Kl}}}}{{{f{{A@`{c}}}}}{{f{Kl}}}n}{{{f{A@b}}}{{f{Kl}}}}{{{f{BhOj}}}Dj}{{{f{BhOl}}}Dj}{{{f{BhA@h}}}Dj}{{{f{BhA@b}}}Dj}{cc{}}000000{{{f{Df}}F`F`{f{Bf}}}{{Af{{A@j{A@b}}}}}}{{}F`}000000{{{f{BhA@d}}}Ej}{{{f{BhA@f}}}Ej}{{{f{BhOn}}}Ej}{{{f{Bh{A@`{c}}}}}Ejn}{{{f{BhA@b}}}Ej}{ce{}{}}000000{{{f{Bf}}F`{An{Df}}}Oj}{{{f{Bf}}F`{An{Df}}}Ol}{{{f{Bf}}F`F`}A@d}{{{f{Bf}}F`F`}A@f}{{{f{Bf}}F`F`}On}{{{f{Bf}}F`}A@h}{{{f{Bf}}F`F`Df}{{A@`{c}}}n}{{{f{Bf}}F`F`DfDf}{{A@`{c}}}n}{c{{G`{e}}}{}{}}0000000000000{{{f{c}}}Mh{}}000000:::::::``{{A@l{f{Bf}}}{{l{c}}}Bn}{{A@n{f{{l{c}}}}}{{l{c}}}Bn}10{{A@n{f{Bf}}Df}{{l{c}}}Bn}0{{A@l{f{Bf}}}{{G`{{l{c}}e}}}Bn{}}{{A@n{f{{l{c}}}}}{{G`{{l{c}}e}}}Bn{}}10{{A@n{f{Bf}}Df}{{G`{{l{c}}e}}}Bn{}}0`{AA`AA`}``{{AAb{f{Bf}}Df}e{}{{AAd{c}}}}{{e{f{Bf}}Df}AAd{}{{Gh{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{cc{}}0{{}F`}0{ce{}{}}000{{{f{AAf}}}AAh}{{{f{BhAAh}}}{{An{c}}}{}}{{{f{Bh{AAj{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AAj{c}}}}}{{An{e}}}En{}}`{{{f{AAh}}}{{Gf{F`{An{F`}}}}}}{{{f{{AAj{c}}}}}{{Gf{F`{An{F`}}}}}Bd}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}088````````{{{f{c}}h}b{}}0{{}Gn}{{GnGn}Gn}{{{f{BhGn}}Gn}b}10{{{f{Gn}}}Db}021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{{Fb{c}}}}}{{Fb{e}}}BnBn}{{{f{{Fb{c}}}}}{{Fb{c}}}Bn}{{{f{Gn}}}Gn}{{{f{c}}{f{Bhe}}}b{}{}}0{GnGn}{{{f{Gn}}Gn}d}{{}{{Fb{c}}}Bn}<{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0={F`b}0?{{{f{Gn}}{f{Gn}}}d}{{{f{BhGn}}c}b{{Fn{}{{B`{Gn}}}}}}{{{f{{Fb{c}}}}{f{BhFf}}}FhBn}{{{f{Gn}}{f{BhFf}}}Fh}0000{cc{}}0{Db{{An{Gn}}}}{DbGn}00{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{cGn{{Fn{}{{B`{Gn}}}}}}{{{f{Bf}}}{{An{Gn}}}}{{{f{{Fb{c}}}}}{{An{Kn}}}Bn}{{{f{{Fb{c}}}}}dBn}{{{f{{Fb{c}}}}}GnBn}{{{f{{Fb{c}}}}}{{An{f}}}Bn}0{{{f{Gn}}}If}{{}F`}0{{{f{BhGn}}Gn}b}{{GnGn}Gn}{{{f{Gn}}Gn}d}{ce{}{}}0{Gnc{}}{{{f{Gn}}}d}0{{{f{{Fb{c}}}}}IfBn};;{{{f{Gn}}}{{AAl{Gn}}}}{{{f{Gn}}}{{AAn{Gn}}}}{GnGn}9{{{f{BhGn}}Gnd}b}{{{f{Bh{Fb{c}}}}Kn}bBn}{{{f{Bh{Fb{c}}}}d}bBn}{{{f{Bh{Fb{c}}}}Gn}bBn}{{{f{Bh{Fb{c}}}}}bBn}022{{{f{Bh{Fb{c}}}}If}bBn}{{{f{BhGn}}If}b}?{{{f{BhGn}}Gn}b}{{GnGn}Gn}{{{f{c}}}e{}{}}02{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}03{ce{}{}}0````{{{f{c}}h}b{}}{e{{AB`{c}}}Hd{{Fn{}{{B`{{An{{f{c}}}}}}}}}}{e{{AB`{c}}}Hd{{Fn{}{{B`{{f{c}}}}}}}}{{ABbe}g{}{{Fn{}{{B`{c}}}}}{}}0{{{f{Hb}}}{{f{ABd}}}}{{{f{{AB`{c}}}}}{{f{ABd}}}Hd}{{{f{Bh{AB`{c}}}}}{{f{BhABd}}}Hd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{AB`{c}}}}}{{AB`{c}}}{HdOb}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{AB`{c}}}}}{{f{ABb}}}Hd}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{{f{Hb}}}}{f{{f{Hb}}}}}d}{{{f{Hb}}{f{Hb}}}d}{{{f{{AB`{c}}}}{f{BhFf}}}Fh{HdABf}}{cc{}}{{F`ABb}{{AB`{c}}}Hd}{{{f{{AB`{c}}}}F`}{{An{{f{c}}}}}Hd}{{}ABb}{{{f{Gd}}{f{{AB`{c}}}}{f{{AB`{c}}}}}{{AB`{c}}}Hd}{{ABb{f{Gd}}cc}{{AB`{e}}}{}Hd}{{{f{Gd}}{f{{AB`{c}}}}e}{{AB`{c}}}Hd{}}{{{f{Gd}}c{f{{AB`{e}}}}}{{AB`{e}}}{}Hd}{{}F`}{ce{}{}}{{{f{{AB`{c}}}}}eHd{}}{{{f{{AB`{c}}}}F`}dHd}0{{{f{c}}F`}d{}}{{{f{{AB`{c}}}}}{{ABj{egABh}}}Hd{}{}}{{{f{{AB`{c}}}}}{{ABj{{f{c}}{ABl{c}}ABh}}}Hd}{{{f{{AB`{c}}}}}F`Hd}0`{{{f{Bh{AB`{c}}}}{An{Gd}}}bHd}{{{f{Bh{AB`{c}}}}F`F`}bHd}{{{f{c}}F`F`}e{}{}}01{{{f{Hb}}}{{A@j{Hb}}}}{{{f{{AB`{c}}}}}{{A@j{Fj}}}Hd}{{{f{c}}}e{}{}}{g{{G`{{AB`{c}}e}}}Hd{}{{Fn{}{{B`{{G`{{An{{f{c}}}}e}}}}}}}}{g{{G`{{AB`{c}}e}}}Hd{}{{Fn{}{{B`{{G`{{f{c}}e}}}}}}}}{{ABbg}{{G`{ie}}}{}{}{{Fn{}{{B`{{G`{ce}}}}}}}{}}0{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{Hb}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AB`{c}}}}}{{An{{f{Gd}}}}}Hd}{{{f{{AB`{c}}}}F`}{{f{c}}}Hd}{{{f{{AB`{c}}}}F`}eHd{}}1{{{f{{AB`{c}}}}}{{f{{Jj{{El{c}}}}}}}Hd}{{{f{{AB`{c}}}}}eHd{}}{{{f{{AB`{c}}}}}{{ABl{c}}}Hd}{ce{}{}}{{{f{{AB`{c}}}}{An{Gd}}}{{A@j{Fj}}}Hd}{{{AB`{c}}{An{Gd}}}{{AB`{c}}}Hd}0`{{{f{Bh{ABn{c}}}}}bHd}0{{{f{Bh{ABn{c}}}}{An{c}}}bHd}{{{f{Bh{ABn{c}}}}{f{ABd}}}bHd}{{{f{Bh{ABn{c}}}}c}bHd}{{{f{Bh{ABn{c}}}}{f{ABd}}}{{Af{b}}}Hd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{ABn{c}}}Hd}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{ABn{c}}}{{AC`{c}}}Hd}{cc{}}{{}F`}{ce{}{}}{{{f{Bf}}F`}{{ABn{c}}}Hd}{{{f{Bh{ABn{c}}}}}AdHd}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4````{{{f{BhACb}}}b}{{{f{BhACb}}{An{{f{ABd}}}}}b}{{{f{BhACb}}{f{ABd}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ACd}}{f{BhFf}}}Fh}<{{{f{Bf}}F`}{{A@j{ACb}}}}{{}ACf}{{}ABb}>={{}d}`{{AChACfABb}b}{{{f{BhACb}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACl{}{{ACj{c}}}}}}g}{{ACl{}{{ACj{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{ACn}}{f{Cb}}}ACn}{{{f{ACn}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ACl{}{{ACj{c}}}}}}i{f{Bh{Dd{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ACl{}{{ACj{c}}}}}}g}{{ACl{}{{ACj{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AD`}}Dl}Dn}{{{f{AD`}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{ADb}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{ADd}}{f{Df}}}{{Af{Ad}}}}0{{{f{ADf}}}ADf}{{{f{c}}{f{Bhe}}}b{}{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{ADf}}{f{ADf}}}d}{{{f{{ADh{}{{B`{c}}}}}}e}c{}{}}0{{{f{ADj}}}{{Af{Ad}}}}{{{f{ADj}}}{{Af{{Gf{Ad{ADl{Ij}}}}}}}}`{{{f{ADn}}c}{{Af{ADn}}}{}}{{{f{AE`}}{f{Fd}}}{{Af{{l{c}}}}}Bn}`{{{f{ADf}}{f{BhFf}}}Fh}{cc{}}`{{{f{Bf}}cF`}AEb{}}{{{f{Bf}}F`}AEd}`{{{f{AEf}}F`}{{Af{Gl}}}}{{{f{AEf}}F`}Gl}::{{{f{ADf}}{f{Bhc}}}bAEh}{{}F`}{ce{}{}}{{{f{AEj}}}{{Af{Fd}}}}{{{f{AEl}}}{{Af{Fd}}}}??{{{f{AEn}}}{{An{c}}}{}}{{{f{AEn}}}{{An{Jh}}}}{{{f{AF`}}}{{An{c}}}{}}2{{{f{AEn}}}{{An{{Gf{cc}}}}}{}}{{{f{ADb}}}{{Af{F`}}}}{{{f{AFb}}F`F`}{{l{c}}}Bn}{{{f{{ADh{}{{B`{c}}}}}}e}c{}{}}0{{{f{ADj}}}{{Af{{ADl{Ij}}}}}}{{{f{AF`}}JhLd}{{Af{{An{c}}}}}{}}{{{f{AFd}}}AFd}{{{f{AFf}}{f{Cb}}Lf}{{Af{Ad}}}}{{{f{AFh}}c{An{e}}}{{Af{AFh}}}{{Fn{}{{B`{Kn}}}}}{}}{{{f{AFh}}ci}{{Af{AFh}}}{{Fn{}{{B`{Kn}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AFh}}{f{Fd}}{An{c}}}{{Af{AFh}}}{}}{{{f{AFj}}Ij}{{l{c}}}Bn}{{{f{AFl}}Ijc}{{l{e}}}{}Bn}`{{{f{AD`}}d}{{l{c}}}Bn}{{{f{AD`}}Dl}{{l{c}}}Bn}{{{f{AFn}}Db}{{An{Jh}}}}{{{f{AEn}}}{{An{c}}}{}}{{{f{AG`}}{f{c}}}{{Af{AG`}}}Lh}{{{f{AGb}}{f{c}}}AGbLh}{{{f{AGd}}}{{El{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{ADb}}}{{Af{ADb}}}}8{ce{}{}}`{{{f{AGf}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFj{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AGh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FjAGj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFj{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFj{{Ch{}{{C`{g}}}}}{{Bn{}{{Fl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@j{Fj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@j{Fj}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{G`{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AGl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}BnBnFjAGn{{Ch{ff}{{C`{{G`{gi}}}}}}}{{Bn{}{{Fl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{G`{{l{m}}i}}}BnBnFjAGn{{Ch{ff}{{C`{{G`{gi}}}}}}}{{Bn{}{{Fl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{G`{{l{c}}g}}}BnBnAGn{{Ch{ff}{{C`{{G`{{A@j{Fj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{G`{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{G`{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{G`{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{G`{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}Bn{FjAGj}AGn{{Ch{f}{{C`{{G`{eg}}}}}}}{{Bn{}{{Fl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AH`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAH`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnFj{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fl{e}}}}}}{{{l{c}}g}{{l{i}}}BnFj{{Ch{}{{C`{e}}}}}{{Bn{}{{Fl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FjAGj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fl{e}}}}}}0{{{f{{l{c}}}}}F`n}0{{IfIf}If}{{{f{Dn}}Kn}{{Af{b}}}}{{{f{{AHb{Kn}}}}Kn}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAHdd}{{El{Kn}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AHd}}}AHd}{{{f{c}}{f{Bhe}}}b{}{}}{{}AHd}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AHd}}{f{AHd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AHd}}{f{BhFf}}}Fh}{cc{}}{{{f{AHd}}{f{Bhc}}}bAEh}{{}F`}{ce{}{}}{{{f{{Dd{f}}}}cKne}{{El{Kn}}}{{Bd{}{{B`{An}}}}}{{Cb{fF`f}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4`{{F`{f{Bh{El{d}}}}}b}```{{{f{AHf}}F`F`}AHf}0{{F`{f{{Dd{Ad}}}}{f{BhE`}}}{{Af{{AHh{Dn}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHj}}}}{{{f{Bf}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHl}}}}{{{f{Bf}}{f{{Dd{Ad}}}}}{{Af{AHl}}}}{{{f{Ad}}}{{Af{Ej}}}}{{{f{{Dd{Ad}}}}}{{Af{AHj}}}}{{{f{{Dd{Ad}}}}}{{Af{AHl}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0``{F`b}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFf}}}Fh}{{{f{E`}}{f{BhFf}}}Fh}{{{f{E`}}}Dl}{cc{}}{{{f{Dl}}}E`}1{{{f{Dl}}{f{Bhc}}}bAEh}{{{f{E`}}{f{Bhc}}}bAEh}{{}F`}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AHf}}F`F`}AHf}0{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066{{Dld}Dl}{{E`d}E`}101010{{E`c}E`{{Fn{}{{B`{d}}}}}}{DlDl}{E`E`}`{AHnIj}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Hl}}{f{Hl}}}c{}}{{FdFd}c{}}{{{f{Fd}}{f{Fd}}}c{}}{{{f{Md}}{f{Md}}}c{}}{{MdMd}c{}}{{{f{Md}}{f{Bf}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{Eb}}{f{{Dd{Db}}}}}c{}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}000000{{{f{Md}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Fd}}{f{Aj}}}Ad}{{{f{Md}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{AC`{c}}}}{f{Aj}}}AdHd}{{{f{Fd}}}d}{{{f{Fd}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fd}}c}Fd{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Md}}c}Md{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AIb{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{AIb{{Dd{Db}}}}}}}}}}Cd}}{{{f{{AC`{c}}}}e}{{AC`{c}}}Hd{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AId}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AIf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fd}}{f{Cb}}}Fd}{{{f{Md}}{f{Cb}}}Md}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Fd}}{f{Cb}}}{{l{c}}}Bn}{{{f{Md}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Md}}c}Md{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{Md}}c}Md{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fd}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Md}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{{Dd{Db}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AC`{c}}}}g{f{Bh{Dd{e}}}}}bHd{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fd}}c}Fd{{Cb{d}{{C`{d}}}}Cd}}{{{f{Md}}c}Md{{Cb{{f{Bf}}}{{C`{{AIb{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Dd{Db}}}}}{{C`{{AIb{{Dd{Db}}}}}}}}Cd}}{{{f{{AC`{c}}}}e}{{AC`{c}}}Hd{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fd}}Dl}Dn}{{{f{Md}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AHl}}Dl}Dn}{{{f{Fd}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Md}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AHl}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Fd}}}{{Af{Dn}}}}{{{f{Md}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{AC`{c}}}}}{{Af{Dn}}}Hd}{eAIh{}{{Fn{}{{B`{c}}}}}}0{{ABbe}AIj{}{{Fn{}{{B`{c}}}}}}0{{{f{Jf}}}Gl}{{{f{Md}}}Eb}{{{f{Gl}}}Gl}{{{f{Df}}}{{f{Df}}}}{{{f{Kl}}}{{f{Df}}}}{{{f{AIl}}}{{f{Df}}}}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}}{{An{{f{{Dd{c}}}}}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FdFd}c{}}{{{f{Fd}}{f{Fd}}}c{}}1001{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@j{Df}}}}{{{f{AJh}}{f{AJh}}c}{{Af{AJh}}}AJj}{{{f{AJl}}{f{Df}}}{{Af{Ad}}}}{{{f{Hl}}{f{Df}}}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Fd}}{f{Df}}}{{Af{Ad}}}}{{{f{Md}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AHl}}{f{Df}}}{{Af{Ad}}}}{{{f{Gl}}{f{Df}}}Gl}54321`{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}0000{{{f{AId}}{f{Ad}}}{{Af{Ad}}}}{{{f{AIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AJn{ce}}}}}{{AJn{ce}}}BnBn}{{{f{Jf}}}Jf}{{{f{AK`}}}AK`}{{{f{Gl}}}Gl}{{{f{AKb}}}AKb}{{{f{Df}}}Df}{{{f{Kl}}}Kl}{{{f{AKd}}}AKd}{{{f{AKf}}}AKf}{{{f{AKh}}}AKh}{{{f{Kd}}}Kd}{{{f{Kj}}}Kj}{{{f{AKj}}}AKj}{{{f{AKl}}}AKl}{{{f{Kh}}}Kh}{{{f{Jl}}}Jl}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{AKn}}}AKn}{{{f{AL`}}}AL`}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{ALb}}}ALb}{{{f{Al}}}Al}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{ALj}}}ALj}{{{f{ABb}}}ABb}{{{f{ALl}}}ALl}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhKl}}Df}b}{ALne{}{{AIh{c}}AGj}}0{{ALnABb}e{}{{AIj{c}}AGj}}0{{{f{Df}}}d}00{AM`Df}{{{f{Kl}}}{{f{Df}}}}{{}Gl}{{}AKb}{{}Df}{{}ABb}{F`{{f{c}}}{}}{{{f{{AJn{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{{{f{Bh{AJn{ce}}}}}{{f{Bhg}}}BnBn{}}{F`{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}000000{F`b}0000000000000000000000000000000000{{{f{AJl}}}{{f{Df}}}}{{{f{Hl}}}{{f{Df}}}}{{{f{Jf}}}{{f{Df}}}}{{{f{Gl}}}Df}`{{{f{Gl}}{f{Gl}}}d}{{{f{AKb}}{f{AKb}}}d}{{{f{Df}}{f{ABb}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Kl}}{f{Kl}}}d}{{{f{AKd}}{f{AKd}}}d}{{{f{ABb}}{f{ABb}}}d}{{{f{ALl}}{f{ALl}}}d}{{{f{Gl}}{f{Gl}}d}d}{{{f{Dj}}{f{Dj}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bf}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Eb}}{f{Eb}}}Fd}{{{f{Eb}}{f{{Dd{Db}}}}}Fd}543210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gf{Ad{ADl{Ij}}}}}}}}{{{f{Md}}}{{Af{{Gf{Ad{ADl{Ij}}}}}}}}{{{f{{AJn{ce}}}}}KlBnBn}{{{f{Fd}}d}{{Af{Fd}}}}{{{f{Eb}}{f{{Dd{Db}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Fd}}}{{Af{Dj}}}}{{{f{Fd}}{f{Fd}}}{{Af{{l{Al}}}}}}{{{f{Md}}{f{Fd}}}{{Af{{l{Cn}}}}}}{{{f{Eb}}{f{Fd}}}{{Af{{l{D`}}}}}}{{{f{AHl}}{f{Fd}}}{{Af{AHl}}}}{{{f{{AC`{c}}}}{f{Fd}}}{{Af{{l{{H`{c}}}}}}}Hd}{{AJj{f{AMb}}{f{AMb}}}{{Af{AMb}}}}{{{f{Dj}}{f{BhFf}}}Fh}{{{f{Md}}{f{BhFf}}}Fh}{{{f{Eb}}{f{BhFf}}}Fh}{{{f{{AC`{c}}}}{f{BhFf}}}FhHd}{{{f{AK`}}{f{BhFf}}}Fh}{{{f{Gl}}{f{BhFf}}}Fh}0{{{f{AKb}}{f{BhFf}}}Fh}{{{f{Df}}{f{BhFf}}}Fh}0{{{f{Kl}}{f{BhFf}}}Fh}{{{f{AKd}}{f{BhFf}}}Fh}0{{{f{ABb}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{ALl}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{An{c}}}Gl{{AMf{Gl}}}}{cGlAMh}{{{f{Bf}}}Gl}{dGl}{{{f{{Dd{Db}}}}}Gl}55{GlDf}6{{{f{ABb}}}Df}{{{f{Gl}}}Df}{{{f{Gl}}}Kl}9{{{f{AMj}}}Kl}:{{{f{ALl}}}AKd};;;;;;;;;;;;;;;;;;;;;{AMlABb}{AMnABb}={{{f{ABb}}d}Df}{cDj{{Fn{}{{B`{{An{Ad}}}}}}}}{eDj{{AN`{Ad}}}{{Fn{}{{B`{c}}}}}}{cDj{{Fn{}{{B`{{An{{A@j{Fj}}}}}}}}}}{cFd{{Fn{}{{B`{d}}}}}}{eMd{{`{Bf}}}{{Fn{}{{B`{c}}}}}}{eMd{{Jn{Bf}}}{{Fn{}{{B`{{An{c}}}}}}}}{eEb{{Jn{{Dd{Db}}}}}{{Fn{}{{B`{{An{c}}}}}}}}{eEb{{`{{Dd{Db}}}}}{{Fn{}{{B`{c}}}}}}{e{{AC`{c}}}Hd{{Fn{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Md{{Jn{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Jn{{Dd{Db}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AC`{c}}}Hd{{Bd{}{{B`{{An{c}}}}}}}}<;97856{eAHl{{Jn{{Dd{Db}}}}}{{Fn{}{{B`{{An{c}}}}}}}}{eAHl{{`{{Dd{Db}}}}}{{Fn{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Md{{Jn{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Jn{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AC`{c}}}Hd{{Bd{}{{B`{c}}}}}}{{ANbDf}Kl}{cDj{{Gh{}{{B`{{An{Ad}}}}}}}}{cFd{{Gh{}{{B`{d}}}}}}{cFd{{Gh{}{{B`{{An{d}}}}}}}}{eMd{{`{Bf}}HnI`ANd}{{Gh{}{{B`{c}}}}}}{eMd{{Jn{Bf}}HnI`}{{Gh{}{{B`{{An{c}}}}}}}}{eEb{{Jn{{Dd{Db}}}}HnI`}{{Gh{}{{B`{{An{c}}}}}}}}{eEb{{`{{Dd{Db}}}}HnI`ANd}{{Gh{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gh{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Dd{d}}}}}Fd}{{{f{Bf}}{f{{Dd{c}}}}}Md{{Jn{Bf}}}}{{{f{Bf}}{f{{Dd{c}}}}}Eb{{Jn{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{AC`{c}}}Hd}{{{f{Bf}}{f{{Dd{{An{d}}}}}}}Fd}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Md{{Jn{Bf}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Eb{{Jn{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}{{AC`{c}}}Hd}{cFd{{Gj{}{{B`{{An{d}}}}}}}}{{{El{c}}ABb}{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{El{c}}ABb}{{AGj{}{{AIn{e}}{AJ`{c}}{AJb{g}}}}}{AJd{AJf{e}}}Ob{{En{}{{B`{e}}}}GjHnI`}}{{F`cABb}{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Bf}}{f{Ad}}F`}Dj}{{{f{Bf}}dF`}Fd}{{{f{Bf}}{f{Bf}}F`}Md}{{{f{Bf}}{f{{Dd{Db}}}}F`}Eb}{{{f{Bf}}{f{{Dd{Db}}}}F`}AHl}{{{f{Bf}}cF`}{{AC`{c}}}Hd}{{F`ABb}{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Bf}}F`}Dj}{{{f{Bf}}F`}Fd}{{{f{Bf}}F`}Md}{{{f{Bf}}F`}Eb}{{{f{Bf}}F`}AHl}{{{f{Bf}}F`}{{AC`{c}}}Hd}{{{f{Bf}}F`{f{Df}}}Dj}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}F`}{{An{c}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Hl}}F`}{{Af{Gl}}}}{{{f{AJl}}F`}{{Af{Gl}}}}0{{{f{Dj}}F`}{{Af{Gl}}}}{{{f{Fd}}F`}{{Af{Gl}}}}{{{f{Md}}F`}{{Af{Gl}}}}{{{f{Eb}}F`}{{Af{Gl}}}}{{{f{AHl}}F`}{{Af{Gl}}}}{{{f{{AC`{c}}}}F`}{{Af{Gl}}}Hd}{{{f{Hl}}F`}Gl}{{{f{AJl}}F`}Gl}0{{{f{Dj}}F`}Gl}{{{f{Fd}}F`}Gl}{{{f{Md}}F`}Gl}{{{f{Eb}}F`}Gl}{{{f{AHl}}F`}Gl}{{{f{{AC`{c}}}}F`}GlHd}{{{f{Dj}}F`}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{AC`{c}}}}F`}{{An{{f{Hb}}}}}Hd}0{{{f{Gl}}}{{An{{f{Bf}}}}}}{{{f{ANf}}F`}Gl}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}F`}{{An{c}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Dj}}}F`}{{{f{Md}}}F`}{{{f{AHl}}}F`}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Fd}}dd}{{Af{Aj}}}}{{{f{Md}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AHl}}dd}{{Af{Aj}}}}{{{f{{AC`{c}}}}dd}{{Af{Aj}}}Hd}{{{f{Dj}}{f{Dj}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Md}}{f{Bf}}}Fd}{{{f{Eb}}{f{{Dd{Db}}}}}Fd}{{{f{Eb}}{f{Eb}}}Fd}543201{{{f{Gl}}{f{Bhc}}}bAEh}{{{f{AKb}}{f{Bhc}}}bAEh}{{{f{Df}}{f{Bhc}}}bAEh}{{{f{Kl}}{f{Bhc}}}bAEh}{{{f{AKd}}{f{Bhc}}}bAEh}{{{f{ABb}}{f{Bhc}}}bAEh}{{{f{ALl}}{f{Bhc}}}bAEh}{{{f{Gl}}{f{Bhc}}d}bAEh}{{}F`}0000000000000000000000000000000000{{{f{Dj}}}Df}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ABb}}}{{An{{f{ABb}}}}}}{ce{}{}}0000000000000000000000000000000000{{ANh{An{F`}}F`}{{Af{Hl}}}}{{ANh{An{F`}}F`}Hl}{{{f{Dj}}}c{}}{{{f{Fd}}}c{}}{{{f{Md}}}c{}}{{{f{Eb}}}c{}}{{{f{AHl}}}c{}}{{{f{{AC`{c}}}}}eHd{}}{HlAd}{ANhAd}{{Jf{f{Bf}}}Ad}{Gl{{Af{Gl}}}}{{{f{Df}}}d}00{{{f{Gl}}}d}111010111110101011110111101{{{f{ABb}}}d}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}}{{ABj{cgABh}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Dj}}}{{`{{Bd{}{{B`{Ij}}}}}}}}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}}{{An{c}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bf}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Eb}}{f{{Dd{Db}}}}}Fd}{{{f{Eb}}{f{Eb}}}Fd}543210{{{f{AJh}}{f{AJh}}}{{Af{{Gf{AJhAJh}}}}}}{{DjDj}{{Af{{Gf{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{Fd}}}{{An{d}}}}{{{f{Fd}}}Jf}{{{f{Md}}}Jf}{{{f{Eb}}}Jf}{{{f{Fd}}}{{An{Jh}}}}{{{f{AId}}}{{An{Hf}}}}{{{f{AIf}}}{{An{Jh}}}}{{{f{AId}}}Jf}{{{f{AIf}}}Jf}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Dd{Db}}}}F`F`}Fd}{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}000000{{{f{Md}}}{{Af{F`}}}}{{{f{Eb}}}{{Af{F`}}}}{{{f{Kl}}}{{f{ANb}}}}`{{}c{}}00{{{f{Bf}}c}Md{{Jn{{Dd{{An{{AIb{Bf}}}}}}}}}}{{{f{Bf}}c}Md{{Jn{{Dd{{AIb{Bf}}}}}}}}{{{f{Bf}}c}Md{{Jn{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}c}Md{{Jn{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Eb{{Jn{{Dd{{An{{AIb{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Jn{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Jn{{Dd{{AIb{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Eb{{Jn{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{AC`{c}}}Hd}{{{f{Bf}}e}{{AC`{c}}}Hd{{Jn{{Dd{{An{c}}}}}}}}{{DfGl}Jf}{{{f{Bf}}Df}Kl}{{{f{Bf}}}{{AC`{c}}}Hd}{{{f{Dj}}F`F`}Dj}{{{f{Fd}}F`F`}Fd}{{{f{Md}}F`F`}Md}{{{f{Eb}}F`F`}Eb}{{{f{AHl}}F`F`}AHl}{{{f{{AC`{c}}}}F`F`}{{AC`{c}}}Hd}{{{f{Bf}}{El{c}}}{{AC`{c}}}Hd}{{{f{Bf}}{El{c}}Gd}{{AC`{c}}}Hd}{{{f{Fd}}}c{}}{Fdc{}}{{{f{Dj}}{f{Dj}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bf}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Eb}}{f{Eb}}}Fd}{{{f{Eb}}{f{{Dd{Db}}}}}Fd}543210{{{f{Dj}}}{{Af{{ADl{Ij}}}}}}{{{f{Md}}}{{Af{{ADl{Ij}}}}}}{{{f{Dj}}}{{`{{L`{}{{B`{{An{Ad}}}}}}}}}}{{{f{Md}}}{{`{{L`{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Gl}}{f{Gl}}}{{An{ANj}}}}{{{f{AKd}}{f{AKd}}}{{An{ANj}}}}{{{f{Hl}}}{{An{F`}}}}{{{f{{AJn{ALdHj}}}}}{{An{F`}}}}{{{f{AId}}JhLd}{{Af{{An{Hf}}}}}}{{{f{AIf}}JhLd}{{Af{{An{Jh}}}}}}{{{f{AId}}JhLd}{{Af{Jf}}}}{{{f{AIf}}JhLd}{{Af{Jf}}}}{{{f{Bf}}F`Jh}{{Af{Fd}}}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}000000{{{f{Dj}}}Dj}{{{f{Fd}}}Fd}{{{f{Md}}}Md}{{{f{Eb}}}Eb}{{{f{AHl}}}AHl}{{{f{{AC`{c}}}}}{{AC`{c}}}Hd}`{{{f{Hl}}}F`}{{{f{{AJn{ALdHj}}}}}F`}{{{f{Fd}}c{An{d}}}{{Af{Fd}}}{{Fn{}{{B`{Kn}}}}}}{{{f{Md}}c{An{{f{Bf}}}}}{{Af{Md}}}{{Fn{}{{B`{Kn}}}}}}{{{f{Eb}}c{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}{{Fn{}{{B`{Kn}}}}}}{{{f{Fd}}ce}{{Af{Fd}}}{{Fn{}{{B`{Kn}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Md}}ce}{{Af{Md}}}{{Fn{}{{B`{Kn}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Fn{}{{B`{Kn}}}}}{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{El{Db}}}}}}}}}}{{{f{Fd}}{f{Fd}}{An{d}}}{{Af{Fd}}}}{{{f{Md}}{f{Fd}}{An{{f{Bf}}}}}{{Af{Md}}}}{{{f{Eb}}{f{Fd}}{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhKl}}ANb}b}{{{f{Dj}}Ij}Dj}{{{f{Fd}}Ij}Fd}{{{f{Md}}Ij}Md}{{{f{Eb}}Ij}Eb}{{{f{AHl}}Ij}AHl}{{{f{{AC`{c}}}}Ij}{{AC`{c}}}Hd}{{{f{Dj}}Ij{An{{f{Ad}}}}}Dj}{{{f{Fd}}Ij{An{d}}}Fd}{{{f{Md}}Ij{An{{f{Bf}}}}}Md}{{{f{Eb}}Ij{An{{f{{Dd{Db}}}}}}}Eb}{{{f{AHl}}Ij{An{{f{{Dd{Db}}}}}}}AHl}{{{f{{AC`{c}}}}Ij{An{{H`{c}}}}}{{l{{H`{c}}}}}Hd}{{{f{Fd}}d}Fd}{{{f{Md}}d}Md}{{{f{Eb}}d}{{l{D`}}}}{{{f{AHl}}d}AHl}{{{f{Fd}}Dl}{{l{Al}}}}{{{f{Md}}Dl}{{l{Cn}}}}{{{f{Eb}}Dl}{{l{D`}}}}{{{f{AHl}}Dl}AHl}{{{f{AId}}Db}Jf}{{{f{AIf}}Db}Jf}{{{f{Gl}}{f{Df}}}{{An{Gl}}}}`{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAI`}}}{}}000000{{{f{Fd}}}{{An{Kn}}}}{{{f{Fd}}}Jf}{{{f{Eb}}}Jf}{{{f{Md}}{f{Dn}}}Md}{{{f{Md}}{f{c}}}Md{{Jn{{Dd{Kn}}}}Lh}}{{{f{Eb}}{f{c}}}Eb{{Jn{{Dd{Kn}}}}Lh}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}ABb}{{{f{Kl}}d}AMj}{AKdALl}{{{f{Df}}{f{Bf}}d}AMj}{AKd{{f{Bf}}}}{{{f{Md}}F`}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ABb}}}{{f{ABb}}}}{{{f{Dj}}}{{Af{M`}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ABb}}}ANl}{{{f{c}}}Dh{}}00{{{f{Eb}}}Md}{{{f{Gl}}{f{Gl}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{G`{AIhe}}}{}{}{{Fn{}{{B`{{G`{ce}}}}}}}}0{{ABbg}{{G`{AIje}}}{}{}{{Fn{}{{B`{{G`{ce}}}}}}}}0{ALn{{G`{eg}}}{}{{AIh{c}}AGj}{}}0{{ALnABb}{{G`{eg}}}{}{{AIj{c}}AGj}{}}0{{{f{Gl}}}{{Af{c}}}Jd}{c{{G`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gl}}{f{Df}}}{{Af{Gl}}}}{{{f{Df}}d}{{Af{ABb}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mh{}}0000000000000000000000000000000000{{{f{ABb}}}ABb}{{{f{Fd}}}{{Af{Fd}}}}{{{f{Md}}}{{Af{Md}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{AC`{c}}}}}{{Af{{l{{H`{c}}}}}}}Hd}{{{f{BhJf}}Gl}b}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}F`}cOb{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Jf}}}{{f{Gl}}}}1{{{f{Df}}Gl}d}{{{f{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}}}gOb{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{AId}}Db}Jf}{{{f{AIf}}Db}Jf}{{{f{Fd}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AMb}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AOj}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{ANh}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AIf}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{Eb}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{AHl}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}{{{f{{AC`{c}}}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}Hd}{{{f{Fd}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AMb}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOj}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANh}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AIf}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{Eb}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{AHl}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}{{{f{{AC`{c}}}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}Hd}{ce{}{}}0000000000000000000000000000000000{F`c{}}0{F`{{AOl{ce}}}{}{}}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{Dn}}}{{C`{c}}}}}}{{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}{An{Gd}}}{{AGj{}{{AIn{c}}{AJ`{e}}{AJb{g}}}}}Ob{AJd{AJf{c}}}{{En{}{{B`{c}}}}GjHnI`}}{{{f{Df}}}Gl}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJh}}}d}{{AJhd}AJh}{{{f{BhAOn}}{An{{f{Bf}}}}}b}{{{f{BhAJh}}{f{AJh}}}{{Af{b}}}}{{{f{BhAOn}}}b}{{{f{BhAOn}}{f{Bf}}}b}{{{f{AJh}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AJh}}{f{AJh}}c}{{Af{AJh}}}AJj}{{{f{AJh}}{f{Df}}}{{Af{Ad}}}}{{{f{AJh}}}AJh}{{{f{c}}{f{Bhe}}}b{}{}}{{}B@`}{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{{AOnc}AJh{{Fn{}{{B`{{An{{f{Bf}}}}}}}}}}{F`b}000{{{f{AJh}}}{{f{Df}}}}{{{f{AJh}}{f{AJh}}}c{}}{{{f{AJh}}{f{Bf}}}c{}}{{{f{AJh}}{f{Md}}}c{}}102{{AJj{f{AMb}}{f{AMb}}}{{Af{AMb}}}}{AOnAJh}{B@`{{Jj{B@b}}}}{cc{}}000{{AMb{Jj{B@b}}dB@d}AJh}{{AMbB@d}AJh}{{{f{Md}}{f{AM`}}B@d}{{Af{AJh}}}}{{{f{Bf}}dF`B@d}AJh}{{{f{AJh}}F`}{{Af{Gl}}}}{{{f{AJh}}F`}Gl}{{{f{AJh}}}{{f{{Jj{B@b}}}}}}<=;=;<{{}F`}000{ce{}{}}0000{AJhAd}{{{f{AJh}}}d}0{{{f{AJh}}}B@f}{{{f{AJh}}}F`}{{{f{AJh}}{f{Bf}}}c{}}{{{f{AJh}}{f{AJh}}}c{}}{{{f{AJh}}{f{Md}}}c{}}021{{{f{AJh}}{f{AJh}}}{{Af{{Gf{AJhAJh}}}}}}{{DjDj}{{Af{{Gf{DjDj}}}}}}{{{f{AJh}}}Jf}{{{f{BhB@`}}{f{{Jj{B@b}}}}}{{Af{b}}}}1{{{f{AJh}}}{{Af{F`}}}}{{{f{AJh}}}{{f{Bf}}}}{{{f{Bf}}F`B@d}AOn}{{{Jj{B@b}}}B@`}{{{f{BhB@f}}}{{An{c}}}{}}:9;9;:<{{{f{AJh}}}{{f{AMb}}}}{{{f{BhAOn}}{f{Bf}}}{{Gf{K`d}}}}`{{{f{B@f}}}{{Gf{F`{An{F`}}}}}}{{{f{AJh}}d}AJh}{{{f{AJh}}Dl}AJh}`{{{f{AJh}}dd}Ej}{{{f{AJh}}{f{AM`}}B@h}AJh}{{{f{AJh}}}{{Af{AJh}}}}{{{f{AJh}}}AJh}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}0004{{{f{AJh}}}d}{{{f{AJh}}}{{Af{B@j}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AM`B@b}{{{f{B@d}}}B@d}{{{f{B@b}}}B@b}{{{f{c}}{f{Bhe}}}b{}{}}0{{}B@d}{{}B@b}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{B@d}}{f{B@d}}}d}{{{f{B@b}}{f{Bf}}}{{An{K`}}}}{{{f{B@d}}{f{BhFf}}}Fh}{{{f{B@b}}{f{BhFf}}}Fh}{cc{}}0{{{f{B@b}}K`}{{f{Bf}}}}{{{f{B@b}}}{{f{AM`}}}}{{{f{B@b}}K`}{{An{{f{Bf}}}}}}{{}F`}0{ce{}{}}0{{{f{B@b}}}d}0{{{f{B@b}}}F`}{{{f{B@b}}{f{B@b}}}d}{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}B@l}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{{}b}{{{f{BhB@l}}}b}{F`b}2{cc{}}6{{}F`}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{B@n}}}{{f{Bf}}}}<<;;`9{{{f{B@n}}}f}:9966`{{{f{BA`}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{B@n}}{f{BhFf}}}{{G`{bAMd}}}}07{cB@n{{AMf{{AIb{Bf}}}}}}8{{}{{In{{f{Bf}}BA`}{{C`{b}}}}}}8877{cAI`AGn}````{{{In{{f{Bf}}BA`}{{C`{b}}}}}b}{cAI`BAb}{{{f{c}}}Dh{}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BAd}}}BAd}{{{f{c}}{f{Bhe}}}b{}{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhFf}}BAfF`}Fh}{cc{}}{{}BAh}{{}BAd}{{}{{An{F`}}}}{{}Dh}{{}d}{{}F`}{ce{}{}}{{{An{BAh}}}b}{BAdb}{{{An{F`}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}7```````````{{{f{c}}h}b{}}00{{{f{BhB@j}}{El{Ad}}{f{BAj}}}{{Af{b}}}}{{{f{B@j}}{f{Cb}}}{{El{Ad}}}}0{{{f{B@j}}{f{Fd}}}{{Af{B@j}}}}{{{f{B@j}}{f{{Dd{ANb}}}}}{{Af{B@j}}}}0{{{f{B@j}}IjF`}B@j}{{{f{B@j}}{f{Ad}}}c{}}{{B@j{f{Ad}}}c{}}{{{f{B@j}}{f{B@j}}}c{}}{{{f{BhB@j}}}{{f{BhB@j}}}}{{{f{BhB@j}}{f{Bf}}e}{{Af{{f{BhB@j}}}}}BAl{{Ml{{f{Ad}}}{{C`{c}}}}}}{{{f{BhB@j}}F`e}{{Af{{f{BhB@j}}}}}BAl{{Ml{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{B@j}}}B@j}{{{f{BAn}}}BAn}{{{f{BB`}}}BB`}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{B@j}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{B@j}}e}{{Af{{El{{f{Ad}}}}}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{}BB`}{{}B@j}{F`{{f{c}}}{}}0000{F`{{f{Bhc}}}{}}0000{{B@j{f{Ad}}}c{}}{{{f{B@j}}{f{Ad}}}c{}}{{{f{B@j}}{f{B@j}}}c{}}{F`b}0000{{{f{B@j}}{f{Bf}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{Bf}}}{{Af{Ad}}}}{{{f{B@j}}{f{{Dd{c}}}}}B@j{{Jn{Bf}}}}{{{f{B@j}}{f{{BBb{{f{Bf}}}}}}}B@j}{{{f{B@j}}{An{{f{{Dd{c}}}}}}}{{Af{B@j}}}{{Jn{Bf}}}}{{{f{B@j}}}{{El{Df}}}}<{{{f{BB`}}{f{BB`}}}d}{{{f{B@j}}{f{B@j}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@j}}}F`}`{{{f{B@j}}e}{{Af{B@j}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{{f{B@j}}{El{Ad}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{B@j}}}{{Af{b}}}}{{{f{B@j}}}{{El{Kl}}}}{{{f{B@j}}ADf}{{Af{B@j}}}}{{{f{B@j}}{f{Fd}}}{{Af{B@j}}}}{{{f{BAn}}{f{BhFf}}}Fh}{{{f{BB`}}{f{BhFf}}}Fh}{{{f{B@j}}{f{BhFf}}}Fh}0{cc{}}0000{{{f{BAj}}}B@j}{{{f{BBd}}}B@j}{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{cB@j{{Fn{}{{B`{Ad}}}}}}{{{f{{Dd{BBf}}}}}{{Af{B@j}}}}{{{f{{Dd{BBf}}}}{f{BAj}}}{{Af{B@j}}}}{{c{f{BAj}}}{{Af{B@j}}}{{Bd{}{{B`{{f{BBf}}}}}}}}{{{f{B@j}}F`}{{An{{El{Gl}}}}}}{{{f{B@j}}{f{Bf}}}{{An{F`}}}}{{{f{B@j}}}{{El{{f{Bf}}}}}}{{{f{B@j}}}{{El{ANb}}}}{{{f{B@j}}}{{f{{Dd{Ad}}}}}}{{{f{BhB@j}}}{{f{Bh{El{Ad}}}}}}{{{f{B@j}}F`}{{Af{BBf}}}}{{{f{B@j}}F`{f{BhBBf}}}{{Af{b}}}}{{{f{B@j}}F`{f{BhBBf}}}b}{{{f{B@j}}}{{An{{Af{Df}}}}}}`{{{f{B@j}}e}{{Af{BBh}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}0{{{f{B@j}}{El{Ad}}dd}{{Af{BBh}}}}{{{f{BB`}}{f{Bhc}}}bAEh}{{{f{BhB@j}}{An{Ll}}}{{Af{AOb}}}}{{{f{B@j}}{An{F`}}}B@j}{{{f{B@j}}}F`}{{{f{B@j}}{f{{Dd{Ad}}}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{{Dd{Ad}}}}}{{Af{{f{BhB@j}}}}}}{{{f{BhB@j}}{f{{Dd{Ad}}}}}{{f{BhB@j}}}}{{{f{B@j}}{f{Bf}}}{{f{c}}}{}}{{{f{B@j}}F`}{{f{c}}}{}}{{{f{B@j}}{BBj{F`}}}{{f{c}}}{}}{{{f{B@j}}{Kb{F`}}}{{f{c}}}{}}{{{f{B@j}}{BBl{F`}}}{{f{c}}}{}}{{{f{B@j}}{BBn{F`}}}{{f{c}}}{}}{{{f{B@j}}{BC`{F`}}}{{f{c}}}{}}{{{f{B@j}}BCb}{{f{c}}}{}}{{}F`}0000{{{f{BhB@j}}F`c}{{Af{{f{BhB@j}}}}}BAl}{ce{}{}}000000{{{f{B@j}}}{{Af{Fd}}}}{{{f{B@j}}}d}1{{{f{B@j}}}{{Il{Ad}}}}{{{f{B@j}}d}BCd}{{{f{B@j}}}BCf}{{{f{B@j}}}{{Af{{An{Ad}}}}}}{{{f{B@j}}BAn}{{Af{{An{Ad}}}}}}{{{f{B@j}}ce}{{Af{B@j}}}{{BCh{ANb}}}{{BCh{ANb}}}}{{{f{B@j}}BCj}{{Af{B@j}}}}3{{{f{B@j}}{f{Ad}}}c{}}{{B@j{f{Ad}}}c{}}{{{f{B@j}}{f{B@j}}}c{}}{{{f{B@j}}}F`}{{{El{c}}}{{Af{B@j}}}BAl}{{{El{Ad}}}B@j}{{{El{Ad}}}{{Af{B@j}}}}{{{f{BhBCd}}}{{An{c}}}{}}{{{f{BhBCf}}}{{An{c}}}{}}{{{f{B@j}}}B@j}{{{f{B@j}}cd}{{Af{{El{B@j}}}}}{{BCh{Dh}}}}0{{B@je}{{Af{c}}}{}{{Cb{B@j}{{C`{{Af{c}}}}}}}}{{{f{BhB@j}}e}{{Af{c}}}{}{{Cb{{f{BhB@j}}}{{C`{{Af{c}}}}}}}}{{B@jgc}{{Af{e}}}{}{}{{Cb{B@jc}{{C`{{Af{e}}}}}}}}{{{f{BhB@j}}}{{An{Ad}}}}{{{f{B@j}}{f{B@j}}}d}>?={{{f{BhB@j}}{f{Bf}}{f{Bf}}}{{Af{{f{BhB@j}}}}}}{{{f{BhB@j}}{f{Bf}}c}{{Af{{f{BhB@j}}}}}BAl}{{{f{BhB@j}}F`c}{{Af{{f{BhB@j}}}}}BAl}19`{{{f{B@j}}{f{Ad}}dd{An{Hh}}}{{Af{B@j}}}}0{{{f{B@j}}F`dd{An{Hh}}}{{Af{B@j}}}}{{{f{B@j}}}BAj}{{{f{B@j}}{f{B@j}}}{{Af{b}}}}{{{f{B@j}}e}{{Af{B@j}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{{f{B@j}}F`}{{An{{f{Ad}}}}}}{{{f{B@j}}c}{{Af{B@j}}}{{BCl{F`}}}}2{{{f{B@j}}c}{{Af{{El{Ad}}}}}{{BCh{ANb}}}}{{{f{B@j}}e{f{BCn}}}{{Af{B@j}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{{f{B@j}}e{f{BAj}}}{{Af{B@j}}}{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{{f{BhB@j}}{f{{Dd{c}}}}}{{Af{b}}}{{Jn{Bf}}}}{{{f{B@j}}}{{Gf{F`F`}}}}{{{f{B@j}}Ij}B@j}{{{f{B@j}}}d}{{{f{BhB@j}}}b}{{{f{BCd}}}{{Gf{F`{An{F`}}}}}}{{{f{BCf}}}{{Gf{F`{An{F`}}}}}}{{{f{B@j}}IjF`}B@j}0{{{f{B@j}}cE`}{{Af{B@j}}}{{BCh{ANb}}}}{{{f{BhB@j}}cE`}{{Af{{f{BhB@j}}}}}{{BCh{ANb}}}}{{{f{BhB@j}}}{{`{{Bd{}{{B`{B@j}}}}}}}}{{B@jF`d}{{El{B@j}}}}{{B@j{f{Ad}}}c{}}{{{f{B@j}}{f{B@j}}}c{}}{{{f{B@j}}{f{Ad}}}c{}}{{{f{B@j}}BAn}{{Af{{An{Ad}}}}}}{{{f{B@j}}{An{F`}}}B@j}{{{f{B@j}}{f{Dn}}}{{Af{B@j}}}}{{{f{B@j}}{f{Dn}}}B@j}{{{f{B@j}}{f{Dn}}d}B@j}{{{f{B@j}}BD`}{{Af{M`}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{B@j}}F`cE`}{{Af{B@j}}}{{BCh{ANb}}}}{{{f{BhB@j}}{An{{f{Bf}}}}{An{{Mf{Dh{El{Dh}}}}}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{Bf}}e}{{Af{{f{BhB@j}}}}}BAl{{Ml{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhB@j}}F`e}{{Af{{f{BhB@j}}}}}BAl{{Ml{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{G`{e}}}{}{}}000{BDb{{Af{B@j}}}}{{{Gf{BDd{f{{Dd{AMj}}}}}}}{{Af{B@j}}}}2{{c{f{BAj}}}{{Af{B@j}}}{{Bd{}{{B`{{Af{{f{BBf}}}}}}}}}}{{{f{B@j}}{f{Bf}}}{{Af{F`}}}}44444{{{f{c}}}Mh{}}0000{{{f{B@j}}{An{{f{{Dd{Dh}}}}}}BB`{An{{Gf{IjF`}}}}}{{Af{B@j}}}}{{{f{B@j}}d{An{{f{{Dd{Dh}}}}}}BB`{An{{Gf{IjF`}}}}}{{Af{B@j}}}}1{{{f{B@j}}{f{B@j}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{B@j}}}{{Af{{f{BhB@j}}}}}}{ce{}{}}0000{{{f{B@j}}}F`}{{{f{BhB@j}}c}{{Af{{f{BhB@j}}}}}BAl}{{{f{BhB@j}}c{f{BAj}}}{{Af{{f{BhB@j}}}}}BAl}{{{f{BhB@j}}Ad}{{f{BhB@j}}}}{{{f{B@j}}{f{Bf}}{An{Kn}}}{{Af{B@j}}}}{{{f{BhB@j}}{f{Bf}}{An{Kn}}}{{f{BhB@j}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCj}}}BCj}{{{f{c}}{f{Bhe}}}b{}{}}{{}BCj}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BCj}}{f{BCj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCj}}{f{BhFf}}}Fh}{cc{}}{{{f{BCj}}{f{Bhc}}}bAEh}`{{}F`}{ce{}{}}`{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBh}}}{{Af{B@j}}}}`{{{f{BDf}}}{{f{{Dd{BDh}}}}}}{{{f{BBh}}c}{{Af{B@j}}}{{Ch{B@j}{{C`{{Af{B@j}}}}}}HnI`}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BDf}}}BDf}{{{f{Aj}}}Aj}{{{f{BBh}}}BBh}{{{f{BDj}}}BDj}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BDf}{{}Aj}{F`{{f{c}}}{}}000{{{f{BDl}}}{{f{c}}}{}}1111{F`{{f{Bhc}}}{}}0000000`{{BDne}{}{}{{BE`{c}}}}{F`b}000{{{f{BhBDf}}}b}1111{{{f{BDf}}{f{BDf}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEb}}}Kn}{{{f{BDf}}}{{f{{Dd{Kn}}}}}}{{{f{BBh}}}{{Af{B@j}}}}{{{f{BhBDf}}}{{f{Bh{El{Kn}}}}}}{{{f{BDf}}{f{BhFf}}}Fh}{{{f{Aj}}{f{BhFf}}}Fh}{{{f{BBh}}{f{BhFf}}}Fh}{{{f{BDj}}{f{BhFf}}}Fh}0{{{f{Bf}}BDj}Dh}{cc{}}000{{{El{{El{BEd}}}}}BDf}1{{{El{BEd}}}BDf}{{{El{{Gf{{El{Kn}}{El{BDh}}}}}}}BDf}{BDfAj}444{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{cBDf{{Fn{}{{B`{BEd}}}}}}{cBDf{{Gh{}{{B`{BEd}}}}}}{{{f{Aj}}F`}BEb}{{{f{BBh}}}{{f{Aj}}}}{{{f{BhBBh}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BEf}}dd}{{Af{Aj}}}}0{{{f{BBh}}}{{Af{B@j}}}}{{{f{BhAj}}}{{f{BhBDf}}}}{{}F`}0000000{ce{}{}}0000000{AjBDf}1{BDfc{}}{{{f{BDf}}}c{}}310{{{f{BEb}}}d}{{{f{Aj}}}d}{{{f{BDf}}}d}{{{f{BDf}}}{{BEj{{BEh{{Il{Kn}}}}{Il{BDh}}}}}}{{{f{Aj}}}BEl}{{{f{BBh}}}{{El{Ad}}}}{{{f{BBh}}{An{{Gf{IjF`}}}}}{{El{Ad}}}}={{{f{BEb}}}F`}{{{f{Aj}}}F`}?????{{{El{Kn}}{El{BDh}}d}BDf}{{{f{B@j}}{El{Ad}}Aj{An{{El{Dh}}}}}BBh}{{{f{BhBEl}}}{{An{c}}}{}}{{{f{BhBEl}}F`}{{An{c}}}{}}{{{f{BBh}}c}{{Af{B@j}}}{{Cb{B@j}{{C`{{Af{B@j}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Aj}}}BDn}{{{f{BBh}}JhLd}{{Af{B@j}}}}{{BBhe}BBh{{Jn{Bf}}}{{Fn{}{{B`{c}}}}}}{{{f{Aj}}IjF`}BDl}{{{f{BhBDf}}}b}{{{f{BhAj}}}b}{{{f{BBh}}Db}{{Af{B@j}}}}{{{f{BBh}}}{{Af{B@j}}}}{Aj{{El{Kn}}}}0{BBhAj}{{{f{BhBBh}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{G`{e}}}{}{}}000000000000000{{{f{c}}}Mh{}}0000000{AjAj}{{{f{Aj}}}{{f{BDf}}}}{{{f{Aj}}}{{f{BEn}}}};{ce{}{}}0000000`````{{{f{BDf}}c}Ad{{Cb{{Gf{Kn{f{BDh}}}}}{{C`{An}}}}HnI`}}{{{f{BDf}}c}Ad{{Cb{{Gf{Kn{f{BDh}}}}}{{C`{}}}}HnI`}}{{{f{{Dd{{BF`{Kn}}}}}}c}Ad{{Cb{{BF`{Kn}}}{{C`{An}}}}HnI`}}{{{f{{Dd{{BF`{Kn}}}}}}c}Ad{{Cb{{BF`{Kn}}}{{C`{}}}}HnI`}}{{{f{{Dd{c}}}}eBFb}{{AHb{c}}}{BFdBFf}{{Bd{}{{B`{{Gf{KnKn}}}}}}Gj}}{{{f{{Dd{c}}}}{f{Gd}}eBFb}{{AHb{c}}}{BFdBFf}{{Bd{}{{B`{{Gf{KnKn}}}}}}Gj}}{{{f{{l{c}}}}KnKn}{{l{c}}}Bn}{{{f{BEn}}{f{{Dd{Ej}}}}}d}{{{f{BFh}}{f{Aj}}}Ad}{{BFjBFj}BFj}0`{{{f{BFl}}{f{B@j}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFl}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBFn}}Gl}{{An{b}}}}{{{f{BhBG`}}{f{Gl}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BFn}}}BFn}{{{f{BG`}}}BG`}{{{f{BBf}}}BBf}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Dd{c}}}}}Df{{AN`{Df}}}}{{}BBf}{F`{{f{c}}}{}}00{F`{{f{Bhc}}}{}}00{F`b}00{{{f{BBf}}{f{BBf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBf}}{f{BhFf}}}Fh}{{{Gf{{f{Df}}F`}}}BFn}{cc{}}{{{Gf{{f{Df}}F`}}}BG`}11{{eF`}BAj{{AMf{Df}}}{{Bd{}{{B`{{El{{Gf{Dhc}}}}}}}}}}{{}F`}00{ce{}{}}00{BFnAd}{BG`Ad}{{{f{Df}}F`}BFn}{{{f{Df}}F`}BG`}{{{El{Gl}}}BBf}{{{f{BhBFn}}F`}Ad}{{{f{BhBG`}}F`}Ad}{{{f{{Dd{BBf}}}}{An{F`}}}{{Af{BAj}}}}0{{{f{{Dd{BBf}}}}{An{F`}}}{{Af{{El{Df}}}}}}{{{f{c}}}e{}{}}00{c{{G`{e}}}{}{}}00000{{{f{c}}}Mh{}}00<<<{{{f{{Dd{B@j}}}}}{{Af{B@j}}}}0`````{{HhHh}Hh}{{{f{{Dd{B@j}}}}{An{Ll}}}{{Af{{Gf{{El{AOb}}Ll}}}}}}{{{f{{BGb{Ij}}}}Ll{f{Bh{El{Hh}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BGd}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{BGd}}}Hh}{{{f{BGf}}{f{BhFf}}}Fh}{cc{}}0{{{f{BGf}}{f{Bhc}}}bAEh}``{{}F`}0{ce{}{}}0{{{f{Bh{BGh{BGfce}}}}KnHh{f{B@j}}gi}b{}BGj{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0{{{f{BGl}}Ll{f{Bh{El{Hh}}}}}{{Af{b}}}}0{{{f{BGl}}Ll{f{Bh{Dd{Hh}}}}}{{Af{b}}}}055{{{f{BhBGd}}{f{{Dd{Db}}}}}b}{{{f{BhBGd}}Kf}b}{{{f{BhBGd}}Ij}b}{{{f{BhBGd}}K`}b}{{{f{BhBGd}}Hh}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Jj{ce}}}}}{{f{e}}}{}BGn}{{{f{{Jj{c}}}}}BH`{BHbLh}}{{{f{{Jj{ce}}}}}{}LhBGn}{{{f{{Jj{c}}}}}KfBHd}{{{f{{Jj{ce}}}}}{{f{c}}}LhBGn}{{{Jj{{Dd{{BHf{c}}}}e}}}{{Jj{{Dd{c}}e}}}{}BGn}{{{Jj{{BHf{c}}e}}}{{Jj{ce}}}{}BGn}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AJh}}{f{AJh}}c}{{Af{AJh}}}AJj}{{{f{{Jj{c}}}}}{{An{{f{AGn}}}}}{AGnLh}}`{{{f{BHh}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHh}}c}{{Af{Ad}}}Ab}{{{f{Mj}}}Mj}{{{f{BHj}}}BHj}{{{f{{Jj{ce}}}}}{{Jj{ce}}}Lh{BGnOb}}{{{f{Lf}}}Lf}{{{f{BD`}}}BD`}{{{f{AMj}}}AMj}{{{f{BBd}}}BBd}{{{f{Ld}}}Ld}{{{f{BHl}}}BHl}{{{f{BHn}}}BHn}{{{f{BI`}}}BI`}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}ANj{BIbLh}BGn}{ALne{}{{AIh{c}}AGj}}0{{ALnABb}e{}{{AIj{c}}AGj}}0{{{f{c}}{f{e}}}ANj{}{}}{{AI`B@n}AI`}{AI`AI`}{{{f{Fj}}{f{ABb}}}{{A@j{Fj}}}}{{{f{AMj}}}{{f{ABb}}}}```{{}b}{cbBGn}{{}{{Jj{c}}}BId}{{}Lf}{{}BD`}{{}AMj}{{}BBd}{{}Ld}`{F`{{f{c}}}{}}000{{{f{{Jj{ce}}}}}{{f{c}}}LhBGn}111111111{F`{{f{Bhc}}}{}}000000000000{{{f{{Jj{c}}}}}{{f{Bf}}}{AGnLh}}`{{{Jj{ABdc}}}{{G`{{Jj{ec}}{Jj{ABdc}}}}}BGn{ABdHnI`}}{{{Jj{ABdc}}}{{Jj{ec}}}BGn{ABdHnI`}}{{{f{{Jj{ce}}}}}{{BIf{ce}}}Lh{ObBGn}}{F`b}000{{{f{Bh{Jj{ce}}}}}bLhBGn}111111111{{{f{Mj}}{f{Mj}}}d}{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}d{BIhLh}BGn}{{{f{{Jj{Fj}}}}{f{Fj}}}d}{{{f{{Jj{BIj}}}}{f{BIj}}}d}{{{f{Lf}}{f{Lf}}}d}{{{f{BD`}}{f{BD`}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{BBd}}{f{BBd}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{BI`}}{f{BI`}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHj{{Gf{K`K`}}}}`{{BBdc}BBd{{Cb{F`{f{AMj}}}{{C`{d}}}}}}{{AJj{f{AMb}}{f{AMb}}}{{Af{AMb}}}}{{{f{Bh{Jj{BIl}}}}}{{G`{bBIn}}}}{{{f{AI`}}{f{BhFf}}}{{G`{bAMd}}}}0{{{f{Mj}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{BHj}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{{Jj{ce}}}}{f{BhFf}}}{{G`{bAMd}}}{BAbLh}BGn}{{{f{{Jj{ce}}}}{f{BhFf}}}{{G`{bAMd}}}LhBGn}{{{f{{Jj{ce}}}}{f{BhFf}}}{{G`{bAMd}}}{ABfLh}BGn}{{{f{Lf}}{f{BhFf}}}Fh}{{{f{BD`}}{f{BhFf}}}Fh}{{{f{AMj}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{BBd}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{Ld}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{BHl}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{BHn}}{f{BhFf}}}{{G`{bAMd}}}}{{{f{BI`}}{f{BhFf}}}{{G`{bAMd}}}}`{BJ`AI`}{BJbAI`}{BJdAI`}{cc{}}{BInAI`}{K`Mj}22{{{A@j{ce}}}{{Jj{ce}}}LhBGn}{{{Jj{Bf}}}{{Jj{{Dd{Db}}}}}}{{{f{BJf}}}{{Jj{BJf}}}}{{{f{Bf}}}{{Jj{Bf}}}}{{{El{ce}}}{{Jj{{Dd{c}}e}}}{}{BGnOb}}{{{AIb{c}}}{{Jj{c}}}{BJhLh}}{Dh{{Jj{Bf}}}}{{{BF`{c}}}{{Jj{{Dd{c}}}}}{}}{{{f{{Dd{c}}}}}{{Jj{{Dd{c}}}}}Ob}{{{f{BJj}}}{{Jj{BJj}}}}{BJl{{Jj{BJf}}}}{c{{Jj{c}}}{}}{BJn{{Jj{BK`}}}}{{{f{BK`}}}{{Jj{BK`}}}}{BKb{{Jj{BJj}}}}{cc{}}{BKdc{}}11111{{{El{AMj}}}BBd}2222{{c{An{Gd}}}BKf{}}{{{BKh{Ij}}{BKh{Db}}{An{Gd}}}BKj}{{{BKh{Ij}}{BKh{Db}}{An{Gd}}}BKl}{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{e{{Jj{{Dd{c}}}}}{}{{Fn{}{{B`{c}}}}}}{{gF`}{{BKn{Ij}}}Jn{{Fn{}{{B`{{An{c}}}}}}}{{Fn{}{{B`{{An{e}}}}}}}}0{e{{BKn{Ij}}}{{Fn{}{{B`{{An{d}}}}}}}{{Fn{}{{B`{{An{c}}}}}}}}{{gABb}{{BKn{Ij}}}BFf{{Fn{}{{B`{{An{c}}}}}}}{{Fn{}{{B`{{An{e}}}}}}}}2{e{{Jj{{Dd{c}}}}}Hn{{Gh{}{{B`{c}}}}}}{{}{{Jj{c}}}Lh}{c{{Jj{ec}}}BGnLh}{{{f{Bf}}}{{G`{BL`}}}}{{{f{Bf}}c}BLb{}}{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}d{BLdLh}BGn}{{{f{Bh{Jj{ce}}}}}{{An{{f{Bhc}}}}}LhBGn}{{{f{Bh{Jj{ce}}}}}{{f{Bhc}}}LhBGn}{{{f{BBd}}}{{El{{f{Bf}}}}}}{{{f{Ej}}F`}Gl}4{{{f{BLf}}}d}{{{f{{Jj{ce}}}}{f{Bhg}}}b{BLhLh}BGnAEh}{{{f{BD`}}{f{Bhc}}}bAEh}{{{f{AMj}}{f{Bhc}}}bAEh}{{{f{Ld}}{f{Bhc}}}bAEh}{{{f{BI`}}{f{Bhc}}}bAEh}{{{f{Mj}}}K`}{{}b}{cb{ObBGn}}{{{f{BBd}}{f{Bf}}}{{An{F`}}}}{{{f{{Dd{K`}}}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{}F`}000000000000`{{{f{BhBHj}}}{{f{BhHh}}}}`{ce{}{}}000000000000{{{Jj{ce}}}{{An{c}}}{}BGn}{{{Jj{ce}}}{}LhBGn}{{{Jj{BLj}}}Ad}{{{f{BBd}}}d}{{{f{BHj}}}d}{{{f{Mj}}}d}`{{{f{{Jj{BIl}}}}}d}{{{f{c}}}d{}}1{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}d{BLdLh}BGn}{{{f{BBd}}}F`}`1{{{f{AJh}}{f{AJh}}}{{Af{{Gf{AJhAJh}}}}}}{{DjDj}{{Af{{Gf{DjDj}}}}}}{{{f{Bh{Jj{ce}}}}}{{f{Bhc}}}Ob{BGnOb}}{{{f{BLl}}}Jf}0{{{f{BLn}}}Jf}```11`{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}d{BIhLh}BGn}{{BM`F`}{{An{F`}}}}{{{f{Bf}}c}BMb{}}{c{{Jj{c}}}{}}{{cABbd}AMj{{AMf{Dh}}}}{e{{Jj{c}}}{}{{Ml{{f{{BIf{c}}}}}{{C`{c}}}}}}{{ce}{{Jj{ce}}}{}BGn}{{}{{Jj{{BHf{c}}}}}{}}{c{{Jj{{BHf{e}}c}}}BGn{}}{F`{{Jj{{Dd{{BHf{c}}}}}}}{}}{{F`c}{{Jj{{Dd{{BHf{e}}}}c}}}BGn{}}3210`{{}Mj}{{}BHj}{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}{{An{ANj}}}{BLdLh}BGn}{c{{BMd{{Jj{c}}}}}{}}{{ce}{{BMd{{Jj{ce}}}}}{}BGn}`````{{{f{BLl}}}Jf}0{{{f{{Jj{c}}}}{f{BhBMf}}}b{AGnLh}}{{{f{{Jj{ce}}}}{f{{Jj{ce}}}}}dLhBGn}{{{f{BLn}}JhLd}{{Af{Jf}}}}{{{f{Bh{Jj{BIl}}}}{f{Bh{Dd{Db}}}}}{{G`{F`BIn}}}}{{{f{Bh{Jj{BIl}}}}BMh}{{G`{bBIn}}}}{{{f{Bh{Jj{BIl}}}}{f{Bh{El{Db}}}}}{{G`{F`BIn}}}}{{{f{Bh{Jj{BIl}}}}{f{BhDh}}}{{G`{F`BIn}}}}{{{f{Bh{Jj{BIl}}}}{f{Bh{Dd{BMj}}}}}{{G`{F`BIn}}}}`{{{f{Bh{Jj{BIl}}}}BMl}{{G`{HhBIn}}}}`{{{f{AHf}}F`F`}AHf}0{{{f{{Jj{c}}}}}{{An{{f{AGn}}}}}{AGnLh}}{{{f{BMn}}Db}Jf}{{K`K`}BHj}`{{{f{{Jj{ce}}}}}F`LhBGn}>>{{{f{Mj}}}{{An{K`}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{ALn{{G`{eg}}}{}{{AIh{c}}AGj}{}}0{{ALnABb}{{G`{eg}}}{}{{AIj{c}}AGj}{}}0{c{{G`{e}}}{}{}}000{{{Jj{{Dd{c}}e}}}{{G`{{Jj{{BF`{c}}e}}}}}{}BGn}1111111111111111111111{{BM`F`}{{G`{F`AI`}}}}{c{{G`{{Jj{c}}BN`}}}{}}{{ce}{{G`{{Jj{ce}}BN`}}}{}BGn}{{}{{G`{{Jj{{BHf{c}}}}BN`}}}{}}{c{{G`{{Jj{{BHf{e}}c}}BN`}}}BGn{}}10{c{{G`{{BMd{{Jj{c}}}}BN`}}}{}}{{ce}{{G`{{BMd{{Jj{ce}}}}BN`}}}{}BGn}{{{Jj{ce}}}{{G`{c{Jj{ce}}}}}{}BGn}{{{f{c}}}Mh{}}000000000000{{{Jj{ce}}}cObBGn}`{{{f{BMn}}Db}Jf}{ce{}{}}000000000000{{{f{{Jj{ce}}}}}F`LhBGn}``{{AMj{BNb{DhDh}}}AMj}{{BBd{BNb{DhDh}}}BBd}{{{f{Bh{Jj{BIl}}}}{f{{Dd{Db}}}}}{{G`{F`BIn}}}}{{{f{Bh{Jj{BIl}}}}{f{{Dd{BNd}}}}}{{G`{F`BIn}}}}```````{{c{An{Gd}}}BKf{}}{{{BKh{Ij}}{BKh{Db}}{An{Gd}}}BKj}{{{BKh{Ij}}{BKh{Db}}{An{Gd}}}BKl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{BNf{An{{f{ABb}}}}}{{G`{{BKn{Ij}}AI`}}}}{cc{}}{{}F`}{ce{}{}}{{{f{BNf}}}d}{F`BNf}{{{f{BNf}}}{{f{{Dd{Ij}}}}}}{{{f{BhBNf}}{f{Fj}}}b}{{{f{BhBNf}}}b}{{{f{BhBNf}}{f{{Dd{{A@j{Fj}}}}}}}b}1{{{f{BhBNf}}{An{{f{Fj}}}}}b}{BNf{{BNh{Ij}}}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}:`{{{f{c}}h}b{}}{{{f{BNj}}}{{f{ABd}}}}{{{f{BhBNj}}}{{A@j{Fj}}}}{{{f{BhBNj}}}{{f{BhABd}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BNj}}}BNj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BNj}}}{{f{ABb}}}}{{}BNj}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhBNj}}F`}b}{{{f{BNj}}{f{BhFf}}}{{G`{bAMd}}}}{cc{}}{{}F`}{ce{}{}}{{{f{BNj}}}F`}{F`BNj}{{{f{BhBNj}}}b}70{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{BNj}}}{{An{{f{BNl}}}}}}7```````{{{f{AHf}}F`F`}AHf}0`{{}b}0{{}d}``{{eF`F`}{{BNn{Ij}}}{{Jn{Bf}}}{{Bd{}{{B`{c}}}}}}{{eF`F`}{{BGb{Ij}}}{{Jn{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{Hhb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BAj}}}BAj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BAj}}{f{Bf}}}d}{{}BAj}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BAj}}{f{BAj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAj}}{f{BhFf}}}Fh}{{{f{{Dd{Ad}}}}}BAj}{BO`BAj}{BBdBAj}{{{f{BBf}}}BAj}{{{f{BO`}}}BAj}{cc{}}{{{f{BBd}}}BAj}{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{eBAj{{AMf{Kl}}}{{Fn{}{{B`{c}}}}}}{{{f{BAj}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BAj}}F`}{{An{{Gf{{f{ANb}}{f{Df}}}}}}}}{{{f{BhBAj}}F`}{{An{{Gf{{f{BhANb}}{f{BhDf}}}}}}}}{{{f{BAj}}{f{Bf}}}{{An{Kl}}}}{{{f{BAj}}{f{Bf}}}{{An{{Gf{F`{f{ANb}}{f{Df}}}}}}}}{{{f{BOb}}}{{El{{f{Bf}}}}}}{{{f{BAj}}}{{El{{f{Bf}}}}}}{{{f{BAj}}{f{Bhc}}}bAEh}{{{f{BOb}}{f{Bf}}}{{An{F`}}}}{{{f{BAj}}{f{Bf}}}{{An{F`}}}}{{}F`}{{{f{BhBAj}}F`ANbDf}{{Af{{An{Df}}}}}}{ce{}{}}{BAjc{}}{{{f{BAj}}}d}{{{f{BAj}}}{{`{{Bd{}{{B`{{Gf{{f{ANb}}{f{Df}}}}}}}}}}}}{{{f{BAj}}}{{`{{Ib{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBAj}}}{{`{{Ib{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BAj}}}{{`{{Ib{}{{B`{Kl}}}}}}}}{{{f{BAj}}}{{`{{Ib{}{{B`{{f{ANb}}}}}}}}}}{{{f{BAj}}}F`}{{{f{BhBAj}}BAj}b}{{{f{BhBAj}}{f{BAj}}}b}{{}BAj}{{{f{BAj}}F`ANbDf}{{Af{BAj}}}}{{{f{BhBAj}}{f{Bf}}}{{An{Df}}}}{{{f{BhBAj}}{f{Bf}}ANb}{{An{ANb}}}}{{{f{BhBAj}}F`}b}{{{f{BhBAj}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBAj}}F`Df}{{An{Df}}}}4{{{f{BhBAj}}F`}{{An{{Gf{ANbDf}}}}}}{{{f{BAj}}d}BBd}{{{f{c}}}e{}{}}{{{f{BhBAj}}{f{BAj}}}{{Af{d}}}}{c{{G`{e}}}{}{}}{{{f{BAj}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BAj}}F`}{{Af{{Gf{{f{ANb}}{f{Df}}}}}}}}{{{f{BAj}}{f{Bf}}}{{Af{Kl}}}}{{{f{BAj}}{f{Bf}}}{{Af{{Gf{F`{f{ANb}}{f{Df}}}}}}}}{{{f{BhBAj}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{BOb}}{f{Bf}}}{{Af{F`}}}}6{{{f{c}}}Mh{}}{ce{}{}}{F`BAj}{{{f{BhBAj}}ANbDf}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{El{Ej}}{f{ABb}}}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{ABb}}{An{{f{BOd}}}}}{{Af{Ad}}}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BLj}}Dl}Dn}0{{{f{BLj}}}{{Af{Dn}}}}0`{{{f{Ad}}F`}{{f{Ej}}}}{{{f{BLj}}}{{f{ABd}}}}{{{f{BhBLj}}}{{f{BhABd}}}}0{{{f{Ad}}}Dj}{{{f{BhBLj}}}{{f{Bh{l{c}}}}}Bn}{{{f{BLj}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BLj}}}}{{{f{BhBLj}}}{{Af{F`}}}}0{{{f{BhAd}}}{{Af{F`}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AHl}}}}}}{{{f{BLj}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fd}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BLj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJh}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLj}}}Eh}{{{f{BLj}}}{{f{{El{Ej}}}}}}{{{f{BhBLj}}}{{f{Bh{El{Ej}}}}}}{{{f{BhAd}}}{{f{Bh{El{Ej}}}}}}{{{f{Ad}}}Ad}{{{f{If}}}If}1{{{f{BLj}}}{{Jj{BLj}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Hl}}}}}}{{}Ad}{F`{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{F`{{f{Bhc}}}{}}00{{AdAd}c{}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jh}}}}{F`b}00{{{f{BLj}}}Ad}0{{{f{BLj}}}{{f{Df}}}}0{{{f{If}}{f{If}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMh}{{{f{Ad}}{f{Bf}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bf}}}c{}}3{{{f{Ad}}c}eAMh{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}F`}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}GlF`}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AId}}}}}}{{{f{Ad}}}{{Af{{f{AIf}}}}}}{{{f{BLj}}}{{AIb{Kl}}}}0{{{f{Ad}}ADf}{{Af{Ad}}}}{{{f{BLj}}{f{Fd}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fd}}d}{{Af{Ad}}}}{{{f{If}}{f{BhFf}}}Fh}{{{f{Ad}}{f{BhFf}}}Fh}0{{{f{Ad}}}Dh}{cc{}}00{{{l{c}}}AdBn}{{{f{Bf}}{f{{Dd{Gl}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Dd{Gl}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}Ej}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{Df}}}Ad}{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{cAd{{Fn{}{{B`{{f{d}}}}}}}}{cAd{{Fn{}{{B`{{An{Jh}}}}}}}}{cAd{{Fn{}{{B`{Dh}}}}}}{cAd{{Fn{}{{B`{{f{Jh}}}}}}}}{cAd{{Fn{}{{B`{{An{K`}}}}}}}}{cAd{{Fn{}{{B`{Hf}}}}}}{cAd{{Fn{}{{B`{{f{Hh}}}}}}}}{cAd{{Fn{}{{B`{Ij}}}}}}{cAd{{Fn{}{{B`{{An{d}}}}}}}}{cAd{{Fn{}{{B`{{f{K`}}}}}}}}{cAd{{Fn{}{{B`{Kf}}}}}}{cAd{{Fn{}{{B`{{An{Kf}}}}}}}}{cAd{{Fn{}{{B`{{An{Hh}}}}}}}}{cAd{{Fn{}{{B`{{An{Hf}}}}}}}}{cAd{{Fn{}{{B`{Hh}}}}}}{cAd{{Fn{}{{B`{{f{Kf}}}}}}}}{cAd{{Fn{}{{B`{d}}}}}}{cAd{{Fn{}{{B`{{f{Ij}}}}}}}}{cAd{{Fn{}{{B`{{f{Bf}}}}}}}}{cAd{{Fn{}{{B`{{An{Ij}}}}}}}}{cAd{{Fn{}{{B`{{f{Hf}}}}}}}}{cAd{{Fn{}{{B`{K`}}}}}}{cAd{{Fn{}{{B`{Jh}}}}}}{{{f{Bf}}{El{Jh}}}Ad}{{{f{Bf}}{El{Kf}}}Ad}{{{f{Bf}}{El{Ij}}}Ad}{{{f{Bf}}{El{Hh}}}Ad}{{{f{Bf}}{El{K`}}}Ad}{{{f{Bf}}{El{Hf}}}Ad}{{{f{Bf}}F`{f{Df}}}Ad}{{{f{Ad}}F`F`}Ad}{{{f{BLj}}F`}{{Af{Gl}}}}{{{f{Ad}}}F`}{{{f{Ad}}}Gn}{{{f{BLj}}F`}{{An{{f{Hb}}}}}}0{{{f{BLj}}F`F`}{{An{{f{Hb}}}}}}0{{{f{BLj}}F`}Gl}0{{{f{Ad}}{f{Bf}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMh}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bf}}}c{}}21{{{f{BLj}}}d}{{{f{If}}{f{Bhc}}}bAEh}{{{f{Ad}}{An{F`}}}Ad}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{AOj}}}}}}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{}F`}00{ce{}{}}00{AdB@j}1{BAlAd}{AdAd}<<{{{f{Ad}}}{{Af{Fd}}}}000{{{f{BLj}}}Fd}0{{}d}00{{{f{Ad}}}If}{{{f{Ad}}}BOf}{{{f{BLj}}}F`}{{{f{BLj}}F`}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}c}{{Af{Fd}}}AMh}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}120{{{f{Ad}}}{{Af{{An{c}}}}}Jd}{{{f{BLj}}}{{Af{Jf}}}}0{{{f{BLj}}}{{An{Jh}}}}0{{{f{Ad}}}Jf}1122322{{Adc}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jd}{}}{{AdAd}c{}}=={{{f{BLj}}}{{Af{F`}}}}0{{{f{BLj}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{K`}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Kf}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Ad}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Hh}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{{AIb{Bf}}}}}}}}}}{{{f{Bf}}{Kb{Kf}}}Ad}{{{f{Bf}}c}Ad{{Jn{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Hf}}}}}}}}{{{f{Bf}}{Kb{K`}}}Ad}{{{f{Bf}}{Kb{Hh}}}Ad}{{{f{Bf}}c}Ad{{Jn{{Dd{Ij}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{{El{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Hh}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{K`}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Jn{{Dd{Kf}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{El{Db}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{AIb{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{{AIb{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{d}}}}}}}}{{{f{Bf}}{Kb{Ij}}}Ad}{{{f{Bf}}c}AdBAl}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{AIb{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Jh}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Gl}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{d}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Jh}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{{An{Ij}}}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Dh}}}}}}{{{f{Bf}}c}Ad{{Jn{{Dd{Hf}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BLj}}F`F`}Ad}{{{f{Bf}}F`}Ad}{{{f{BhBOf}}}{{An{c}}}{}}{{{f{Ad}}{f{Bf}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMh}{{{f{Ad}}{f{Bf}}}c{}}2{{{f{Ad}}c}eAMh{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLj}}}F`}`{{{f{Ad}}}BOh}{{{f{Ad}}}{{Af{Jf}}}}{{{f{BLj}}JhLd}{{Af{Jf}}}}0{{{f{BLj}}}Ad}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jd}{}}{{{f{BhBLj}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{El{Ej}}}Ad}{{{f{Ad}}Ej}Ad}7{IfIf}{{{f{BLj}}{f{Cb}}Lf}{{Af{Ad}}}}0{{{f{Ad}}Jhdd{An{Hh}}}{{Af{Ad}}}}{{{f{Ad}}F`dd{An{Hh}}}{{Af{Ad}}}}{{{f{BhAd}}If}b}{{{f{BLj}}Ij}Ad}{{{f{BhBLj}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hh}}}Ad}{{{f{BOf}}}{{Gf{F`{An{F`}}}}}}{{{f{BLj}}IjF`}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BLj}}Dl}{{Af{Ad}}}}0{{{f{BLj}}Db}{{An{Jh}}}}0{{{f{BLj}}Db}{{Af{Jf}}}}0{{{f{Ad}}}{{Af{{f{Md}}}}}}{{{f{Ad}}F`}{{Af{{AIb{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{Adc}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}}{{Af{c}}}Jd}{{{f{BLj}}}{{Af{Jf}}}}0{{{f{Ad}}}{{Af{Jf}}}}{{{f{Ad}}{An{F`}}}Ad}{{{f{BLj}}{f{Dn}}}{{Af{Ad}}}}{{{f{BLj}}{f{{Dd{Kn}}}}}{{Af{Ad}}}}{{{f{BLj}}{f{{Dd{Kn}}}}}Ad}{{{f{Ad}}{f{{Dd{Kn}}}}d}Ad}{{{f{Ad}}{f{Dn}}d}{{Af{Ad}}}}{{{f{BLj}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Dd{Kn}}}}}Ad}{{{f{Ad}}{f{Dn}}d}Ad}{{{f{Ad}}F`d}Ej}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AIb{Ad}}}}{{{f{c}}}Dh{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{G`{e}}}{}{}}00{{{Gf{{f{AMj}}Ej}}}{{Af{Ad}}}}{{{Gf{{f{AMj}}{El{Ej}}}}}{{Af{Ad}}}}{{{Gf{{f{Bf}}{El{Ej}}}}}{{Af{Ad}}}}{{{Gf{{f{Bf}}Ej}}}{{Af{Ad}}}}444{{{f{BhAd}}{Fb{c}}}dBn}{{{f{c}}}Mh{}}00{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{Ad}}}{{Af{{f{AMb}}}}}}{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{BLj}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BLj}}}{{Af{{f{{l{c}}}}}}}Bn}`{{{f{BLj}}Db}{{An{Jh}}}}0{{{f{BLj}}Db}{{Af{Jf}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jd}}{{{f{Ad}}{f{Fd}}{f{Ad}}}{{Af{Ad}}}}````{{{BOj{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{BOl}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ef}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHh}}c}{{Af{Ad}}}Ab}{{{f{{l{Ef}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOn}}}BOn}{{{f{c}}{f{Bhe}}}b{}{}}{{}BOn}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BOn}}{f{BOn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BOn}}{f{BhFf}}}Fh}{cc{}}{{{f{BOn}}{f{Bhc}}}bAEh}{{}F`}{ce{}{}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}3``{{{f{c}}h}b{}}{{{f{BhCf}}}{{f{BhAd}}}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{cc{}}{{}F`}{ce{}{}}{{{f{BhAd}}}Cf}{{{f{BhCf}}{f{BhEj}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}5{{{f{BhCf}}{f{BhEj}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````````{{{f{c}}h}b{}}8{{{El{B@j}}}{{Af{B@j}}}}{c{{Af{B@j}}}{{Fn{}{{B`{B@j}}}}}}{cB@j{{Fn{}{{B`{B@j}}}}}}{c{{An{B@j}}}{{Fn{}{{B`{B@j}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gf{{AIb{{l{c}}}}{AIb{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gf{{AIb{{l{c}}}}{AIb{{l{e}}}}{AIb{{l{g}}}}}}}BnBnBn}{{{f{BhC@`}}}d}{c{{Af{Df}}}{{Fn{}{{B`{{f{Gl}}}}}}}}{c{{Af{{Gf{DfF`}}}}}{{Fn{}{{B`{{f{Gl}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gd}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{{C@b{ec}}}}}{{C@b{ec}}}Ob{Ob{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gf{{AIb{{l{c}}}}{AIb{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gf{AdAd}}}}{C@`e{}{{C@d{c}}}}{C@`e{}{{C@f{c}}}}{c{{Af{B@j}}}{{Fn{}{{B`{{f{B@j}}}}}}}}{cB@j{{Fn{}{{B`{{f{B@j}}}}}}}}{{{f{BhC@`}}{f{c}}}dBIh}{F`{{f{c}}}{}}{{{f{{C@h{c}}}}}{{f{e}}}{}{}}1{{{f{{AHh{c}}}}}{{f{e}}}{}{}}2{F`{{f{Bhc}}}{}}0{{{f{Bh{AHh{c}}}}}{{f{Bhe}}}{}{}}1{F`b}00{cBAj{{Fn{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Fn{}{{B`{{f{Df}}}}}}}}{{{f{{C@h{Ad}}}}{f{{C@h{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhC@`}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{G`{ic}}}{}{}{{Gb{c}{{B`{e}}}}}{}}{c{{AHh{Fd}}}{{Fn{}{{B`{d}}}}}}{c{{AHh{{l{e}}}}}{{Fn{}{{B`{}}}}}n}{eC@f{}{{Fn{}{{B`{c}}}}}}12{c{{AHh{{l{e}}}}}{{Gh{}{{B`{}}}}}n}{c{{AHh{{l{e}}}}}{{Gj{}{{B`{}}}}}n}{c{{AHh{Fd}}}{{Gj{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{AKd}}{f{AKd}}}AKd}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@h{Ad}}}}{f{Bhc}}}bAEh}{{}F`}00{ce{}{}}00{{{AHh{c}}}c{}}1{BCh{{El{c}}}{}}{c{{El{Dh}}}{}}{c{{El{{C@l{C@j}}}}}{}}{BAfGl}{c{{AHh{c}}}{}}{{eF`}{{C@b{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@b{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@b{ec}}}}}An{}{{Bd{}{{B`{c}}}}En}}`{{{f{{C@b{ec}}}}}{{Gf{F`{An{F`}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{{Dd{c}}}}IjF`}{{f{{Dd{c}}}}}{}}{{{f{{l{c}}}}F`}{{Af{{El{{l{c}}}}}}}Bn}{{{f{B@j}}F`d}{{El{B@j}}}}{{{f{c}}}e{}{}}{{C@`F`}{{C@b{C@`c}}}{}}{c{{G`{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Mh{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Dd{{El{c}}}}}}}{{Gf{F`{El{F`}}}}}{}}{{{f{B@j}}}{{`{{Bd{}{{B`{B@j}}}}}}}}{{{f{{Dd{c}}}}}{{AHb{Kn}}}{{Jn{{Dd{Mj}}}}HnI`}}{{{f{{Dd{e}}}}}{{El{c}}}{HnI`Cd}{{Jn{{Dd{c}}}}}}{{{f{Ad}}}{{El{Ad}}}}","D":"IIf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",4984],[5,"ListType",1276],[5,"ChunkedArray",39],[10,"PolarsNumericType",1276],[10,"Num",4985],[10,"ToPrimitive",4986],[5,"Series",4405],[8,"PolarsResult",3696,4987],[10,"NumOpsDispatchInner",4787,4988],[6,"GroupsProxy",3298,4989],[5,"BooleanType",1276],[6,"Option",4990],[17,"Item"],[8,"ArrayBox",4846],[10,"Iterator",4991],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1276],[10,"PolarsDataType",1276],[17,"Output"],[10,"Fn",4992],[10,"Copy",4993],[5,"UnstableSeries",4846],[10,"FnMut",4992],[5,"Float64Type",1276],[5,"Float32Type",1276],[5,"StringType",1276],[5,"BinaryType",1276],[1,"u8"],[1,"slice"],[6,"DataType",1276,4994],[5,"String",4995],[8,"ListChunked",1276],[5,"SortOptions",1194],[8,"IdxCa",1276,4996],[5,"SortMultipleOptions",1194],[8,"BinaryChunked",1276],[10,"PolarsIntegerType",1276],[10,"NumOpsDispatchCheckedInner",4812,4997],[8,"ChunkLenIter",39],[8,"ArrayRef",3696,4998],[5,"Vec",4999],[10,"DoubleEndedIterator",5000],[1,"usize"],[5,"Metadata",764],[8,"BooleanChunked",1276],[5,"Formatter",5001],[8,"Result",5001],[10,"Array",4998],[17,"Array"],[10,"IntoIterator",5002],[6,"Result",5003],[10,"FallibleIterator",5004],[5,"Bitmap",5005],[1,"tuple"],[10,"IntoParallelIterator",5006],[10,"TrustedLen",5007],[6,"AnyValue",1276,5008],[5,"MetadataFlags",764],[5,"ObjectType",1276],[10,"PolarsObjectSafe",867],[10,"PolarsObject",867],[1,"f32"],[1,"u64"],[5,"Int128Type",1276],[8,"DecimalChunked",1276,5009],[10,"Send",4993],[10,"Sync",4993],[10,"ExactSizeIterator",5010],[10,"PolarsFloatType",1276],[6,"IsSorted",4405,5011],[10,"PolarsIterator",725],[1,"i64"],[5,"Iter",5012],[1,"fn"],[5,"Map",5013],[6,"ChunkedArrayLayout",39],[10,"NumCast",4986],[5,"Scalar",1276,5008],[1,"f64"],[5,"Arc",3696,5014],[5,"Int64Type",1276],[10,"AsRef",5015],[1,"u32"],[5,"Range",5016],[5,"UInt32Type",1276],[1,"i32"],[5,"Int32Type",1276],[5,"UInt64Type",1276],[5,"Field",1276,5017],[8,"IdxSize",3696,5018],[10,"ParallelIterator",5006],[10,"IndexedParallelIterator",5006],[6,"QuantileInterpolOptions",3696,5019],[5,"RollingOptionsFixedWindow",3696,5020],[10,"Sized",4993],[17,"HasViews"],[5,"RandomState",5021],[5,"BytesHash",5022],[8,"Array2",5023],[8,"ArrayView1",5023],[8,"StringChunked",1276],[6,"Either",5024],[5,"TypeId",5025],[5,"NullableIdxSize",3696,5018],[10,"FnOnce",4992],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",419,5026],[10,"ChunkedBuilder",447],[5,"BinViewChunkedBuilder",447,5027],[10,"ViewType",5028],[5,"BooleanChunkedBuilder",447,5029],[5,"NullChunkedBuilder",447,5030],[5,"PrimitiveChunkedBuilder",447,5031],[10,"Clone",5032],[8,"StringChunkedBuilder",447,5027],[8,"BinaryChunkedBuilder",447,5027],[10,"NewChunkedArray",447],[5,"AnonymousListBuilder",551,5033],[5,"AnonymousOwnedListBuilder",551,5033],[5,"ListBooleanChunkedBuilder",551,5034],[5,"ListPrimitiveChunkedBuilder",551,5035],[10,"ListBuilderTrait",551],[5,"ListStringChunkedBuilder",551,5036],[5,"ListBinaryChunkedBuilder",551,5036],[5,"ListNullChunkedBuilder",551,5037],[5,"Box",5038],[10,"ChunkedCollectInferIterExt",705],[10,"ChunkedCollectIterExt",705],[10,"Canonical",719],[10,"ChunkedCollectParIterExt",721],[10,"FromParIterWithDtype",721],[5,"BooleanArray",5039],[5,"BoolIterNoNull",725],[5,"SomeIterator",725],[5,"Iter",5040],[5,"IterNames",5040],[5,"ObjectArray",867],[6,"ArrowDataType",1276,5041],[10,"Any",5025],[10,"Debug",5001],[5,"BitmapIter",5042],[6,"ZipValidity",5043],[8,"ObjectValueIter",867],[5,"ObjectChunkedBuilder",938],[8,"ObjectChunked",1276],[10,"AnonymousObjectBuilder",961],[5,"ObjectRegistry",961],[8,"ObjectConverter",961],[8,"BuilderConstructor",961],[17,"FuncRet"],[10,"ChunkApply",989],[10,"ChunkApplyKernel",989],[10,"ChunkSort",989],[10,"ChunkUnique",989],[10,"ChunkCast",989],[6,"FillNullStrategy",989],[10,"ChunkCompare",989],[10,"ChunkExplode",989],[5,"OffsetsBuffer",5044],[10,"ChunkFillNullValue",989],[10,"ChunkFilter",989],[10,"ChunkFull",989],[10,"ChunkFullNull",989],[10,"ChunkAnyValue",989],[10,"Hasher",5045],[10,"IsFirstDistinct",989],[10,"IsLastDistinct",989],[10,"ChunkAgg",989],[10,"ChunkQuantile",989],[10,"ChunkExpandAtIndex",989],[10,"ChunkReverse",989],[10,"ChunkRollApply",989],[10,"ChunkSet",989],[10,"ChunkShift",989],[10,"ChunkShiftFill",989],[10,"ChunkVar",989],[10,"ChunkTake",989],[10,"ChunkTakeUnchecked",989],[10,"ChunkBytes",989],[10,"ChunkZip",989],[10,"BinaryFnMut",1110],[10,"StaticArray",1276,5046],[10,"TernaryFnMut",1110],[10,"Error",5047],[10,"UnaryFnMut",1110],[5,"PrimitiveArray",5048],[6,"SearchSortedSide",1150],[10,"SlicedArray",3696,5049],[5,"NoNull",4870],[5,"RowsEncoded",5050],[8,"BinaryOffsetChunked",1276],[5,"NaiveDateTime",5051],[6,"PolarsError",3696,4987],[6,"Cow",5052],[8,"Float32Chunked",1276],[8,"Float64Chunked",1276],[10,"ArrayFromIter",1276,5053],[10,"ArrayFromIterDtype",1276,5053],[10,"AsRefDataType",1276,4994],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5054],[10,"From",5015],[5,"CategoricalChunked",2680,5055],[10,"CategoricalMergeOperation",2680,5056],[10,"LogicalType",1276,5057],[5,"Logical",1276,5057],[5,"OwnedObject",1276,5008],[6,"UnknownKind",1276,4994],[6,"TimeUnit",1276,5058],[5,"UInt8Type",1276],[5,"UInt16Type",1276],[5,"Int8Type",1276],[5,"Int16Type",1276],[5,"DateType",1276],[5,"TimeType",1276],[5,"BinaryOffsetType",1276],[5,"DecimalType",1276],[5,"DatetimeType",1276],[5,"DurationType",1276],[5,"CategoricalType",1276],[6,"ArrowTimeUnit",1276],[10,"ArrayCollectIterExt",3696,5053],[8,"Utf8ViewArray",5028],[8,"UInt32Chunked",1276],[5,"Error",5001],[10,"Into",5015],[10,"NumericNative",1276],[5,"ArrowField",3696],[6,"IntegerType",5059],[6,"PrimitiveType",5060],[10,"Borrow",5061],[8,"String",5062],[10,"NoOption",5063],[10,"GetAnyValue",1276,5008],[8,"Int128Chunked",1276],[6,"Ordering",5064],[6,"PhysicalType",5059],[8,"UInt8Chunked",1276],[8,"UInt16Chunked",1276],[8,"UInt64Chunked",1276],[8,"Int8Chunked",1276],[8,"Int16Chunked",1276],[8,"Int32Chunked",1276],[8,"Int64Chunked",1276],[8,"PlIdHashMap",1276,4996],[5,"CategoricalChunkedBuilder",2680,5065],[5,"GlobalRevMapMerger",2680,5056],[6,"RevMapping",2820,5066],[6,"CategoricalOrdering",2820,5066],[5,"CatIter",2680,5055],[1,"u128"],[5,"DataFrame",3007],[5,"StringCacheHolder",2872,5067],[5,"ErrString",2901,4987],[6,"PolarsWarning",2901,5068],[10,"Display",5001],[6,"FloatFmt",2977],[1,"i128"],[1,"char"],[5,"Schema",4331],[10,"IntoSeries",4405,5069],[6,"NullStrategy",3007],[6,"UniqueKeepStrategy",3007],[8,"PlHashSet",1276,5070],[5,"ArrowSchema",3696,5071],[5,"Row",3552],[5,"GroupBy",3298],[5,"RangeInclusive",5016],[5,"RangeTo",5016],[5,"RangeToInclusive",5016],[5,"RangeFrom",5016],[5,"RangeFull",5016],[5,"RecordBatchIter",3007],[5,"PhysRecordBatchIter",3007],[10,"IntoVec",4870],[5,"MeltArgs",3269],[10,"RangeBounds",5016],[8,"SchemaRef",4331],[6,"IndexOrder",3696,5072],[5,"StructArray",5073],[8,"RecordBatch",5074],[5,"GroupsIdx",3298,4989],[8,"IdxVec",5075],[6,"GroupByMethod",3298],[5,"SlicedGroups",3298,4989],[5,"GroupsProxyParIter",3298,4989],[10,"UnindexedConsumer",5076],[6,"GroupsIndicator",3298,4989],[8,"IdxItem",3298,4989],[10,"IntoGroupsProxy",3298,5077],[5,"Copied",5078],[5,"Zip",5079],[5,"GroupsProxyIter",3298,4989],[8,"GroupsSlice",3298,4989],[1,"array"],[8,"DynArgs",3696,5080],[10,"IsFloat",5081],[10,"NativeType",5082],[10,"AggList",3536,5083],[10,"TakeExtremum",3536],[10,"PhysicalAggExpr",3549],[6,"AnyValueBuffer",3552,5084],[6,"AnyValueBufferTrusted",3552,5084],[5,"BinaryArray",5085],[5,"IdHasher",3648,5086],[5,"IdxHash",3648,5086],[5,"HashMap",5087],[10,"BuildHasher",5045],[10,"VecHash",3648,5088],[10,"Allocator",5089],[5,"BorrowedFd",5090],[10,"AsFd",5090],[10,"AsRawFd",5091],[20,"MaybeUninit",5092],[10,"NumOpsDispatchChecked",3696,4997],[5,"ChunkId",3696,5018],[5,"RollingVarParams",3696,5080],[5,"RollingQuantileParams",3696,5080],[6,"NonExistent",3696,5093],[10,"Ord",5064],[10,"Default",5094],[5,"Weak",5014],[10,"PartialEq",5064],[10,"Scalar",5095],[5,"File",5096],[5,"Error",5097],[5,"TryReserveError",5098],[6,"Error",5099],[5,"Utf8Error",5100],[5,"CStr",5101],[10,"ToOwned",5052],[5,"OsStr",5102],[5,"CString",5103],[5,"PathBuf",5104],[5,"Path",5104],[5,"OsString",5102],[1,"never"],[10,"FromData",4254,5105],[5,"Buffer",5106],[10,"FromDataUtf8",4254,5105],[10,"FromDataBinary",4254,5105],[5,"ListArray",5107],[6,"Ambiguous",3696,5093],[10,"NamedFromOwned",3696,5108],[10,"PartialOrd",5064],[10,"PolarsArray",3696,5109],[10,"Hash",5045],[10,"SeriesTrait",4405,5011],[10,"ChunkAggSeries",3696,5110],[10,"QuantileAggSeries",3696,5111],[10,"IndexToUsize",3696,5112],[10,"NamedFrom",3696,5108],[5,"Pin",5113],[5,"Request",5047],[5,"BorrowedCursor",5114],[5,"IoSliceMut",5115],[6,"SeekFrom",5115],[10,"VarAggSeries",3696,5116],[5,"AllocError",5089],[5,"BTreeMap",5117],[5,"IoSlice",5115],[5,"AnonymousBuilder",4260,5118],[5,"Offsets",5044],[5,"MutableNullArray",4283,5119],[5,"MutableBitmap",5120],[5,"Utf8Array",5121],[8,"ArrowSchemaRef",5071],[10,"IndexOfSchema",4331],[8,"Metadata",5041],[5,"SeriesIter",4405,5122],[8,"SeriesPhysIter",4405,5122],[10,"LhsNumOps",4787,4988],[10,"NumOpsDispatch",4787,4988],[6,"NullBehavior",4820],[10,"CustomIterTools",4870,5123],[5,"TrustMyLength",4870,5007],[10,"FromIteratorReversed",5124],[10,"FromTrustedLenIterator",4870,5123],[5,"Wrap",4870],[5,"LazyCompact",5125],[5,"SmartString",5126],[10,"InitHashMaps",1276],[10,"InitHashMaps2",1276],[5,"TrueT",1276],[15,"IO",2962],[15,"Context",2962],[15,"Count",3533],[15,"Slice",3534],[10,"ListFromIter",3696],[10,"Utf8FromIter",4326],[10,"BinaryFromIter",4326]],"r":[[0,5086],[4,5067],[13,5067],[16,5067],[31,5067],[419,5026],[447,5027],[448,5027],[449,5029],[452,5030],[453,5031],[454,5027],[551,5033],[552,5033],[553,5036],[554,5034],[556,5037],[557,5035],[558,5036],[1179,5049],[1194,5049],[1277,5008],[1279,5053],[1280,5053],[1281,5053],[1282,5041],[1284,4994],[1300,5055],[1303,5055],[1304,5065],[1305,5056],[1306,5066],[1308,4994],[1309,4994],[1310,4994],[1321,5009],[1331,5017],[1332,5017],[1347,5008],[1349,5056],[1353,4996],[1354,5112],[1355,4996],[1356,4996],[1357,5070],[1358,4996],[1394,5057],[1395,5057],[1413,5008],[1417,5070],[1418,5070],[1419,4996],[1420,5070],[1421,5070],[1427,5066],[1428,5008],[1430,5046],[1442,5058],[1443,4994],[1470,4994],[1669,5056],[1683,5057],[1759,4994],[2278,5056],[2279,5056],[2290,4994],[2374,5055],[2412,5055],[2680,5055],[2681,5055],[2682,5065],[2683,5056],[2684,5066],[2686,5056],[2690,5066],[2707,5056],[2772,5056],[2773,5056],[2791,5055],[2795,5055],[2820,5066],[2825,5066],[2872,5067],[2878,5067],[2881,5067],[2889,5067],[2891,5066],[2896,5066],[2897,5067],[2898,5067],[2899,5067],[2900,5067],[2906,4987],[2912,4987],[2913,4987],[2914,5068],[2926,4987],[2934,4987],[2941,5068],[2946,4987],[2947,4987],[2948,4987],[2949,4987],[2950,4987],[2951,5068],[2952,4987],[2966,5127],[2967,5127],[2968,5127],[2969,3648],[3298,4989],[3304,4989],[3305,4989],[3306,4989],[3307,4989],[3308,4989],[3309,4989],[3312,4989],[3314,5077],[3326,4989],[3536,5083],[3554,5084],[3555,5084],[3648,5086],[3649,5086],[3650,5086],[3651,5088],[3654,5088],[3655,5088],[3696,5093],[3697,5014],[3698,5026],[3699,5053],[3700,4998],[3702,5071],[3703,5027],[3704,5029],[3706,5055],[3707,5055],[3708,5065],[3709,5056],[3710,5066],[3711,5110],[3712,5018],[3713,39],[3714,447],[3715,705],[3716,705],[3720,3007],[3722,5080],[3725,5105],[3726,5105],[3727,5105],[3729,5056],[3732,5112],[3733,5018],[3734,5072],[3735,5112],[3736,5069],[3737,4870],[3739,5128],[3740,5128],[3741,5128],[3744,4988],[3746,5036],[3747,5034],[3748,551],[3749,5109],[3750,5035],[3751,5036],[3754,3269],[3756,5108],[3757,5108],[3759,447],[3761,5093],[3764,5018],[3765,5018],[3766,4988],[3767,4997],[3770,5109],[3771,4987],[3772,725],[3773,867],[3774,4987],[3775,5031],[3776,5111],[3777,5019],[3780,5066],[3781,5020],[3782,5080],[3783,5080],[3786,4405],[3787,5011],[3789,5049],[3790,5067],[3792,5027],[3794,3007],[3795,5116],[3796,5088],[3842,5056],[3877,5109],[3880,0],[3890,5109],[3919,0],[4055,5112],[4097,5109],[4099,5056],[4100,5056],[4126,5109],[4132,4987],[4133,4987],[4134,4987],[4135,4987],[4147,5055],[4149,5109],[4155,5055],[4228,5109],[4254,5105],[4255,5105],[4256,5105],[4260,5118],[4283,5119],[4313,5066],[4318,5066],[4319,5049],[4322,5067],[4323,5067],[4324,5067],[4325,5067],[4326,5129],[4327,5129],[4407,989],[4410,5069],[4411,5011],[4412,5011],[4416,5122],[4417,5122],[4418,5011],[4787,4988],[4788,4988],[4789,4988],[4795,4988],[4812,4997],[4813,4997],[4871,5123],[4872,5123],[4873,5123],[4876,5007],[4887,5130],[4888,5130],[4918,5131],[4919,5132],[4938,5132],[4940,5133],[4953,5132],[4968,5132],[4978,5133]],"b":[[48,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat64Type%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CT%3E"],[71,"impl-ChunkedArray%3CStringType%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[116,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[117,"impl-Div-for-ChunkedArray%3CT%3E"],[118,"impl-Div-for-%26ChunkedArray%3CT%3E"],[119,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[126,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[127,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[128,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[129,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[136,"impl-Debug-for-ChunkedArray%3CT%3E"],[147,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[149,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[151,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[176,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[177,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[178,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[179,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[210,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[211,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[212,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[213,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[214,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[225,"impl-ChunkedArray%3CBooleanType%3E"],[227,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[228,"impl-ChunkedArray%3CBooleanType%3E"],[236,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[242,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[243,"impl-Mul-for-ChunkedArray%3CT%3E"],[244,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[245,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[249,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[250,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[251,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[252,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[253,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[254,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[255,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[256,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[257,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[259,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[262,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[263,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[264,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[265,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[266,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[267,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[269,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[279,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[280,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[281,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[282,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[286,"impl-ChunkedArray%3CListType%3E"],[287,"impl-ChunkedArray%3CStringType%3E"],[288,"impl-ChunkedArray%3CStringType%3E"],[289,"impl-ChunkedArray%3CListType%3E"],[300,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[301,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[302,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[303,"impl-Rem-for-ChunkedArray%3CT%3E"],[326,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[327,"impl-Sub-for-ChunkedArray%3CT%3E"],[328,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[329,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[331,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[332,"impl-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[336,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[345,"impl-ChunkedArray%3CT%3E"],[350,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[351,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[352,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[353,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[354,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[355,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[382,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[383,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[384,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[385,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[386,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[387,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[388,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[389,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[390,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[391,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[392,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[398,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[499,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[500,"impl-BinViewChunkedBuilder%3Cstr%3E"],[777,"impl-Flags-for-MetadataFlags"],[778,"impl-MetadataFlags"],[805,"impl-LowerHex-for-MetadataFlags"],[806,"impl-Debug-for-MetadataFlags"],[807,"impl-UpperHex-for-MetadataFlags"],[808,"impl-Binary-for-MetadataFlags"],[809,"impl-Octal-for-MetadataFlags"],[813,"impl-Flags-for-MetadataFlags"],[814,"impl-MetadataFlags"],[872,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[905,"impl-StaticArray-for-ObjectArray%3CT%3E"],[906,"impl-ObjectArray%3CT%3E"],[918,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[919,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[929,"impl-StaticArray-for-ObjectArray%3CT%3E"],[930,"impl-ObjectArray%3CT%3E"],[932,"impl-StaticArray-for-ObjectArray%3CT%3E"],[933,"impl-ObjectArray%3CT%3E"],[935,"impl-Array-for-ObjectArray%3CT%3E"],[936,"impl-ObjectArray%3CT%3E"],[939,"impl-ObjectChunkedBuilder%3CT%3E"],[940,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[942,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[943,"impl-ObjectChunkedBuilder%3CT%3E"],[1509,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1510,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1511,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1512,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1513,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1514,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1515,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1516,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1592,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1593,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1594,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1595,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1596,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1597,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1887,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1888,"impl-PartialEq-for-DataType"],[1896,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1897,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1898,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1899,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1902,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1903,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1904,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1905,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1944,"impl-Debug-for-AnyValue%3C\'a%3E"],[1945,"impl-Display-for-AnyValue%3C\'_%3E"],[1947,"impl-Display-for-DataType"],[1948,"impl-Debug-for-DataType"],[1950,"impl-Debug-for-TimeUnit"],[1951,"impl-Display-for-TimeUnit"],[1963,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1964,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[1965,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[1966,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[1967,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[1970,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1972,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1973,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1974,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1976,"impl-From%3C%26Field%3E-for-Field"],[2000,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2001,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2004,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2005,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2006,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2008,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2009,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2010,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2011,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2017,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2018,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2020,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2021,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2022,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2023,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2024,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2025,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2033,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2034,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2035,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2036,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2037,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2038,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2127,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2128,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2129,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2130,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2133,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2134,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2135,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2136,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2268,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2269,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2270,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2271,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2274,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2275,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2276,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2277,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2311,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2312,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2313,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2314,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2315,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2316,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2317,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2318,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2319,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2320,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2332,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2333,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2336,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2337,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2338,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2339,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2342,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2343,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2344,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2345,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2424,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2425,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2426,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2427,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2726,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2727,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2728,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2729,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2730,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2731,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2746,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2747,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2748,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2749,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2750,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2751,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2766,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2767,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2768,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2769,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2770,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2771,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2782,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2783,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2784,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2785,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2786,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2787,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2936,"impl-Display-for-ErrString"],[2937,"impl-Debug-for-ErrString"],[3028,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3029,"impl-Add%3C%26Series%3E-for-DataFrame"],[3030,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3067,"impl-Div%3C%26Series%3E-for-DataFrame"],[3068,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3069,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3099,"impl-Debug-for-DataFrame"],[3100,"impl-Display-for-DataFrame"],[3106,"impl-From%3C%26Schema%3E-for-DataFrame"],[3107,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3134,"impl-Index%3C%26str%3E-for-DataFrame"],[3135,"impl-Index%3Cusize%3E-for-DataFrame"],[3136,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3137,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3138,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3139,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3140,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3141,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3166,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3167,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3168,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3183,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3184,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3185,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3217,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3218,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3219,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3238,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3239,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3410,"impl-Display-for-GroupByMethod"],[3411,"impl-Debug-for-GroupByMethod"],[3417,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3419,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3420,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3454,"impl-IntoIterator-for-GroupsIdx"],[3455,"impl-IntoIterator-for-%26GroupsIdx"],[3457,"impl-IntoParallelIterator-for-GroupsIdx"],[3458,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3813,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3814,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3938,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3939,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3940,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3973,"impl-Debug-for-PolarsError"],[3974,"impl-Display-for-PolarsError"],[3977,"impl-Display-for-Arc%3CT,+A%3E"],[3978,"impl-Pointer-for-Arc%3CT,+A%3E"],[3979,"impl-Debug-for-Arc%3CT,+A%3E"],[3989,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3990,"impl-From%3CError%3E-for-PolarsError"],[3991,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3993,"impl-From%3CError%3E-for-PolarsError"],[3997,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3998,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3999,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4000,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4001,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4002,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4003,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4004,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4005,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4006,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4007,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4008,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4009,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4010,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4011,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4349,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4350,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4351,"impl-From%3CArrowSchema%3E-for-Schema"],[4352,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4353,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4355,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4423,"impl-Add%3CT%3E-for-Series"],[4424,"impl-Add%3CT%3E-for-%26Series"],[4425,"impl-Add-for-%26Series"],[4426,"impl-Add-for-Series"],[4487,"impl-Div-for-Series"],[4488,"impl-Div%3CT%3E-for-Series"],[4489,"impl-Div%3CT%3E-for-%26Series"],[4490,"impl-Div-for-%26Series"],[4501,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4502,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4503,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4504,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4505,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4506,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4524,"impl-Display-for-Series"],[4525,"impl-Debug-for-Series"],[4536,"impl-FromIterator%3C%26bool%3E-for-Series"],[4537,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4538,"impl-FromIterator%3CString%3E-for-Series"],[4539,"impl-FromIterator%3C%26f64%3E-for-Series"],[4540,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4541,"impl-FromIterator%3Cf32%3E-for-Series"],[4542,"impl-FromIterator%3C%26u64%3E-for-Series"],[4543,"impl-FromIterator%3Ci64%3E-for-Series"],[4544,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4545,"impl-FromIterator%3C%26u32%3E-for-Series"],[4546,"impl-FromIterator%3Ci32%3E-for-Series"],[4547,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4548,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4549,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4550,"impl-FromIterator%3Cu64%3E-for-Series"],[4551,"impl-FromIterator%3C%26i32%3E-for-Series"],[4552,"impl-FromIterator%3Cbool%3E-for-Series"],[4553,"impl-FromIterator%3C%26i64%3E-for-Series"],[4554,"impl-FromIterator%3C%26str%3E-for-Series"],[4555,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4556,"impl-FromIterator%3C%26f32%3E-for-Series"],[4557,"impl-FromIterator%3Cu32%3E-for-Series"],[4558,"impl-FromIterator%3Cf64%3E-for-Series"],[4559,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4560,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4561,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4562,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4563,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4564,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4576,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4577,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4578,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4579,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4580,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4581,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4618,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4619,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4620,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4621,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4622,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4623,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4637,"impl-Mul%3CT%3E-for-Series"],[4638,"impl-Mul-for-%26Series"],[4639,"impl-Mul%3CT%3E-for-%26Series"],[4640,"impl-Mul-for-Series"],[4646,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4647,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4648,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4649,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4650,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4651,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4652,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4653,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4654,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4655,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4656,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4657,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4658,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4659,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4660,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4661,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4662,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4663,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4664,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4665,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4666,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4667,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4668,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4669,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4670,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4671,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4672,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4673,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4674,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4675,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4676,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4677,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4678,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4679,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4680,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4685,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4686,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4687,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4688,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4689,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4690,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4699,"impl-Rem%3CT%3E-for-%26Series"],[4700,"impl-Rem-for-%26Series"],[4701,"impl-Rem%3CT%3E-for-Series"],[4730,"impl-Sub%3CT%3E-for-Series"],[4731,"impl-Sub-for-%26Series"],[4732,"impl-Sub-for-Series"],[4733,"impl-Sub%3CT%3E-for-%26Series"],[4757,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4758,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4759,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4760,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4930,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4931,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4933,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4934,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4936,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4937,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAAcNTg2LDY4Njw2QDZENkg2XDZoNnw2gDcUN","e":"OzAAAAEAAK0O5QEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBhAAAAYwACAGkAAgBtAAAAcAAMAH8AAwCEAAEAhwAFAI8AAQCTAAYAnAADAKIAAwCnAAMArwAFALcAAgC9AAQAwwADAMoAAQDOAAEA0QAGAN0ACwDtAAMA8wAFAPoAGQAYAQMAHQEAAB8BBAAlAQEAKwEAAC0BBAAzAQAAOAEEAD8BAQBDAQsAVQEBAFsBAABfAQgAaQEIAHMBAAB1AQQAfAEAAH4BIwCjASkA0QECANcBIwABAgUACwIAAA0CJgA2AkwAigIMAJ4CNwDZAgkA5QIBAOkCAQDsAhgACgMAAA4DCAAZAwUAIAMBACMDAAAlAwUALgMAADEDAAA0AwcAQQMAAEQDAgBMAwgAWAMBAFsDBQBiAwMAaAMTAH0DBwCGAwAAiQMBAIwDAQCQAw4AoAMAAKIDAAClAwMAqgMBAK0DAgCxAwcAugMAALwDBQDEAwEAxwMAAMkDAQDMAwMA0QMDANYDAgDaAwMA4AMAAOMDAADrAwAA8AMAAPMDAQD4AwEA+wMAAP4DAAAGBAAADwQCABQEBQAcBAIAIQQBACQEAAAmBAEALAQBAC8EAQA2BAEAPAQAAD8EAABCBAAARAQAAEYEAABIBAAATQQEAFQEAQBXBAcAYAQCAGYEAABoBAMAbQQBAHAEBQB8BBUAkwQBAJcEBACdBAMApAQGAK4EDwDABAwAzgQAANAEAwDgBAkA9QQNAAUFAgAJBQUAEQUAABMFDAAjBQAAJQUAACoFAQAtBQAALwUCADMFAAA1BQAAOAUAADsFAAA9BQEAQAUAAEIFAgBGBQwAVAUAAFYFAQBZBQAAWwUBAF4FAABgBQEAYwUAAGUFAQBoBQAAbAUAAHAFAQB0BQAAdwUAAHkFAAB7BQMAgAUAAIMFCACNBQEAkAUFAJcFAQCbBQAAnQUAAKIFAgCmBQEAqQUAAKsFAQCuBQAAsAUBALMFAAC1BQEAuAUAALoFAQC9BQAAvwUAAMIFOwAEBgQACwYJABcGBAAdBggAJwYAACkGrgDZBgcA4gZ2AFoHAQBdB0YArAcEALMHAAC1BwIAuQcAALsHAADRBwEA1AcXAPAHJAAXCAYAIAgeAEUIPwCHCAAAqwgKALgIAAC6CAEAvQgBAMAIAADFCAUAzAgAAM8IAgDUCAMA2QgAANsIHAD5CAkABAkOABQJHAAyCQYAOgkaAFYJFQBtCQwAfwkAAIEJAACGCR0ApgkCAKoJUQD9CSwAKwpMAHkKBAB/CgEAggoCAIYKBACMCiMAtwoCALsKCQDJCgMAzgoXAOgKAQDrCgQA8QoNAAALBQAHCwAACQsVACALAQAmCwIAKwsBAC8LCQA6CwQAQAsBAEULAABHCwIASwsBAE4LAABQCwEAVgsYAHALCgB8CwAAfgsCAIMLBACJCyQArwsFALYLCQDDCwAAxgsKANILBQDdCxAA8AsTAAsMAQAPDAIAEwwAABUMAAAaDAMAIwwCADQMAAA3DAEAPwwMAFIMAQBfDAIAZgwBAHAMAgB4DAAAewwAAIEMAACKDAEAjQwAAJAMBACbDAQAowwGAKwMCQC3DAAAuwwEAMcMDQDWDAIA2wwKAOcMAQDqDAMA7wwDAPQMCQD/DAcACA0BAAsNGAAlDSgATw0GAFoNAABcDQIAYg0DAGgNAABtDQcAfQ0NAIwNAQCTDQMAmA0BAJwNAgChDQAAow0fAMYNDADVDQUA3A0HAOUNFgD+DQsACw4PABwOAAAfDgMAJg4GADAODgBBDgEARA4RAFgOBABgDgUAaA4JAHMOAgB4DgcAgQ4PAJIOFgCqDiMA0A4QAOIOAADkDgEA6A4cAAcPAgALDxIAHw8GACkPAQAuDyIAVA8DAFkPCQBkDx0AhA8UAJoPAQCuDwAAtA8AALkPAAC8DwAAww8AAMYPAADLDwEAzg8GANcPEQD4DwMA/Q8CAAEQAQAEEAEAHxACACUQBAAsEAAALxAHADkQAAA7EAEAQBAtAHcQDACFEAAAhxAMAJkQCQClEAYArRAAAK8QHADNEAAAzxALANwQAADeEAEA5xAEAO4QBQD1EA0ABBECAA0RAQAQEQEAFBEBACgRAAAqEQAALBEAADARAwA2EQQAPBEDAEERBABIEQMAUREAAFcRAgBfEQUAZhEGAHARAwB4EQIAfBEBAIARDwCUEQEAlxECAJsRAACeEQIArBEDALMRAAC2EQAAuBEeANoRAADhEQEA5BEBAOgRAADuEQQA9hEDAAISAwALEgEADhIBABYSAAAeEgMAJxIaAEMSBgBMEgIAUBIBAFMSAABWEgEAXBICAGQSAABoEgEAbhIBAHISAQB5EgAAexIDAI4SAQCREgsAnhICAKgSAQCuEgIAshIAALQSGgDSEgIA1xIOAOcSAQDqEgUA8RIKAP0SAAD/EgAAARMEAAcTBAANEwQAFBMAABcTAAAaEwkAJRMCACoTDAA5EwUAQhMIAEwTBQBVEw0AZBMAAGYTAgBqEwgAdBMEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[651,"polars_io::csv::read::schema_inference"],[675,"polars_io::csv::write"],[815,"polars_io::ipc"],[1068,"polars_io::json"],[1164,"polars_io::mmap"],[1186,"polars_io::ndjson"],[1188,"polars_io::ndjson::core"],[1268,"polars_io::parquet"],[1271,"polars_io::parquet::metadata"],[1323,"polars_io::parquet::read"],[1459,"polars_io::parquet::write"],[1641,"polars_io::partition"],[1657,"polars_io::pl_async"],[1678,"polars_io::predicates"],[1732,"polars_io::prelude"],[1742,"polars_io::utils"],[1754,"dyn_clone::sealed"],[1755,"polars_io::options"],[1756,"polars_io::shared"],[1757,"alloc::boxed"],[1758,"std::io"],[1759,"core::result"],[1760,"serde::de"],[1761,"std::path"],[1762,"polars_core::frame"],[1763,"polars_error"],[1764,"core::fmt"],[1765,"core::hash"],[1766,"polars_arrow::record_batch"],[1767,"core::option"],[1768,"serde::ser"],[1769,"core::any"],[1770,"polars_io::avro::read"],[1771,"polars_arrow::datatypes::schema"],[1772,"polars_io::avro::write"],[1773,"polars_core::schema"],[1774,"alloc::string"],[1775,"alloc::vec"],[1776,"polars_io::cloud::glob"],[1777,"object_store"],[1778,"alloc::sync"],[1779,"polars_io::cloud::polars_object_store"],[1780,"polars_io::cloud::adaptors"],[1781,"std::io::error"],[1782,"crossterm::command"],[1783,"url"],[1784,"object_store::path"],[1785,"bytes::bytes"],[1786,"core::ops::range"],[1787,"core::ops::function"],[1788,"parquet_format_safe::thrift::varint::decode"],[1789,"object_store::aws::builder"],[1790,"object_store::azure::builder"],[1791,"object_store::gcp::builder"],[1792,"core::convert"],[1793,"core::iter::traits::collect"],[1794,"polars_io::csv::read::reader"],[1795,"polars_io::csv::read::read_impl::batched"],[1796,"polars_io::csv::read::options"],[1797,"std::fs"],[1798,"polars_core::datatypes::dtype"],[1799,"polars_io::csv::write::writer"],[1800,"polars_io::csv::write::options"],[1801,"core::num::nonzero"],[1802,"polars_io::ipc::ipc_stream"],[1803,"polars_io::ipc::write"],[1804,"futures_io::if_std"],[1805,"core::marker"],[1806,"polars_io::ipc::ipc_file"],[1807,"polars_io::ipc::ipc_reader_async"],[1808,"polars_arrow::io::ipc::read::file"],[1809,"polars_arrow::array::struct_"],[1810,"polars_arrow::array"],[1811,"polars_arrow::datatypes"],[1812,"polars_arrow::datatypes::field"],[1813,"polars_arrow::array::struct_::mutable"],[1814,"polars_arrow::array::growable::structure"],[1815,"polars_arrow::bitmap::immutable"],[1816,"polars_arrow::scalar"],[1817,"polars_arrow::array::struct_::iterator"],[1818,"polars_arrow::bitmap::utils::iterator"],[1819,"polars_arrow::bitmap::utils::zip_validity"],[1820,"polars_parquet::parquet::metadata::file_metadata"],[1821,"polars_parquet::parquet::metadata::column_order"],[1822,"polars_parquet::parquet::metadata::row_metadata"],[1823,"polars_parquet::arrow::read::statistics"],[1824,"parquet_format_safe::parquet_format"],[1825,"polars_parquet::parquet::metadata::schema_descriptor"],[1826,"polars_parquet::parquet::error"],[1827,"polars_io::parquet::read::reader"],[1828,"polars_io::parquet::read::read_impl"],[1829,"polars_io::parquet::read::options"],[1830,"polars_core::series"],[1831,"polars_io::parquet::write::writer"],[1832,"polars_io::parquet::write::batched_writer"],[1833,"polars_io::parquet::write::options"],[1834,"polars_parquet::parquet::write"],[1835,"core::iter::traits::iterator"],[1836,"polars_parquet::arrow::write::file"],[1837,"std::sync::mutex"],[1838,"core::future::future"],[1839,"tokio::runtime::task::join"],[1840,"polars_core::datatypes::field"],[1841,"avro_schema::file"],[1842,"polars_io::cloud::object_store_setup"],[1843,"polars_io::csv::read::parser"],[1844,"polars_io::csv::read::utils"],[1845,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,0,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,72,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,0,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,86,0,0,0,86,86,86,0,0,84,85,86,84,82,82,83,84,85,86,82,83,84,85,86,84,85,86,84,85,86,85,85,84,85,86,82,83,84,85,86,82,83,84,85,86,84,85,86,82,83,84,85,86,84,85,86,84,84,84,85,85,85,86,86,86,82,83,85,84,85,86,82,83,84,85,86,84,85,86,82,84,82,84,82,83,84,85,86,82,83,84,85,86,85,84,82,82,85,85,85,85,84,85,86,84,85,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,82,82,82,82,82,82,82,82,82,83,0,0,0,0,0,0,0,0,0,0,0,0,97,97,94,95,96,97,88,89,89,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,95,96,97,94,95,96,97,96,98,101,102,98,101,102,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,96,96,96,97,97,97,101,102,103,88,104,89,90,103,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,98,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,96,94,103,98,103,88,104,101,89,102,89,103,88,94,96,97,103,88,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,88,104,101,89,102,101,102,103,88,104,89,95,103,88,95,103,88,95,95,90,0,110,0,110,0,0,0,106,110,107,109,108,106,110,107,109,108,106,106,106,106,110,107,109,108,106,110,107,109,108,106,106,110,107,109,108,106,106,106,106,106,107,108,106,110,107,109,108,106,106,108,110,107,109,108,106,110,107,109,108,106,106,107,109,108,106,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,108,108,107,108,108,108,108,109,81,81,0,81,0,81,81,81,81,81,81,81,81,81,81,68,68,0,81,81,81,81,0,0,0,0,113,113,113,113,118,113,118,113,113,113,113,113,118,113,118,113,118,113,113,113,113,118,113,118,113,113,113,118,113,118,118,113,118,113,113,113,113,113,118,118,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,118,113,118,113,113,118,113,113,113,113,113,118,113,118,118,118,118,118,118,118,118,113,113,0,0,0,0,0,0,127,130,127,130,127,127,127,127,127,127,130,127,130,127,0,130,130,127,130,130,127,130,130,127,130,127,130,127,127,127,127,130,130,130,127,127,127,127,127,130,127,127,130,127,130,127,127,130,127,140,0,140,140,0,0,0,0,140,139,140,136,138,137,136,138,139,140,137,136,138,139,140,139,140,139,140,140,137,136,138,139,140,137,136,138,139,140,139,140,137,136,138,139,140,139,140,139,139,139,140,140,140,136,138,137,139,140,137,136,138,139,140,138,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,137,137,139,0,137,136,137,136,138,139,136,138,137,136,138,139,140,136,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,136,138,139,140,136,138,139,137,136,138,139,140,136,136,138,136,138,136,138,136,138,136,138,136,0,146,0,146,0,146,146,0,0,0,0,146,146,146,0,145,146,147,148,149,143,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,145,146,147,148,149,145,145,145,146,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,143,145,145,146,147,148,149,143,145,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,143,143,143,143,144,144,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,159,159,159,159,159,159,159,159,0,159,159,161,159,159,159,0,159,159,0,0,0,0,0,0,67,165,164,165,164,164,165,164,165,164,165,164,165,164,165,67,165,164,165,164,165,165,165,165,165,164,165,164,165,164,165,164,165,164,164,165,164,163,165,165,165,165,164,165,164,165,164,165,164,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{hEh}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}If}11{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Ij{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}<{DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{Il}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hI`}}{b{In}}}f}{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{In}}}In}{{{b{c}}{b{he}}}f{}{}}{{}In}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{In}}{b{hBf}}}Bh}{cc{}}{{{b{In}}}Af}{{{b{In}}}Hj}{{{b{Jb}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jb}}{b{I`}}}{{Bd{In}}}}1{{{b{c}}}Cf{}}4{{InHj}In}`````````{{{b{c}}d}f{}}00`{{{Jd{c}}{b{Dd}}}{{Bd{{Jf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{c}}{b{he}}}f{}{}}00``{{}Jh}{{}Jj}{{}Jl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{c{{Ah{Jl}}}Aj}{Aff}0000{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{Jl}}{b{Jl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jd{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jf{c}}}}}{{Bd{f}}}Ad}`{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{{{b{Jl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{b{Jl}}{b{hc}}}fBj}{{{Jd{c}}Al}{{Jd{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jd{c}}Af}{{Jd{c}}}Ad}{c{{Jd{c}}}Ad}````{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}{{{b{Jl}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jd{c}}Jn}{{Jd{c}}}Ad}{{{Jd{c}}{Cb{Df}}}{{Jd{c}}}Ad}0{{{Jd{c}}{Cb{Af}}}{{Jd{c}}}Ad}{{{Jd{c}}Df}{{Jd{c}}}Ad}0{{{Jd{c}}G`}{{Jd{c}}}Ad}{{{Jd{c}}Jl}{{Jd{c}}}Ad}14{{{b{h{Jf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{K`{c}}}}}{{Bd{Cj}}}Bl}{{{Kb{c}}{b{Dd}}}{{Bd{{Kd{c}}}}}Ad}{{{Kb{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KfKhKj}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Ld}}{Cb{{b{Lf}}}}}{{Bd{Lh}}}}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Ll}}c}{{Ab{A`}}}Ad}{{{b{Ld}}{Cb{{b{Lf}}}}KnAl}{{Bd{Bb}}}}{{}Lj}{{}Ll}{{}Kn}{{}L`}{{}Lb}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kl}}}Aj}{c{{Ah{L`}}}Aj}{c{{Ah{Lb}}}Aj}{Aff}00000000000{{{b{Kl}}{b{Kl}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{Lb}}{b{Lb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lj}}}An}{{{b{Ll}}}An}{{{Ln{c}}}{{Bd{Bb}}}Hh}{{{K`{c}}}{{Bd{Bb}}}Bl}{{{b{h{M`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kd{c}}}}}{{Bd{f}}}Ad}{{{Ln{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kl}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{{{b{Lb}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Ld}}}}{{{b{Kl}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{{b{Lb}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ln{c}}{Cb{An}}}{{Ln{c}}}Hh}{{{b{Ld}}}{{Bd{Lf}}}}{c{{Ln{c}}}Hh}{c{{K`{c}}}Bl}{c{{M`{c}}}Ad}{{}Lj}{c{{Kb{c}}}Ad}{{}Ll}{c{{Kb{c}}}{KfKhKj}}{{{b{h{Ln{c}}}}}{{Bd{Mb}}}Hh}{{{b{h{K`{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kl}}c}AhCd}{{{b{L`}}c}AhCd}{{{b{Lb}}c}AhCd}{{{Ln{c}}Al}{{Ln{c}}}Hh}{{{K`{c}}Al}{{K`{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ln{c}}{Cb{{Dh{Df}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Df}}}}}{{K`{c}}}Bl}{{{M`{c}}{Cb{Lb}}}{{M`{c}}}{}}{{Lj{Cb{Lb}}}Lj}{{{Kb{c}}{Cb{Lb}}}{{Kb{c}}}Ad}{{Ll{Cb{Lb}}}Ll}{{LjAn}Lj}{{LlAn}Ll}{{{Ln{c}}{Cb{Af}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{Af}}}{{K`{c}}}Bl}{{{M`{c}}Al}{{M`{c}}}{}}{{{Kb{c}}Al}{{Kb{c}}}Ad}{{Knc}Kn{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ln{c}}{Cb{{Dh{Af}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Af}}}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ln{c}}{Cb{j}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{j}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{j}}}}}}{{Knc}Kn{{Gn{{Cb{Af}}}}}}{{{b{h{Kd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Md}}}Md}{{{b{c}}{b{he}}}f{}{}}{{}Md}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Md}}}Aj}{Aff}0000{{{b{Md}}{b{Md}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mh{c}}}{{Bd{Bb}}}Hh}{{{b{Md}}{b{hBf}}}Bh}{cc{}}0000{{{b{Md}}{b{hc}}}fBj}{{{Mh{c}}{Cb{Af}}}{{Mh{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Mf{c}}}Ad}{c{{Mj{c}}}Ad}{c{{Mh{c}}}Hh}{{{b{Md}}c}AhCd}{{{Mh{c}}Al}{{Mh{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mh{c}}Jn}{{Mh{c}}}Hh}4{{{Mf{c}}Ml}{{Mf{c}}}Ad}{{{Mh{c}}Ml}{{Mh{c}}}Hh}{{{Mh{c}}{Cb{{Dh{Df}}}}}{{Mh{c}}}Hh}{{{Mh{c}}Hj}{{Mh{c}}}Hh}{{{Mh{c}}{b{Dd}}}{{Mh{c}}}Hh}{{{b{h{Mj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}{{b{{Fh{G`}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}JbHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{Il}}}}}}{{{b{Mn}}}{{Bd{Il}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}N`}``{{{b{c}}d}f{}}{Nb{{Eb{Nd}}}}{{{b{Nb}}}{{b{Nf}}}}{{{b{hNb}}}{{b{hNf}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nb{{Ab{Nd}}}}{{{b{Nb}}}Nb}{{{b{c}}{b{he}}}f{}{}}{{{b{Nb}}}{{b{Nh}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nb}}{b{{b{Nd}}}}}Al}{{{b{Nb}}{b{Nb}}}Al}{{{b{Nb}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}}{{Bd{Bb}}}Hh}{{{b{Nb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NnNb}{O`Nb}2{c{{Bd{{Nl{Il}}}}}{{Gn{An}}}}{{{b{Nh}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}{{}Af}0{ce{}{}}0{Nb{{Ed{{Dh{Nj}}{Dh{{Ab{Nd}}}}{Cb{Ob}}}}}}{{{b{Nb}}}}{{{b{Nb}}}{{Oj{{Dh{{Ab{Od}}}}OfOh}}}}{{{b{Nb}}}Af}{{{Nl{c}}Al}{{Nl{c}}}Hh}{c{{Nl{c}}}Hh}{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}Nb}{NhNb}{{NhAf}Nb}{{{b{hNb}}{Cb{Ob}}}f}{{{b{hNb}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NbAfAf}Nb}0{{{b{hNb}}}{{Cb{Ob}}}}{{{b{Nb}}}{{Ab{Nd}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}{{Ah{NbOl}}}}{{{b{c}}}Cf{}}0{{{b{Nb}}}{{Cb{{b{Ob}}}}}}0{{{b{Nb}}}{{b{{Fh{{Ab{Nd}}}}}}}}{{{b{Nb}}}Of}{ce{}{}}0{{{Nl{c}}{Cb{Jn}}}{{Nl{c}}}Hh}{{{Nl{c}}Al}{{Nl{c}}}Hh}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}0{{{Nl{c}}{Cb{e}}}{{Nl{c}}}Hh{{Gn{An}}}}2{{{Nl{c}}Hj}{{Nl{c}}}Hh}{{{Nl{c}}{b{Dd}}}{{Nl{c}}}Hh}{{Nb{Cb{Ob}}}Nb}{{{b{Nb}}{Cb{Ob}}}{{Ab{Nd}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{On}}}On}{{{b{c}}{b{he}}}f{}{}}{{{b{On}}Af}A@`}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nj}}{b{A@b}}}{{Ah{A@dOl}}}}`{Aff}0{{{b{A@d}}{b{A@d}}}Al}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{{{b{On}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@fA@d}1{{}Af}0{ce{}{}}0{OnA@h}{{{b{On}}}{{b{{Cb{{Dh{A@j}}}}}}}}``````{{{b{On}}}{{b{A@l}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@h{{Ah{OnA@n}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AA`{c}}Af}{{Bd{AAb}}}Hh}{{AAdAf}{{Bd{AAb}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAf}}}AAf}{{{b{AAh}}}AAh}{{{b{c}}{b{he}}}f{}{}}0{{}AAh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAf}}}Aj}{c{{Ah{AAh}}}Aj}{Aff}0000{{{b{AAf}}{b{AAf}}}Al}{{{b{AAh}}{b{AAh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AA`{c}}}{{Bd{Bb}}}Hh}{AAd{{Bd{Bb}}}}{{{b{AAb}}Af}Al}{{{b{AAf}}{b{hBf}}}Bh}{{{b{AAh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mb}}{Cb{AAj}}}{{Bd{AAd}}}}{{{b{h{AA`{c}}}}}{{Bd{{b{AAj}}}}}Hh}{{{b{hAAd}}}{{Bd{{b{AAj}}}}}}{{{b{AAf}}{b{hc}}}fBj}{{{b{AAh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAb}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAl}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AA`{c}}}Hh}{{{b{hAAb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AA`{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAd}}}{{Bd{Af}}}}`{{{AA`{c}}AAh}{{AA`{c}}}Hh}{{AAdAAh}AAd}{{{b{AAb}}}{{b{Mb}}}}{{{b{h{AA`{c}}}}}{{Bd{Mb}}}Hh}{{{b{hAAd}}}{{Bd{Mb}}}}{{{b{AAf}}c}AhCd}{{{b{AAh}}c}AhCd}{{{AA`{c}}Al}{{AA`{c}}}Hh}0{{AAdAl}AAd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AA`{c}}{Cb{{Dh{Df}}}}}{{AA`{c}}}Hh}{{{AA`{c}}{Cb{{Dh{AAl}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{AAl}}}}}AAd}{{{AA`{c}}{Cb{Af}}}{{AA`{c}}}Hh}{{AAd{Cb{Af}}}AAd}{{{AA`{c}}{Cb{{Eb{Hf}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Eb{Hf}}}}}AAd}{{{AA`{c}}{Cb{{Dh{Af}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{Af}}}}}AAd}{{{AA`{c}}{Cb{j}}}{{AA`{c}}}Hh}{{AAd{Cb{j}}}AAd}{{{AA`{c}}{Cb{Mb}}}{{AA`{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAn{c}}{b{Dd}}}{{Bd{{AB`{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{c}}{b{he}}}f{}{}}0000``{{}ABb}{{}ABd}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{Aff}000000{{{b{{AB`{c}}}}{b{Bb}}}{{`{{ABn{}{{H`{{Bd{{ABl{Ol}}}}}}}}}}}Ad}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AB`{c}}}}}{{Bd{AC`}}}Ad}{{{AAn{c}}{b{hBb}}}{{Bd{AC`}}}Ad}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AB`{c}}}}}{{b{{ACd{{ACb{c}}}}}}}Ad}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAn{c}}}{AdAd}}`{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{AAn{c}}Al}{{AAn{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{ACh{{Bd{ABj}}}}{{{b{c}}}Cf{}}000000======={{{AAn{c}}ABd}{{AAn{c}}}Ad}{{{AAn{c}}{Cb{Af}}}{{AAn{c}}}Ad}08{{{b{h{AB`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AB`{c}}}}{Dh{{ABl{Ol}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACj{c}}{b{Bb}}}{{Bd{f}}}{nKjACl}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACj{c}}}{nKjACl}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACj{c}}Al}{{ACj{c}}}{nKjACl}}``{{{b{ACn}}c}{}AD`}{{{b{ACn}}c}{}{AD`Kj}}=<;:97{{}{{b{ACn}}}}76{{{b{ADb}}}AC`}{{{b{ACn}}c}ADd{AD`Kj}}66{{ACfe}{}AD`{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADf}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADh}}}{{b{{Fh{ADj}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADj}}}Aj}{c{{Ah{ADh}}}Aj}{Aff}0{{{b{ADj}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAl}}}}{{{b{ADj}}{b{hBf}}}Bh}{{{b{ADh}}{b{hBf}}}Bh}{cc{}}0{AAlADj}{ADlADj}{{{b{ADj}}}{{Cb{{b{AAl}}}}}}00{{{b{ADh}}{b{Dj}}}{{Bd{{b{ADj}}}}}}{{}Af}0{ce{}{}}0{{ADl{Cb{AAl}}{Cb{AAl}}{Cb{AAl}}}ADj}{{Hj{Dh{ADj}}{Cb{Af}}}ADh}{{{b{ADj}}}{{Cb{Af}}}}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADh}}}{{b{Hj}}}}{{{b{ADj}}c}AhCd}{{{b{ADh}}c}AhCd}{{{b{ADf}}{b{ADh}}}{{Bd{Al}}}};;{{{b{ADj}}}{{Cb{AAl}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jb}}}{BlHhADn}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABn{}{{H`{Af}}}}}}{cAl{{Gl{Mn}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAl}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Mn}}}An}","D":"CJn","p":[[1,"reference"],[5,"Private",1754],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1755],[5,"HiveOptions",0,1755],[10,"WriterFactory",0,1756],[10,"SerWriter",1732,1756],[5,"Box",1757],[10,"Write",1758],[1,"usize"],[6,"Result",1759],[10,"Deserializer",1760],[1,"bool"],[5,"PathBuf",1761],[10,"SerReader",1732,1756],[5,"DataFrame",1762],[8,"PolarsResult",1763],[5,"Formatter",1764],[8,"Result",1764],[10,"Hasher",1765],[10,"Read",1758],[10,"ArrowReader",0,1756],[8,"RecordBatch",1766],[6,"Option",1767],[10,"Serializer",1768],[5,"TypeId",1769],[5,"AvroReader",80,1770],[5,"ArrowSchema",1771],[10,"Seek",1758],[6,"AvroCompression",80],[5,"AvroWriter",80,1772],[5,"Error",1764],[5,"Schema",1773],[5,"String",1774],[5,"Vec",1775],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1776],[10,"ObjectStore",1777],[5,"Arc",1778],[1,"tuple"],[5,"PolarsObjectStore",146,1779],[5,"CloudWriter",146,1780],[5,"Error",1781],[10,"Command",1782],[8,"Result",1781],[5,"Url",1783],[5,"Path",1784],[5,"Bytes",1785],[5,"Range",1786],[1,"slice"],[5,"ObjectMeta",1777],[17,"Output"],[10,"FnOnce",1787],[1,"u8"],[10,"VarInt",1788],[6,"AmazonS3ConfigKey",216,1789],[6,"AzureConfigKey",216,1790],[6,"GoogleConfigKey",216,1791],[6,"CloudType",216],[10,"AsRef",1792],[10,"Into",1792],[17,"Item"],[10,"IntoIterator",1793],[5,"CsvReader",397,1794],[10,"PhysicalIoExpr",1678],[10,"MmapBytesReader",1164],[8,"SchemaRef",1773],[5,"OwnedBatchedCsvReader",397,1795],[5,"BatchedCsvReader",397,1795],[5,"CsvReadOptions",397,1796],[5,"CsvParseOptions",397,1796],[6,"CsvEncoding",397,1796],[6,"CommentPrefix",397,1796],[6,"NullValues",397,1796],[10,"Fn",1787],[5,"File",1797],[5,"SchemaInferenceResult",651],[6,"DataType",1798],[6,"ReaderBytes",1164],[5,"CsvWriter",675,1799],[5,"BatchedWriter",675,1799],[5,"CsvWriterOptions",675,1800],[5,"SerializeOptions",675,1800],[6,"QuoteStyle",675,1800],[8,"NonZeroUsize",1801],[5,"IpcStreamReader",815,1802],[5,"IpcWriter",815,1803],[5,"BatchedWriter",815,1803],[10,"AsyncWrite",1804],[10,"Unpin",1805],[10,"Send",1805],[5,"IpcScanOptions",815,1806],[5,"IpcReadOptions",815,1807],[5,"IpcWriterOptions",815,1803],[6,"IpcCompression",815,1803],[5,"IpcReaderAsync",815,1807],[5,"FileMetadata",1808],[1,"i64"],[5,"IpcStreamWriterOption",815,1802],[5,"IpcWriterOption",815,1803],[5,"IpcReader",815,1806],[5,"IpcStreamWriter",815,1802],[8,"ArrowSchemaRef",1771],[5,"JsonWriterOptions",1068],[5,"JsonWriter",1068],[5,"JsonReader",1068],[5,"BatchedWriter",1068],[6,"JsonFormat",1068],[5,"Path",1761],[10,"BufRead",1758],[5,"StructArray",1188,1809],[10,"Array",1810],[10,"Any",1769],[6,"ArrowDataType",1811],[5,"Field",1812],[5,"JsonLineReader",1188],[5,"MutableStructArray",1813],[5,"GrowableStruct",1814],[5,"Bitmap",1815],[10,"Scalar",1816],[5,"StructValueIter",1817],[5,"BitmapIter",1818],[6,"ZipValidity",1819],[6,"PolarsError",1763],[5,"FileMetaData",1271,1820],[6,"ColumnOrder",1821],[5,"RowGroupMetaData",1822],[5,"ParquetStatistics",1271],[5,"MutableStatistics",1823],[5,"FileMetaData",1824],[5,"KeyValue",1824],[5,"SchemaDescriptor",1825],[6,"Error",1826],[5,"ParquetReader",1323,1827],[5,"BatchedParquetReader",1323,1828],[5,"ParquetAsyncReader",1323,1827],[5,"ParquetOptions",1323,1829],[6,"ParallelStrategy",1323,1829],[8,"FileMetaDataRef",1271],[5,"Series",1830],[5,"ParquetWriter",1459,1831],[5,"BatchedWriter",1459,1832],[5,"ParquetWriteOptions",1459,1833],[6,"ParquetCompression",1459,1833],[5,"GzipLevel",1459,1833],[5,"BrotliLevel",1459,1833],[5,"ZstdLevel",1459,1833],[8,"RowGroupIterColumns",1459,1834],[10,"Iterator",1835],[1,"u64"],[5,"FileWriter",1836],[5,"Mutex",1837],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1641],[10,"Sync",1805],[5,"RuntimeManager",1657],[10,"Future",1838],[10,"GetSize",1657],[5,"JoinHandle",1839],[10,"StatsEvaluator",1678],[5,"BatchStats",1678],[5,"ColumnStats",1678],[5,"Field",1840],[10,"Sized",1805]],"r":[[0,1756],[1,1755],[2,1755],[3,1756],[4,1756],[5,1756],[81,1770],[82,1772],[83,1841],[146,1776],[147,1780],[148,1779],[157,1842],[184,1776],[219,1789],[224,1790],[248,1791],[399,1795],[400,1796],[401,1796],[402,1796],[403,1796],[404,1794],[408,1796],[409,1795],[449,1843],[529,651],[548,1844],[676,1799],[677,1799],[678,1800],[682,1800],[683,1800],[815,1803],[816,1803],[817,1807],[818,1806],[819,1807],[820,1806],[821,1802],[822,1802],[823,1802],[824,1803],[825,1803],[826,1803],[1189,1809],[1271,1820],[1288,1823],[1324,1828],[1327,1829],[1328,1827],[1329,1829],[1330,1827],[1405,1845],[1459,1832],[1461,1833],[1463,1833],[1466,1833],[1467,1833],[1468,1831],[1469,1834],[1473,1833],[1732,1756],[1733,1756],[1734,0]],"b":[[1208,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1209,"impl-PartialEq-for-StructArray"],[1214,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1215,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1234,"impl-StructArray"],[1235,"impl-Array-for-StructArray"],[1238,"impl-Array-for-StructArray"],[1239,"impl-StructArray"],[1252,"impl-Array-for-StructArray"],[1253,"impl-StructArray"],[1266,"impl-StructArray"],[1267,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAMFoAAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAcCAAAKAhEAJgIAACgCAgAvAisAXAIIAGYCBwB+AgAAjAIKAJgCAQCbAgAAnQIGAKUCAACtAhQAxAIhAOgCAgDwAgIA9AIAAPYCBQACAwIACQMDAA4DFgAwAwAAMgMAADUDAAA4AwAAOgMBAD4DAwBDAyEAZgM+AKYDAwC2Aw8A0wMAANUDBwDfAzgAIgQCACcEAAAqBAEALQQAADMEIwBYBAAAXgQAAGAEBABsBBgAhwQBAI0EAQCQBAgAmgQAAJwEAQCfBAYApwQAAKkEBQCwBAoAvAQBAL8EAQDEBAIAygQAAMwEAADUBAMA3AQFAOMEAgDpBAEA7QQFAPQEAAD5BAAA+wQGAAUFAwALBQQAEQUAABMFAQAhBQIAJQUDACoFAQAtBQAAMAUAADIFAAA1BTAAawUJAHoFAAB8BQMAgQUAAIMFAQCGBQEAiQUCAI0FEgCiBQUAqQUBAKwFAgCwBQAAsgUAALQFAQC3BQAAuQUBALwFAAC+BQMAwwUdAOMFMAAWBgQAIgYMADkGBABABiMAaQYAAGsGBQByBgAAdAYEAHoGAgB+BgQAhAYBAIcGAACJBgUAkQYCAJUGAwCaBgcApAYBAK4GAQC3BgIAvQYKAMkGAADLBgAAzwYDANUGAQDZBgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPPGPPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPKPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPGPPPPPGPPPPPPPPPGPPPPPPPPPKPPPPPPPFPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPPFPPPPPPPPKPPPPFPPFPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","Ternary","Then","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1399,"polars_lazy::dsl::AggExpr"],[1406,"polars_lazy::dsl::BooleanFunction"],[1409,"polars_lazy::dsl::Expr"],[1443,"polars_lazy::dsl::FunctionExpr"],[1487,"polars_lazy::dsl::StringFunction"],[1507,"polars_lazy::dsl::binary"],[1527,"polars_lazy::dsl::cat"],[1528,"polars_lazy::dsl::dt"],[1584,"polars_lazy::dsl::function_expr"],[1749,"polars_lazy::dsl::function_expr::BooleanFunction"],[1752,"polars_lazy::dsl::function_expr::FunctionExpr"],[1796,"polars_lazy::dsl::function_expr::StringFunction"],[1816,"polars_lazy::dsl::function_expr::cat"],[1818,"polars_lazy::dsl::function_expr::pow"],[1822,"polars_lazy::dsl::function_expr::rolling"],[1854,"polars_lazy::dsl::function_expr::rolling_by"],[1885,"polars_lazy::dsl::function_expr::trigonometry"],[1927,"polars_lazy::dsl::functions"],[2002,"polars_lazy::dsl::python_udf"],[2047,"polars_lazy::dsl::string"],[2109,"polars_lazy::dsl::udf"],[2115,"polars_lazy::frame"],[2551,"polars_lazy::frame::pivot"],[2553,"polars_lazy::physical_plan"],[2555,"polars_lazy::physical_plan::executors"],[2571,"polars_lazy::physical_plan::planner"],[2572,"polars_lazy::prelude"],[3159,"polars_lazy::prelude::DslPlan"],[3211,"polars_lazy::prelude::LiteralValue"],[3214,"dyn_clone::sealed"],[3215,"polars_plan::dsl::meta"],[3216,"polars_plan::dsl::expr"],[3217,"polars_error"],[3218,"core::result"],[3219,"polars_plan::dsl::array"],[3220,"polars_plan::dsl::list"],[3221,"core::convert"],[3222,"polars_plan::dsl::expr_dyn_fn"],[3223,"alloc::sync"],[3224,"polars_core::series"],[3225,"core::option"],[3226,"core::ops::function"],[3227,"core::marker"],[3228,"polars_plan::logical_plan::visitor"],[3229,"polars_plan::dsl::function_expr"],[3230,"polars_core::datatypes::dtype"],[3231,"polars_core::chunked_array::ops::sort::options"],[3232,"polars_plan::dsl::function_expr::schema"],[3233,"polars_core::datatypes::field"],[3234,"core::any"],[3235,"alloc::vec"],[3236,"polars_plan::dsl::binary"],[3237,"core::clone"],[3238,"alloc::string"],[3239,"polars_plan::dsl::udf"],[3240,"polars_plan::dsl::cat"],[3241,"polars_plan::dsl::arity"],[3242,"polars_plan::dsl::function_expr::boolean"],[3243,"polars_plan::dsl::function_expr::cat"],[3244,"polars_plan::dsl::function_expr::pow"],[3245,"polars_plan::dsl::function_expr::strings"],[3246,"polars_plan::dsl::functions::temporal"],[3247,"polars_plan::dsl::options"],[3248,"polars_core::utils"],[3249,"polars_lazy::dsl::eval"],[3250,"polars_time::windows::duration"],[3251,"polars_time::windows::group_by"],[3252,"polars_core::datatypes::time_unit"],[3253,"serde::de"],[3254,"polars_plan::logical_plan"],[3255,"polars_core::series::ops"],[3256,"polars_plan::dsl::dt"],[3257,"polars_lazy::dsl::list"],[3258,"polars_arrow::legacy::kernels::ewm"],[3259,"polars_plan::dsl::struct_"],[3260,"polars_core::chunked_array::ops"],[3261,"core::fmt"],[3262,"polars_plan::logical_plan::apply"],[3263,"polars_plan::dsl::function_expr::range"],[3264,"polars_plan::dsl::function_expr::struct_"],[3265,"polars_plan::dsl::function_expr::list"],[3266,"polars_plan::dsl::function_expr::business"],[3267,"polars_plan::dsl::function_expr::datetime"],[3268,"polars_plan::dsl::function_expr::array"],[3269,"polars_plan::dsl::function_expr::binary"],[3270,"polars_plan::logical_plan::options"],[3271,"polars_core::schema"],[3272,"core::hash"],[3273,"polars_ops::series::ops::interpolation::interpolate"],[3274,"polars_ops::series::ops::is_between"],[3275,"polars_plan::dsl::name"],[3276,"polars_plan::logical_plan::lit"],[3277,"polars_plan::dsl::python_udf"],[3278,"polars_utils::idx_vec"],[3279,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3280,"polars_ops::series::ops::rank"],[3281,"polars_time::group_by::dynamic"],[3282,"polars_core::chunked_array::ops::rolling_window"],[3283,"polars_core::datatypes"],[3284,"polars_core::chunked_array"],[3285,"polars_time::chunkedarray::rolling_window"],[3286,"polars_core::chunked_array::ops::search_sorted"],[3287,"serde::ser"],[3288,"polars_core::series::series_trait"],[3289,"polars_plan::dsl::string"],[3290,"polars_ops::chunked_array::list::to_struct"],[3291,"polars_ops::series::ops::business"],[3292,"polars_arrow::legacy::kernels::time"],[3293,"polars_plan::dsl::function_expr::rolling"],[3294,"polars_plan::dsl::function_expr::rolling_by"],[3295,"polars_plan::dsl::function_expr::trigonometry"],[3296,"polars_core::frame"],[3297,"rayon::iter"],[3298,"pyo3::types::any"],[3299,"pyo3::instance"],[3300,"polars_utils::arena"],[3301,"polars_plan::logical_plan::alp"],[3302,"polars_plan::logical_plan::aexpr"],[3303,"polars_lazy::scan::ndjson"],[3304,"polars_plan::logical_plan::anonymous_scan"],[3305,"polars_lazy::scan::anonymous_scan"],[3306,"polars_utils::index"],[3307,"polars_lazy::frame::exitable"],[3308,"polars_utils::aliases"],[3309,"polars_lazy::scan::csv"],[3310,"polars_lazy::scan::ipc"],[3311,"polars_lazy::scan::parquet"],[3312,"polars_plan::frame::opt_state"],[3313,"polars_lazy::scan::file_list_reader"],[3314,"polars_io::cloud::options"],[3315,"polars_ops::frame::join::args"],[3316,"core::iter::traits::collect"],[3317,"polars_core::frame::explode"],[3318,"std::path"],[3319,"polars_io::options"],[3320,"polars_io::csv::write::options"],[3321,"polars_io::ipc::write"],[3322,"polars_io::json"],[3323,"polars_io::parquet::write::options"],[3324,"smartstring::alias"],[3325,"core::num::nonzero"],[3326,"polars_io::csv::read::options"],[3327,"polars_lazy::physical_plan::executors::executor"],[3328,"polars_expr::state::execution_state"],[3329,"alloc::boxed"],[3330,"chrono_tz::timezones"],[3331,"core::cmp"],[3332,"polars_core::frame::group_by::proxy"],[3333,"polars_core::datatypes::any_value"],[3334,"chrono::naive::datetime"],[3335,"polars_plan::dsl::functions::selectors"],[3336,"polars_plan::dsl::functions::horizontal"],[3337,"polars_plan::dsl::functions::arity"],[3338,"polars_plan::dsl"],[3339,"polars_plan::dsl::functions::range"],[3340,"polars_plan::dsl::functions::index"],[3341,"polars_plan::dsl::functions::coerce"],[3342,"polars_plan::dsl::functions::syntactic_sugar"],[3343,"polars_plan::dsl::functions::business"],[3344,"polars_plan::dsl::functions::concat"],[3345,"polars_plan::dsl::functions::correlation"],[3346,"polars_plan::dsl::functions::repeat"],[3347,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,54,54,40,5,54,54,27,27,27,65,27,0,27,27,27,57,57,5,27,0,27,0,27,5,27,0,0,56,27,0,0,27,27,5,5,27,57,57,57,27,36,57,27,27,27,27,27,27,27,0,27,40,27,27,53,5,0,57,27,40,40,27,27,27,27,5,0,27,5,57,64,0,0,0,27,57,57,57,5,0,0,27,27,5,57,36,27,40,27,5,0,0,27,5,27,56,55,0,64,40,40,27,57,57,57,27,36,5,27,27,0,54,54,54,54,54,54,54,54,54,54,54,54,64,0,57,57,5,27,36,5,57,57,65,27,0,0,5,27,27,40,40,27,57,40,40,36,27,36,27,36,0,36,27,40,27,40,40,36,53,27,0,54,40,40,5,27,0,40,63,57,57,27,27,27,40,27,0,27,36,27,27,27,27,27,27,5,0,27,57,27,27,57,27,63,0,27,27,27,27,27,5,0,0,27,27,27,27,27,27,5,57,5,5,0,57,57,57,56,57,36,27,0,57,57,57,57,57,57,0,27,0,5,36,27,57,27,5,0,57,57,57,27,27,27,27,40,0,27,27,27,57,0,27,36,0,5,5,0,0,40,57,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,4,4,4,4,5,5,5,5,0,9,10,5,0,62,58,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,62,5,34,36,0,0,5,0,5,0,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,5,0,61,44,46,34,47,46,0,5,0,5,5,5,5,5,5,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,68,68,5,0,0,0,0,58,59,60,5,17,17,17,58,59,61,62,63,64,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,65,10,5,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,10,5,0,5,0,0,0,5,36,5,5,53,40,17,17,54,55,56,57,27,60,61,62,63,64,65,5,5,5,5,53,53,53,40,40,40,54,54,54,55,55,55,56,56,56,57,57,57,60,60,60,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,80,80,5,5,5,5,61,5,5,5,5,5,82,82,82,5,5,5,5,0,10,5,5,17,5,5,34,47,44,86,5,5,53,40,40,17,54,54,55,55,56,56,57,57,27,27,58,59,60,61,62,63,64,65,46,0,62,61,0,5,48,9,32,10,4,107,82,49,50,51,52,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,53,40,17,17,17,17,17,17,17,17,17,17,17,17,54,55,56,57,27,27,27,27,27,58,59,60,61,62,63,63,64,65,46,17,46,0,5,0,10,5,10,5,9,10,5,48,74,15,32,34,86,5,5,4,36,5,5,53,40,54,55,56,57,27,60,61,62,63,64,65,10,5,5,58,59,5,0,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,46,0,0,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,104,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,82,107,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,107,5,0,5,32,32,17,17,5,17,107,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,58,59,59,0,9,10,5,0,60,58,59,5,58,5,9,10,5,5,46,5,5,59,5,5,5,32,32,17,58,59,46,5,5,0,5,0,5,46,5,50,52,4,5,5,5,5,5,0,5,4,5,107,107,5,0,5,5,0,5,5,5,0,5,5,82,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,62,62,17,5,10,10,5,5,58,59,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,65,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,61,5,0,5,5,107,107,0,9,10,5,0,17,10,5,5,5,0,49,51,0,58,59,58,10,5,9,107,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,32,5,40,54,55,56,57,27,9,10,107,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,32,32,5,32,34,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,59,0,50,52,60,58,58,59,32,82,59,58,59,58,59,58,59,59,58,59,58,59,32,32,58,59,58,58,59,58,5,58,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,27,54,54,54,54,27,27,27,27,27,27,27,57,57,27,27,0,27,27,0,56,27,27,27,27,57,57,57,27,57,27,27,27,27,27,27,27,27,27,27,57,27,27,27,27,27,27,57,27,57,57,57,27,27,57,27,27,0,27,27,56,55,27,57,57,57,27,27,27,54,54,54,54,54,54,54,54,54,54,54,54,57,57,27,57,57,27,27,27,27,57,27,27,27,27,27,54,27,57,57,27,27,27,27,0,27,27,27,27,27,27,27,27,57,27,27,57,27,27,27,27,27,27,27,27,27,27,27,27,57,57,57,57,56,57,27,0,57,57,57,57,57,57,27,27,57,27,57,57,57,27,27,27,27,27,27,27,57,27,57,0,0,0,0,0,203,204,205,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,0,55,56,56,0,56,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,59,0,0,0,0,0,58,59,0,0,0,0,0,0,0,0,0,58,59,59,0,58,59,58,59,0,0,0,0,0,0,0,58,59,0,0,0,0,58,59,58,59,58,0,0,0,0,137,110,137,110,137,110,137,137,137,110,137,110,137,137,110,137,137,137,137,137,137,110,137,137,110,110,137,110,137,110,137,137,110,137,110,137,110,110,137,110,137,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,134,145,149,154,155,147,156,157,134,134,145,146,147,134,134,145,147,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,155,156,152,134,134,152,134,145,149,154,155,147,156,157,152,134,145,149,154,155,147,156,157,158,158,155,156,167,157,146,134,134,167,157,167,157,158,158,154,134,134,134,149,155,156,157,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,134,134,146,152,152,134,134,145,149,154,155,147,156,157,134,167,157,134,134,167,157,152,134,152,167,157,134,134,134,146,158,158,154,158,154,147,134,157,146,146,152,134,134,134,145,149,154,155,147,156,157,134,134,158,158,154,156,134,134,134,145,156,146,149,146,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,158,158,134,134,146,134,166,134,134,146,134,134,145,147,156,134,134,134,134,134,134,155,134,134,158,154,147,149,155,156,149,146,154,147,154,147,134,146,134,156,158,154,147,158,154,147,0,167,157,134,167,157,134,158,154,147,155,156,134,134,146,134,167,157,158,154,147,149,155,156,147,134,134,134,134,134,134,147,149,134,134,134,134,134,167,157,134,134,134,134,134,134,149,134,167,157,134,134,134,167,157,146,134,134,145,134,134,134,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,167,157,146,152,134,145,149,154,155,147,156,157,134,134,134,156,146,134,146,152,134,145,149,154,155,147,156,157,146,147,154,134,134,134,134,134,134,154,134,154,154,154,154,154,154,154,147,154,147,154,154,158,154,154,147,147,154,134,158,154,147,158,154,147,134,134,154,154,158,154,147,134,158,134,154,154,147,147,154,147,154,154,134,154,154,134,134,154,154,134,134,0,0,0,0,0,0,188,188,188,188,188,186,188,188,188,188,188,188,188,188,0,0,0,0,163,163,191,192,192,76,163,0,76,192,192,191,76,0,0,192,0,76,76,192,192,192,163,76,76,76,163,192,192,192,192,192,0,76,0,0,0,0,163,0,0,182,182,76,191,191,0,0,192,182,182,191,0,0,76,192,0,0,0,76,76,163,192,76,76,76,192,192,192,192,192,192,192,76,0,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,71,71,71,148,148,148,148,175,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,162,114,71,165,71,176,178,76,178,71,71,162,114,175,176,165,177,182,178,113,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,113,76,76,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,162,162,162,114,114,114,71,71,71,175,175,175,176,176,176,165,165,165,177,177,177,163,163,163,182,182,182,178,178,178,193,193,193,136,136,136,162,162,114,71,71,148,175,176,165,177,163,163,182,182,178,191,113,192,193,136,193,162,114,71,173,175,176,165,165,177,163,182,197,178,191,113,192,193,136,76,136,192,195,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,165,175,162,175,162,114,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,163,71,71,182,71,165,162,108,197,192,175,176,177,178,192,113,71,71,71,173,71,182,71,71,165,162,114,173,136,71,71,71,162,114,173,136,195,178,148,148,173,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,175,193,165,162,178,165,165,76,192,162,114,71,175,176,165,177,163,182,178,191,113,192,193,136,76,71,163,182,136,71,71,71,71,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,192,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,165,162,114,71,173,175,176,165,177,163,182,197,178,191,113,192,193,136,76,71,71,165,173,255,255,256,257,258,259,260,261,262,263,263,264,258,265,258,261,255,262,266,257,267,264,259,268,269,269,256,270,255,269,267,255,267,271,261,255,269,262,266,270,260,263,268,265,263,260,269,263,260,260,257,257,272,272,272],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}0000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}00000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0`{jF`}{jj}0{{jjj}j}{{jj}j}0{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fj}}}Fj}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Cf}}}Cf}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}0000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hd{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHf}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HhjHjAf}j}0{{j{Dj{Hl}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjHnI`{Bh{Ib}}{Bh{Ej}}}j}{Gdj}11```{{}j}{{}{{Bb{{B`{Id}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}Gd}{{}Gf}{{}Gj}{{}Gl}{{}Gn}{{}H`}{jj}{Hj{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}11111111111111{Hj{{b{C`c}}}{}}00000000000000000000000000000{c{{n{Dh}}}If}{c{{n{j}}}If}{c{{n{Fj}}}If}{c{{n{E`}}}If}{c{{n{{Bb{{B`{Dd}}}}}}}If}{c{{n{{Bb{Bd}}}}}If}{c{{n{{Bb{{B`{Ih}}}}}}}If}{c{{n{Fl}}}If}{c{{n{Fn}}}If}{c{{n{G`}}}If}{c{{n{Gb}}}If}{c{{n{Cf}}}If}{c{{n{Gh}}}If}{c{{n{Gj}}}If}{c{{n{Gl}}}If}{c{{n{Gn}}}If}{c{{n{H`}}}If}{c{{n{Hb}}}If}{{AdChIj}j}{{jChIj}j}{{jj}}{{jc}j{{Al{j}}}}{Hjf}00000000000000000000000000000{jj}{Adj}1`{jIl}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jHlAf}j}{{{b{Dh}}{b{Dh}}}Af}{{{b{j}}{b{j}}}Af}:{{{b{Fj}}{b{Fj}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfIn}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000{{J`jAf}j}0{{jJb}j}{{jjHn}j}11`{{jc}j{{Hd{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JdCh}j}{{Jd{b{A`}}}j}{{Jd{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJf}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{En}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Eh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Jl}}{b{C`Jh}}}{{n{fJj}}}}{{{b{j}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Fj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{E`}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{{Bb{c}}}}{b{C`Jh}}}{{n{fJj}}}{}}{{{b{Fl}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Fn}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{G`}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Gb}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Cf}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Gd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gf}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gl}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{H`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Hb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{El}}{b{C`Jh}}}{{n{fJj}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Chj}{{{b{A`}}}j}{Jnj}{K`j}{Kbj}{Efj}{Afj}{Kdj}{Kfj}{Hfj}{Dhj};{Dlj}{Hlj}=={Fn{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Kh{{Bb{{B`{Dd}}}}}}{Kj{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{cc{}}{Fl{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}4444{FlCf}5{LdCf}{GbCf}{FnCf}88888{H`Gn}9999{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lf}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHjHj}j}{{AbjAf}j}43{F`j}{{{b{Id}}{b{Lh}}Lj{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lh}}Lj{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hj}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jl}}{b{Lh}}}{{n{{B`{Lh}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLl}{{{b{j}}{b{C`c}}}fLl}{{jDlDlDlDl}j}{{{b{Fj}}{b{C`c}}}fLl}{{{b{E`}}{b{C`c}}}fLl}{{{b{Fl}}{b{C`c}}}fLl}{{{b{Fn}}{b{C`c}}}fLl}{{{b{G`}}{b{C`c}}}fLl}{{{b{Gb}}{b{C`c}}}fLl}{{{b{Cf}}{b{C`c}}}fLl}{{{b{Gh}}{b{C`c}}}fLl}{{{b{Gj}}{b{C`c}}}fLl}{{{b{Gl}}{b{C`c}}}fLl}{{{b{Gn}}{b{C`c}}}fLl}{{{b{H`}}{b{C`c}}}fLl}{{{b{Hb}}{b{C`c}}}fLl}{{Adj}j}{{j{Bh{Hj}}}j}{{j{Bh{j}}{Bh{Hj}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hj}00000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLn}j}{{jj}j}{ce{}{}}00000000000000000000000000000{{{b{j}}}}{M`Ad}{AdAd}{h{{n{{`{Mb}}l}}}}{{jccMd}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jdj}{Mfj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMh}{{jHl}j}3;;3;;{{Mfc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mf{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMlAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMf}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gd}{{}Gf}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{Mn{{b{j}}}}}}}f}{{j{b{C`{Mn{j}}}}}f}=={Chj}>`8{{Fdc}j{{Al{j}}}}{{Fhc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jeH`}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHf}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mf{b{A`}}}j}05`{{j{Dj{Hl}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHj{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jN`}j}{{jjN`}j}9{{jNb{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jd{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hb}j}`{Abj}{Adj}{jj}00{{jNd}j}{{jjGh}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nf}j}{{jHjc}j{{Cd{{b{C`{Nj{Nh}}}}}{{Bf{{Bh{Hl}}}}}}BlBnNl}}{{jNf}j}{{jjNn}j}101010{{jN`HlNf}j}{{jjN`HlNn}j}{{jHjAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKd}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcO`}j{{Al{j}}}}``{{{b{Dh}}c}nOb}{{{b{j}}c}nOb}{{{b{Fj}}c}nOb}{{{b{E`}}c}nOb}{{{b{{Bb{{B`{Dd}}}}}}c}nOb}{{{b{{Bb{{B`{Ih}}}}}}c}nOb}{{{b{{Bb{Bd}}}}c}nOb}{{{b{Fl}}c}nOb}{{{b{Fn}}c}nOb}{{{b{G`}}c}nOb}{{{b{Gb}}c}nOb}{{{b{Cf}}c}nOb}{{{b{Gh}}c}nOb}{{{b{Gj}}c}nOb}{{{b{Gl}}c}nOb}{{{b{Gn}}c}nOb}{{{b{H`}}c}nOb}{{{b{Hb}}c}nOb}{{Adc}j{{Al{j}}}}0{{jOd}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHfAf}j}8{{AbHf}j}{{AdHf}j}{{jHf}j}{jOf}`{{jCj}j}`{jJd}{{jj}}{{Mf{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hj}}}j}44{{jjj}j}{{Fbc}Fd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{jjHnI`}j}```{{AdHj}j}{{{b{j}}{b{Lh}}Lj}{{n{Dbl}}}}<{Mfj}{{{b{c}}}e{}{}}0000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOh{Bh{{B`{Bj}}}}Hj}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hf}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}00000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHf}j}{{AdHf}j}{{jHf}j}{ce{}{}}00000000000000000000000000000`{cFb{{Al{j}}}}{{Fdc}Ff{{Al{j}}}}{{Fhc}Ff{{Al{j}}}}`{{Gdj}Gd}0{{Gfj}Gf}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jd{Dj{j}}}j}{{Gfjjj}Gf}{{Gdjjj}Gd}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GdIb}Gd}{{Gd{Bh{Ej}}}Gd}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}3{cc{}}87{{}Hj}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2``{{Ilj{Ed{Af}}{Dj{Ef}}Ol}j}{Ilj}<;{{IlIb}j}1{{IljIb}j}{{IlEj}j}333<;:393873333333333{{Ilj}j}44{{Il{Bh{Ej}}jOn}j}{{Iljc}j{{Aj{A`}}}}6{{Il{b{A`}}}j}7607777777{{IljEj}j};;:<8878```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@`}}}If}{Hjf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@`}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@b}}}If}{Hjf}{{{b{A@b}}{b{A@b}}}Af}{{{b{A@b}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@b}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@d}}}If}{Hjf}{{{b{A@d}}{b{A@d}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@d}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@d}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@h{{Dj{A@f}}}}}{{A@n{}{{A@j{A@l}}}}}}{cj{{Hd{Ej}}}}{{cAA`}{{A@h{A@l}}}{{Aj{{Ah{A@l}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjHnI`{Bh{Ib}}{Bh{Ej}}}j}0{Gdj}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jN`}j}>{{cj}j{{Al{j}}}}{{jjGh}j}0``{{jjHfAf}j}4{{jjHnI`}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Ml}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAb}}A@f}{{n{A@fl}}}}{{{b{AAb}}}AAb}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}0{Hj{{b{C`c}}}{}}0{c{{n{AAb}}}If}{Hjf}0{{{b{AAb}}{b{AAb}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAb}}{b{C`Jh}}}{{n{fJj}}}}{cc{}}0{{{AAf{AAd}}}AAb}{{{b{Ml}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hj}0{ce{}{}}0{{{AAf{AAd}}{Bh{Cj}}Af}Ml}{{{b{AAb}}c}nOb}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Ml}}{b{C`{Dj{Hf}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}066`{{OfAf}j}{Ofj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Of{b{A`}}Af}j}{{OfjAf}j}{{Ofj}j}1{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}38{{OfjHj}j}4{{Of{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hj}{ce{}{}}{{Of{Bh{Cj}}{Bh{Hj}}}j}9>>{{OfHjAAh}j}0{{OfjjAf}j}0{{OfjjAfCh}j}{Ofj}{{Ofjj}j}>::>:>>>>>>{{OfCjGjj}j}?{{OfGj}j}{{Of{Bh{Ib}}{Bh{Ej}}Gjj}j}{{OfHj}j}{{OfjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}={{Ofj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@lc}{{A@h{A@f}}}{{Bj{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{Bf{{A@h{f}}}}}}}}{{A@lAf}A@l}{{ABbc}A@l{{Aj{{Ah{j}}}}}}{{ABdAf}ABd}{{{b{ABf}}}Af}{{{B`{ABh}}ABj}{{A@h{A@l}}}}{{A@lA@lcc}A@l{{Al{j}}}}{{ABbcABl}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{{b{ABf}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{A@lA@l}``{{{b{AC`}}}f}{{A@l{ACb{{b{A`}}Cj}}Af}A@l}{{A@lCjAf}A@l}{{{b{AC`}}}AC`}{{{b{A@l}}}A@l}{{{b{ABb}}}ABb}{{{b{ABj}}}ABj}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{ABf}}}ABf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACl}}}{{Bh{{b{ACn}}}}}}0````{{ABdAD`}ABd}{A@l{{A@h{A@f}}}}{A@l{{A@h{AC`}}}}````{{{b{ACl}}{Dj{A@l}}}{{A@h{A@l}}}}0{{{b{ACd}}{Dj{A@l}}}{{A@h{A@l}}}}{A@lA@l}{{A@lA@l}A@l}{{}A@l}{{}ABj}{{}ACf}{{}ACh}{{}ACj}{Hj{{b{c}}}{}}000000000{Hj{{b{C`c}}}{}}000000000{{{b{A@l}}}{{A@h{Ej}}}}000{Hjf}{{{b{C`AC`}}}f}11{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}2222222{{A@l{Bh{{Dj{j}}}}}A@l}``{{{b{A@l}}Af}{{A@h{Ej}}}}{{A@le}A@l{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{AC`}}}{{Bh{{A@h{A@f}}}}}}{{A@lHj}{{A@h{A@f}}}}{{{b{AC`}}}{{A@h{A@f}}}}``{{A@lc}A@l{{Al{j}}}}0{{A@lj}A@l}{ABdA@l}{ACl{{A@h{A@l}}}}0{ACd{{A@h{A@l}}}}10{ABf{{A@h{A@l}}}}{A@lA@l}{{{b{ACj}}{b{C`Jh}}}{{n{fJj}}}}{{ABdAf}ABd}{cc{}}00{ABbA@l}{IhA@l}2222222{{A@lA@lcc}A@l{{Al{j}}}}{{{b{A@l}}}ACj}{{{b{ACl}}}Af}0{{{b{ACd}}}Af}`{{A@le}ABb{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{A@ljcADd}ABb{{Aj{{Ah{j}}}}}}1{{ABb{Bh{Hj}}}A@l}`{{ABdADf}ABd}`{{}Hj}0000000008{ce{}{}}000000000{{{b{ACl}}}{{A@h{{Bh{ADh}}}}}}0{{A@lA@lccADj}A@l{{Aj{{Ah{j}}}}}}{A@lABd}{{ABdAf}ABd}{A@lA@l}{ADlA@l}1?{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@lABn}A@l}``{{ABfAf}ABf}`{{A@lcADn{Bh{{B`{Jl}}}}{Bh{{b{A`}}}}}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{A@lAAbADn{Bh{ABl}}Af}A@l}666{{A@lAE`}A@l}`{{A@lA@l{b{A`}}}{{A@h{A@l}}}}8{{{b{ACl}}}{{Bh{Hj}}}}{{{b{ACd}}}{{Bh{Hj}}}}{{{b{ABf}}}{{Bh{Hj}}}}````={cACd{{Aj{AEb}}}}{cABf{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}}ACd}{{{B`{{Ah{AEd}}}}}ABf}?={{A@l{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{AAj}}}}`{{{b{ACl}}}{{b{AEb}}}}{{{b{ACd}}}{{b{AEb}}}}{{{b{ABf}}}{{b{AEb}}}}{{{b{ACl}}}{{b{{Ah{AEd}}}}}}{{{b{ACd}}}{{b{{Ah{AEd}}}}}}{{{b{ABf}}}{{b{{Ah{AEd}}}}}}```{A@l{{A@h{{AEf{A@fA@f}}}}}}``{{A@ljN`}A@l}{{{b{ACl}}}Af}{{{b{ACd}}}Af}{{{b{ABf}}}Af}``{{A@lei}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}}{A@lA@l}{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@ljcNd}ABb{{Aj{{Ah{j}}}}}}``{{{b{ACl}}}{{Bh{{b{AEh}}}}}}{{{b{ACd}}}{{Bh{{b{AEh}}}}}}{{{b{ABf}}}{{Bh{{b{AEh}}}}}}```{{{b{ABf}}AEj}{{A@h{A@f}}}}{{LhAElAf}A@l}{{cACf}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACf}{{A@h{A@l}}}}{{cACh}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACh}{{A@h{A@l}}}}{{{b{A@l}}}{{A@h{ABl}}}}{{{b{ABf}}{Bh{Hj}}}{{A@h{ABl}}}}`{{A@lc}A@l{{Aj{{Ah{j}}}}}}0{{A@lA@lcc}A@l{{Al{j}}}}{{A@lc}A@l{{Al{j}}}}{{A@lce}A@l{{Al{j}}}{{Al{j}}}}``{{A@lAEdAEn}{{A@h{f}}}}{{A@lAEdAF`}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AF`}{{A@h{f}}}}{{A@lAEdAFb}{{A@h{f}}}}{{A@lAEdAFd}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AFd}{{A@h{f}}}}`{{A@lChABn}A@l}``{{A@lcCn}A@l{{Hd{AFf}}}}{{A@lcCn}A@l{{Aj{{Ah{j}}}}}}{{A@lHf}A@l}``{{ABdc}ABd{{Aj{A`}}}}{A@lA@l}{{A@lABn}A@l}{{ABb{Bh{Hj}}}A@l}{A@l{{A@h{AFh}}}}0{{{b{A@l}}Af}{{A@h{Ej}}}}{{{b{c}}}e{}{}}00000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oj{}}000000000{{A@l{Bh{{Dj{Ej}}}}AFj}A@l}0{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}`{{ABdAFl}ABd}={ce{}{}}000000000{{ABdA@l}ABd}{{ABf{Bh{AFn}}}ABf}{{ACdAf}ACd}{{A@lAf}A@l}{{A@lj}A@l}{{A@lc}A@l{{Aj{{Ah{j}}}}}}022{{ACd{Bh{{b{A`}}}}}ACd}{{A@lc}A@l{{Aj{{Ah{A@l}}}}}}5{{ACd{Bh{ABl}}}ACd}{{ACdAG`}ACd}{{ACdHf}ACd}888{{ABfAf}ABf}{{ACd{Bh{Hj}}}ACd}{{ABf{Bh{Hj}}}ABf};;{{AClc}ACl{{Al{{Bh{Hj}}}}}}{{ACdc}ACd{{Al{{Bh{Hj}}}}}}3{{ABfc}ABf{{Al{{Bh{Hj}}}}}}3{{ACd{Bh{AGb}}}ACd}{{A@lACj}A@l}{{AClAEd}ACl}{{ACdAEd}ACd}{{ABfAEd}ABf}{{ACl{B`{{Ah{AEd}}}}}ACl}{{ACd{B`{{Ah{AEd}}}}}ACd}{{ABf{B`{{Ah{AEd}}}}}ABf}{{A@lAf}A@l}0{{ACd{Bh{Hf}}}ACd}{{ACdAf}ACd}{{AClAf}ACl}1{{ABfAf}ABf}4{{AClc}ACl{{Al{{Bh{AEh}}}}}}{{A@l{b{A`}}{Bh{ABn}}}A@l}{{ACdc}ACd{{Al{{Bh{AEh}}}}}}{{ACd{Bh{AEh}}}ACd}{{ABf{Bh{AEh}}}ABf}{{ABfc}ABf{{Al{{Bh{AEh}}}}}}{{ACd{Bh{ABl}}}ACd}{{ABf{Bh{ABl}}}ABf}{{ACdc}{{A@h{ACd}}}{{Bj{Lh}{{Bf{{A@h{Lh}}}}}}}}{{ACdHf}ACd}>{{ACdHj}ACd}0??==?{A@lA@l}{{{b{A@f}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@h{A@f}}}{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}{{Aj{A`}}}{{ADb{}{{A@j{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}{{{b{C`AGd}}{b{C`AGf}}}{{A@h{A@f}}}}{{{b{C`AGh}}{b{C`AGf}}}{{A@h{A@f}}}}{cc{}}{{}Hj}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2{{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{{AGj{AGd}}}}}}``````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Hn}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{{{b{ABh}}}Af}00{{{b{ABh}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADd}}}ADd}{{{b{Nd}}}Nd}{{{b{Hn}}}Hn}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{ADj}}}ADj}{{{b{AFb}}}AFb}{{{b{ADf}}}ADf}{{{b{AFl}}}AFl}{{{b{AFd}}}AFd}{{{b{AGn}}}AGn}{{{b{Nb}}}Nb}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AA`}}}AA`}{{{b{Ih}}}Ih}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Hn}}{b{Hn}}}AHd}`{{{b{c}}{b{e}}}AHd{}{}}``{{{b{Ih}}}{{n{{B`{Lh}}l}}}}`{{{b{Hn}}}Ch}{{{b{Hn}}}Af}{{}ADd}{{}Nd}{{}AEn}{{}AF`}{{}ADj}{{}AFb}{{}AFl}{{}AFd}{{}Nb}{{}AHb}{{}AA`}{{}Ih}{Hj{{b{c}}}{}}00000000000000000{Hj{{b{C`c}}}{}}00000000000000000`{{{b{Ih}}}{{n{Ejl}}}}0{c{{n{ADd}}}If}{c{{n{Nd}}}If}{c{{n{Hn}}}If}{c{{n{AEn}}}If}{c{{n{AF`}}}If}{c{{n{ADj}}}If}{c{{n{AFb}}}If}{c{{n{ADf}}}If}{c{{n{AFl}}}If}{c{{n{AFd}}}If}{c{{n{AGn}}}If}{c{{n{Nb}}}If}{c{{n{AH`}}}If}{c{{n{AHb}}}If}{c{{n{AA`}}}If}{c{{n{Ih}}}If}`{{{b{Ih}}}{{n{{`{Mb}}l}}}}{Hjf}00000000000000000{{{b{ADd}}{b{ADd}}}Af}{{{b{Nd}}{b{Nd}}}Af}{{{b{Hn}}{b{Hn}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{ADf}}{b{ADf}}}Af}{{{b{AFl}}{b{AFl}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Nd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Hn}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{ABh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AEn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AF`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{ADj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AFb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{ADf}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{AFl}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{AFd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AGn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Nb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AH`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AHb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AA`}}{b{C`Jh}}}{{n{fJj}}}}`{cc{}}000000{ADfADj}11111111111`{{{b{AH`}}}Cj}{{{b{AHf}}{Dj{Bd}}{b{ADd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}{{{b{ADd}}{b{C`c}}}fLl}{{{b{Nd}}{b{C`c}}}fLl}{{{b{Hn}}{b{C`c}}}fLl}{{{b{AEn}}{b{C`c}}}fLl}{{{b{AF`}}{b{C`c}}}fLl}{{{b{ADj}}{b{C`c}}}fLl}{{{b{AFb}}{b{C`c}}}fLl}{{{b{ADf}}{b{C`c}}}fLl}{{{b{AFl}}{b{C`c}}}fLl}{{{b{AFd}}{b{C`c}}}fLl}{{{b{AGn}}{b{C`c}}}fLl}{{{b{Nb}}{b{C`c}}}fLl}{{{b{AH`}}{b{C`c}}}fLl}{{{b{AHb}}{b{C`c}}}fLl}{{{b{AA`}}{b{C`c}}}fLl}``````{{}Hj}00000000000000000{ce{}{}}00000000000000000{{{b{ADf}}}Af}{{{b{Hn}}{Bh{{b{A`}}}}}Af}{{{b{Hn}}}Af}{{{b{AFl}}{b{ADf}}}{{n{fl}}}}1``{Mhj}{AHjj}{AH`j}````{AH`AH`}`{{{b{Hn}}}Ch}6{{HnCh}Hn}`1{{{b{AFl}}}Af}8{ChHn}{ADfADj}````{{{b{A`}}}Hn}`{{{b{Hn}}{b{Hn}}}{{Bh{AHd}}}}````{{{b{AHf}}{Dj{Bd}}{b{Nd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}`{{{b{ABh}}AEj}{{n{A@fl}}}}{{{b{ABh}}{Bh{Hj}}}{{n{{B`{Lh}}l}}}}`{{{b{ADd}}c}nOb}{{{b{Nd}}c}nOb}{{{b{Hn}}c}nOb}{{{b{AEn}}c}nOb}{{{b{AF`}}c}nOb}{{{b{ADj}}c}nOb}{{{b{AFb}}c}nOb}{{{b{ADf}}c}nOb}{{{b{AFl}}c}nOb}{{{b{AFd}}c}nOb}{{{b{AGn}}c}nOb}{{{b{Nb}}c}nOb}{{{b{AH`}}c}nOb}{{{b{AHb}}c}nOb}{{{b{AA`}}c}nOb}{{{b{Ih}}c}nOb}`````{{{b{ADj}}}{{b{A`}}}}`{Ih{{n{AFhl}}}}{{{b{AH`}}}{{Bh{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Hn}}Ch{Bh{{b{AGl}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHn}}}}}{{Bj{AHn}{{Bf{Ch}}}}}}{{{b{Hn}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHl{{n{AH`l}}}}111111111111111111111{{{b{c}}}Oj{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Hn}}}Ch}{{{b{Hn}}}Af}{{ADjAD`}ADj}````````````````````````````````````````````````````````","D":"GEd","p":[[1,"reference"],[5,"Private",3214],[1,"unit"],[5,"MetaNameSpace",6,3215],[6,"Expr",6,3216],[6,"PolarsError",3217],[6,"Result",3218],[1,"str"],[5,"ArrayNameSpace",6,3219],[5,"ListNameSpace",6,3220],[1,"bool"],[1,"slice"],[10,"AsRef",3221],[10,"Into",3221],[10,"FunctionOutputField",6,3222],[5,"Arc",3223],[5,"SpecialEq",6,3222],[5,"Series",3224],[17,"Output"],[6,"Option",3225],[10,"Fn",3226],[10,"Send",3227],[10,"Sync",3227],[0,"mut"],[6,"VisitRecursion",3228],[10,"FnMut",3226],[6,"FunctionExpr",6,3229],[1,"i64"],[6,"DataType",3230],[5,"SortOptions",3231],[5,"SortMultipleOptions",3231],[5,"FieldsMapper",6,3232],[5,"Field",3233],[10,"SeriesUdf",6,3222],[10,"Any",3234],[6,"AggExpr",6,3216],[5,"Vec",3235],[1,"u64"],[5,"BinaryNameSpace",1507,3236],[6,"Operator",6,3216],[10,"Clone",3237],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3222],[5,"String",3238],[5,"UserDefinedFunction",6,3239],[10,"SeriesBinaryUdf",6,3222],[5,"CategoricalNameSpace",6,3240],[5,"When",6,3241],[5,"Then",6,3241],[5,"ChainedWhen",6,3241],[5,"ChainedThen",6,3241],[6,"Excluded",6,3216],[6,"BooleanFunction",6,3242],[6,"CategoricalFunction",6,3243],[6,"PowFunction",6,3244],[6,"StringFunction",6,3245],[5,"DatetimeArgs",6,3246],[5,"DurationArgs",6,3246],[5,"RollingCovOptions",6,3247],[5,"StrptimeOptions",6,3247],[5,"JoinOptions",6,3247],[6,"WindowType",6,3247],[6,"WindowMapping",6,3247],[6,"NestedType",6,3247],[10,"IntoVec",3248],[1,"u8"],[10,"ExprEvalExtension",6,3249],[1,"usize"],[1,"f64"],[5,"Duration",2572,3250],[6,"ClosedWindow",3251],[6,"TimeUnit",3252],[10,"BinaryUdfOutputField",6,3222],[10,"Deserializer",3253],[6,"DslPlan",2572,3254],[6,"NullBehavior",3255],[5,"DateLikeNameSpace",1528,3256],[10,"Sized",3227],[10,"ListNameSpaceExtension",6,3257],[5,"EWMOptions",3258],[5,"StructNameSpace",6,3259],[6,"FillNullStrategy",3260],[5,"Formatter",3261],[5,"Error",3261],[10,"UdfSchema",6,3262],[1,"f32"],[1,"i16"],[1,"i8"],[1,"u32"],[1,"u16"],[6,"RangeFunction",3263],[6,"StructFunction",3264],[6,"ListFunction",3265],[6,"BusinessFunction",3266],[6,"TemporalFunction",3267],[6,"ArrayFunction",3268],[6,"BinaryFunction",3269],[5,"FunctionOptions",3270],[5,"Schema",3271],[6,"Context",3254],[10,"Hasher",3272],[6,"InterpolationMethod",3273],[10,"IntoListNameSpace",6,3257],[10,"Display",3261],[6,"ClosedInterval",3274],[5,"ExprNameNameSpace",6,3275],[10,"Literal",2572,3276],[10,"FnOnce",3226],[5,"PythonUdfExpression",2002,3277],[5,"UnitVec",3278],[6,"QuantileInterpolOptions",3279],[5,"RankOptions",2572,3280],[5,"RollingGroupOptions",2572,3281],[5,"RollingOptionsFixedWindow",3282],[5,"Float64Type",3283],[5,"ChunkedArray",3284],[10,"Copy",3227],[5,"RollingOptionsDynamicWindow",3285],[6,"SearchSortedSide",3286],[10,"Serializer",3287],[6,"IsSorted",3288],[5,"StringNameSpace",2047,3289],[6,"ListToStructWidthStrategy",3290],[5,"TypeId",3234],[6,"Roll",3291],[6,"NonExistent",3292],[6,"RollingFunction",1822,3293],[6,"RollingFunctionBy",1854,3294],[6,"TrigonometricFunction",1885,3295],[5,"DataFrame",3296],[8,"PolarsResult",3217],[17,"Item"],[5,"LazyFrame",2115],[10,"IntoParallelIterator",3297],[5,"UnionArgs",2572,3270],[5,"PythonFunction",2002,3277],[5,"PyAny",3298],[5,"Py",3299],[1,"char"],[5,"Node",3300],[6,"IR",3301],[5,"Arena",3300],[6,"AExpr",3302],[5,"LazyGroupBy",2115],[5,"JoinBuilder",2115],[5,"LazyJsonLineReader",2115,3303],[10,"AnonymousScan",2572,3304],[5,"ScanArgsAnonymous",2115,3305],[8,"SchemaRef",3271],[8,"IdxSize",3306],[5,"InProcessQuery",2115,3307],[8,"PlHashMap",3308],[5,"LazyCsvReader",2115,3309],[5,"ScanArgsIpc",2115,3310],[5,"ScanArgsParquet",2115,3311],[5,"OptState",2115,3312],[10,"LazyFileListReader",2115,3313],[5,"CloudOptions",3314],[6,"JoinCoalesce",3315],[10,"IntoIterator",3316],[5,"DynamicGroupOptions",2572,3281],[6,"JoinType",2572,3315],[8,"PathIterator",2115,3313],[5,"JoinArgs",2572,3315],[10,"IntoLazy",2115],[8,"AllowedOptimizations",2115,3312],[5,"MeltArgs",3317],[5,"Path",3318],[5,"PathBuf",3318],[1,"tuple"],[5,"RowIndex",3319],[5,"AnonymousScanArgs",2572,3304],[8,"PyObject",3299],[5,"CsvWriterOptions",2572,3320],[5,"IpcWriterOptions",2572,3321],[5,"JsonWriterOptions",2572,3322],[5,"ParquetWriteOptions",2572,3323],[8,"String",3324],[5,"IRPlan",3301],[6,"UniqueKeepStrategy",3296],[6,"JoinValidation",2572,3315],[8,"NonZeroUsize",3325],[6,"CsvEncoding",3326],[6,"NullValues",3326],[10,"Executor",2555,3327],[5,"ExecutionState",3328],[5,"Dummy",2555,3327],[5,"Box",3329],[6,"Tz",3330],[6,"RankMethod",2572,3280],[6,"LiteralValue",2572,3276],[5,"AnonymousScanOptions",2572,3270],[6,"Ordering",3331],[10,"PolarsTemporalGroupby",2572,3281],[6,"GroupsProxy",3332],[5,"Null",2572,3276],[6,"AnyValue",3333],[5,"NaiveDateTime",3334],[15,"Quantile",1399],[15,"Min",1399],[15,"Max",1399],[15,"IsBetween",1749],[15,"Any",1749],[15,"All",1749],[15,"SortBy",1409],[15,"Filter",1409],[15,"Cast",1409],[15,"Sort",1409],[15,"Gather",1409],[15,"RenameAlias",1409],[15,"Ternary",1409],[15,"Function",1409],[15,"Window",1409],[15,"AnonymousFunction",1409],[15,"Slice",1409],[15,"BinaryExpr",1409],[15,"QCut",1752],[15,"Entropy",1752],[15,"Log",1752],[15,"Hist",1752],[15,"Cut",1752],[15,"Correlation",1752],[15,"Round",1752],[15,"RoundSF",1752],[15,"EwmMeanBy",1752],[15,"Clip",1752],[15,"BackwardFill",1752],[15,"ForwardFill",1752],[15,"Random",1752],[15,"GatherEvery",1752],[15,"ValueCounts",1752],[15,"Rank",1752],[15,"EwmMean",1752],[15,"EwmStd",1752],[15,"EwmVar",1752],[15,"Replace",1752],[15,"CumCount",1752],[15,"CumSum",1752],[15,"CumProd",1752],[15,"CumMin",1752],[15,"CumMax",1752],[15,"TopK",1752],[15,"TopKBy",1752],[15,"ConcatHorizontal",1796],[15,"ConcatVertical",1796],[15,"ExtractGroups",1796],[15,"JsonDecode",1796],[15,"PadStart",1796],[15,"PadEnd",1796],[15,"SplitExact",1796],[15,"Contains",1796],[15,"Find",1796],[15,"Replace",1796],[15,"GroupBy",3159],[15,"Union",3159],[15,"Sort",3159],[15,"Cache",3159],[15,"ExtContext",3159],[15,"DataFrameScan",3159],[15,"Select",3159],[15,"HStack",3159],[15,"Scan",3159],[15,"MapFunction",3159],[15,"Filter",3159],[15,"Distinct",3159],[15,"Slice",3159],[15,"Sink",3159],[15,"Join",3159],[15,"HConcat",3159],[15,"PythonScan",3159],[15,"Range",3211]],"r":[[8,3216],[22,3219],[30,3222],[32,3242],[36,3243],[37,3240],[40,3241],[41,3241],[60,3246],[67,3246],[77,3216],[82,3216],[83,3249],[84,3275],[90,3232],[91,3275],[101,3229],[102,3222],[108,3222],[121,3257],[135,3247],[146,3220],[147,3257],[162,3215],[172,3247],[178,3216],[188,3244],[198,3222],[206,3247],[213,3222],[214,3222],[225,3222],[233,3245],[240,3247],[242,3259],[249,3241],[258,3262],[263,3239],[266,3241],[269,3247],[270,3247],[304,3335],[308,3336],[315,3336],[318,3337],[322,3338],[324,3339],[339,3340],[341,3340],[347,3341],[348,3342],[350,3338],[352,3241],[415,3343],[422,3342],[424,3338],[477,3336],[478,3335],[479,3335],[480,3344],[481,3344],[482,3344],[491,3345],[493,3336],[497,3336],[502,3339],[503,3246],[504,3339],[505,3339],[636,3338],[638,3335],[639,3335],[640,3246],[719,3338],[755,3336],[758,3344],[821,3338],[862,3335],[894,3339],[895,3339],[943,3342],[945,3342],[955,3338],[958,3338],[962,3276],[972,3337],[983,3338],[986,3338],[993,3342],[997,3336],[998,3342],[1001,3336],[1002,3342],[1010,3342],[1014,3336],[1040,3342],[1042,3338],[1054,3345],[1061,3338],[1064,3342],[1068,3336],[1072,3346],[1084,3345],[1085,3345],[1156,3345],[1164,3338],[1169,3342],[1173,3336],[1179,3241],[1182,3339],[1322,3338],[1368,3241],[1507,3236],[1527,3240],[1528,3256],[1600,3242],[1603,3243],[1641,3229],[1688,3244],[1720,3245],[1744,3229],[1745,3229],[1746,3229],[1747,3229],[1748,3229],[1816,3243],[1820,3244],[1826,3293],[1858,3294],[1900,3295],[1927,3246],[1928,3246],[1929,3335],[1930,3336],[1932,3336],[1933,3337],[1934,3339],[1935,3340],[1936,3340],[1937,3341],[1938,3342],[1939,3342],[1940,3336],[1941,3335],[1943,3335],[1945,3344],[1948,3344],[1949,3344],[1950,3345],[1951,3336],[1952,3336],[1953,3339],[1954,3339],[1955,3246],[1956,3339],[1957,3339],[1960,3335],[1961,3335],[1962,3246],[1963,3336],[1964,3344],[1967,3335],[1968,3339],[1969,3339],[1970,3342],[1971,3342],[1972,3337],[1973,3342],[1974,3342],[1975,3342],[1979,3342],[1984,3342],[1985,3345],[1986,3342],[1987,3336],[1988,3346],[1989,3345],[1990,3345],[1993,3345],[1994,3342],[1995,3339],[1996,3339],[2002,3277],[2003,3277],[2004,3277],[2005,3277],[2047,3289],[2109,3239],[2115,3312],[2116,3307],[2119,3309],[2120,3313],[2123,3303],[2124,3312],[2125,3313],[2126,3305],[2127,3310],[2128,3311],[2555,3327],[2556,3327],[2571,3347],[2572,3304],[2573,3304],[2574,3270],[2582,3320],[2588,3254],[2589,3250],[2591,3281],[2607,3321],[2609,3315],[2610,3315],[2611,3315],[2612,3322],[2614,3276],[2615,3276],[2621,3276],[2622,3276],[2627,3323],[2628,3281],[2631,3280],[2632,3280],[2633,3281],[2649,3270]],"b":[[510,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[511,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[512,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[585,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[586,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[587,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[643,"impl-PartialEq-for-Expr"],[644,"impl-Expr"],[647,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[648,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[730,"impl-Display-for-Expr"],[731,"impl-Debug-for-Expr"],[733,"impl-Display-for-Operator"],[734,"impl-Debug-for-Operator"],[736,"impl-Display-for-BooleanFunction"],[737,"impl-Debug-for-BooleanFunction"],[738,"impl-Display-for-CategoricalFunction"],[739,"impl-Debug-for-CategoricalFunction"],[740,"impl-Display-for-PowFunction"],[741,"impl-Debug-for-PowFunction"],[742,"impl-Debug-for-StringFunction"],[743,"impl-Display-for-StringFunction"],[744,"impl-Debug-for-FunctionExpr"],[745,"impl-Display-for-FunctionExpr"],[772,"impl-From%3Ci64%3E-for-Expr"],[773,"impl-From%3C%26str%3E-for-Expr"],[774,"impl-From%3Cf32%3E-for-Expr"],[775,"impl-From%3Ci16%3E-for-Expr"],[776,"impl-From%3Ci8%3E-for-Expr"],[777,"impl-From%3Ci32%3E-for-Expr"],[778,"impl-From%3Cbool%3E-for-Expr"],[779,"impl-From%3Cu32%3E-for-Expr"],[780,"impl-From%3Cu16%3E-for-Expr"],[781,"impl-From%3Cu8%3E-for-Expr"],[782,"impl-From%3CAggExpr%3E-for-Expr"],[784,"impl-From%3Cu64%3E-for-Expr"],[785,"impl-From%3Cf64%3E-for-Expr"],[788,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[789,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[790,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[791,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[792,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[793,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[794,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[796,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[797,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[798,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[799,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[804,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[806,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[807,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[808,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[841,"impl-Hash-for-Expr"],[842,"impl-Expr"],[1122,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1123,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1124,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1841,"impl-Display-for-RollingFunction"],[1842,"impl-Debug-for-RollingFunction"],[1872,"impl-Display-for-RollingFunctionBy"],[1873,"impl-Debug-for-RollingFunctionBy"],[1914,"impl-Display-for-TrigonometricFunction"],[1915,"impl-Debug-for-TrigonometricFunction"],[2279,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2280,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2512,"impl-LazyFileListReader-for-LazyCsvReader"],[2513,"impl-LazyCsvReader"],[2514,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2515,"impl-LazyJsonLineReader"],[2534,"impl-LazyFileListReader-for-LazyCsvReader"],[2535,"impl-LazyCsvReader"],[2536,"impl-LazyJsonLineReader"],[2537,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2894,"impl-Debug-for-Duration"],[2895,"impl-Display-for-Duration"],[2901,"impl-Display-for-JoinType"],[2902,"impl-Debug-for-JoinType"],[2903,"impl-Display-for-JoinValidation"],[2904,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOQI8wAEABIAGAANACcAAQArABEAPgAFAEUABwBOAAMAVAAAAFYAFwBvABcAiAACAIwABgCUAA4ApAAMALIAAgC2AB4A2AAJAOMADwD0AAQA+wAMAAkBAQAMAQAADgEeAC4BAAAzAQAANgEBADoBAABAAQAAQgEAAE0BAABQAQAAVwEBAFoBAQBfAQAAYgE7AKABAACiAQAApAEBAKkBAACwAS0A4QEAAPsBDAAJAk4AWgIAAFwCHQB7AgAAfQIAAIMCAQCGAg4AlgImAMUCAADIAgEAzgIAANQCAADXAhwA9QIAAAUDCgARAwEAFQMGAB0DAwAlAwAAJwMCAC8DAAA0AwAANgMAADsDAQBAAwUASQMBAEwDDABcAwEAYAMdAKEDAgClAwAAuQMAAMEDAADOAwAA0QMFANoDAADdAwAA7QMAAPADAgD4AwIA/AMDAAUEAQAJBAIADwQBABsEAAAdBAEAJAQAACYEAAAuBAEANAQBADcEAAA8BAIAVgQFAF0EEwB6BAAAgQQAAIgEAACNBAAAjwQAAJEEAACXBAAAnAQAAJ4EAACgBAIApwQXAMAEBwDMBDsACgUAAAwFHwA4BQAAOgUeAFwFAQBhBQAAbgUAAHIFAQB3BRMAjgUBAJEFAQCUBQEAlwUEAJ0FRgDlBQMA6gUCAO8FAgD0BQMA/AUBAAUGAgALBgAADQYAABoGAAApBgMAMQYCATUHAQA4BxoAVAcBAFcHJQB+BwEAgQcGAIwHAACaBwAApwcBAK4HAQC5BwIAvQcDAMYHAwDOBx0A7gcDAPQHCwABCAMACQgCAA0IAAAQCAAAFQgCABkIAQA5CAMARQgDAEwIAABOCA0AXwgBAGMIFQB6CAEAfwgRAJMIAQCZCAAAoAgAAKMIGADACAMAxQgGAOAIAQDjCAAA6AgBAPMIAgD7CAAA/QgKABkJAQAeCQEAIQkAACMJAAAoCQEALgkDADMJAwA5CQEAPAkEAEkJAwBWCQQAXAkAAGAJAQBjCQAAbwkAAHwJAQB/CR0AnwkJAKwJAQCvCQkAugkAAMMJAQDRCQAA0wkAANgJAQDbCQEA5wkAAOoJAAD4CQQA/gkGAAYKAAAICgoAFgoAABkKAgAdCgMAIwoAACYKAAAqCgEAMAoAADIKBgA8CgIAQAoAAEMKCABNCgIAUgoAAFQKAABaChMAcQpKAMAKiwBNCxMAaAsAAHQLAAB2CxEAiQsAAIwLEQCwCwEAswsAALULAAC4CwIAvgsFAMULAADICwAAygsCAM4LAQDSCwIA2AsUAO4LoAA="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNNNNNHNNHHHHHHNNHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesReshape","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","get_leaf_array","get_leaf_array","hash","implode","implode","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","reshape_list","reshape_list","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[231,"polars_ops::prelude"],[233,"polars_ops::series"],[291,"polars_ops::chunked_array::binary"],[292,"polars_core::datatypes"],[293,"polars_ops::chunked_array::binary::namespace"],[294,"polars_ops::chunked_array::scatter"],[295,"polars_utils::index"],[296,"polars_core::series"],[297,"polars_error"],[298,"core::marker"],[299,"core::option"],[300,"core::iter::traits::collect"],[301,"polars_ops::chunked_array::list::namespace"],[302,"polars_core::datatypes::aliases"],[303,"polars_core::chunked_array::ops::sort::options"],[304,"polars_core::frame"],[305,"dyn_clone::sealed"],[306,"polars_ops::frame::join::hash_join"],[307,"polars_ops::frame::join::args"],[308,"alloc::string"],[309,"polars_ops::frame::join::cross_join"],[310,"core::fmt"],[311,"core::convert"],[312,"core::hash"],[313,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[314,"polars_arrow::array::primitive"],[315,"core::result"],[316,"core::any"],[317,"polars_ops::series::ops::arg_min_max"],[318,"polars_ops::series::ops"],[319,"polars_core::chunked_array::ops::search_sorted"],[320,"polars_ops::series::ops::various"],[321,"polars_ops::series::ops::reshape"],[322,"polars_ops::frame::join::general"],[323,"polars_ops::series::ops::clip"],[324,"polars_ops::series::ops::horizontal"],[325,"polars_ops::series::ops::index"],[326,"polars_ops::series::ops::negate"],[327,"polars_ops::series::ops::not"],[328,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,0,0,54,0,54,54,0,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,57,57,54,57,57,54,54,0,55,55,0,0,0,0,0,0,57,57,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}``````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Gb}}}Ad}0{{{d{Fl}}{d{Dfc}}}ClEl}{{{d{Gb}}}{{Af{Bb}}}}0{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}{{{d{Gb}}{d{{l{Bn}}}}}{{Af{Ad}}}}03{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDd}{{Af{Ch}}}}0","D":"En","p":[[10,"AsBinary",4,291],[1,"reference"],[8,"BinaryChunked",292],[10,"BinaryNameSpaceImpl",4,293],[1,"u8"],[1,"slice"],[8,"BooleanChunked",292],[10,"ChunkedSet",4,294],[8,"IdxSize",295],[5,"Series",296],[8,"PolarsResult",297],[10,"Copy",298],[17,"Item"],[6,"Option",299],[10,"IntoIterator",300],[10,"AsList",23],[8,"ListChunked",292],[10,"ListNameSpaceImpl",23,301],[1,"str"],[1,"bool"],[8,"StringChunked",292],[8,"IdxCa",302],[1,"i64"],[1,"usize"],[5,"SortOptions",303],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",304],[5,"Private",305],[1,"unit"],[10,"JoinDispatch",78,306],[8,"LeftJoinIds",78,307],[5,"JoinArgs",78,307],[5,"String",308],[0,"mut"],[6,"JoinCoalesce",78,307],[6,"JoinType",78,307],[6,"JoinValidation",78,307],[10,"CrossJoin",78,309],[1,"tuple"],[8,"ChunkJoinOptIds",78,307],[5,"Formatter",310],[8,"Result",310],[10,"DataFrameJoinOps",78],[10,"AsRef",311],[10,"Hasher",312],[10,"SeriesJoin",78,313],[8,"InnerJoinIds",78,307],[5,"PrimitiveArray",314],[6,"Result",315],[5,"TypeId",316],[10,"ArgAgg",233,317],[10,"SeriesSealed",233,318],[6,"SearchSortedSide",233,319],[10,"SeriesMethods",233,320],[5,"Error",310],[10,"SeriesReshape",233,321]],"r":[[4,291],[5,293],[6,294],[24,301],[78,307],[79,307],[82,309],[86,307],[87,307],[88,307],[89,306],[91,307],[92,307],[95,307],[100,313],[105,322],[108,322],[113,322],[141,306],[231,78],[232,74],[234,317],[237,319],[238,320],[239,321],[240,318],[247,323],[248,323],[249,323],[252,324],[253,325],[273,325],[276,324],[277,324],[278,324],[279,326],[280,327],[281,328],[284,324]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPQAEgAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAoALcADADJAAEAzAAAAM4AHADsAAYA9QACAPsADgANAQAAEAEAABUBDAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[41,"polars_utils::abs_diff"],[45,"polars_utils::aliases"],[61,"polars_utils::arena"],[120,"polars_utils::atomic"],[140,"polars_utils::binary_search"],[142,"polars_utils::cache"],[178,"polars_utils::cell"],[198,"polars_utils::clmul"],[202,"polars_utils::contention_pool"],[217,"polars_utils::cpuid"],[219,"polars_utils::float"],[225,"polars_utils::floor_divmod"],[227,"polars_utils::functions"],[231,"polars_utils::hashing"],[263,"polars_utils::idx_vec"],[307,"polars_utils::index"],[369,"polars_utils::io"],[371,"polars_utils::iter"],[384,"polars_utils::mem"],[385,"polars_utils::min_max"],[392,"polars_utils::nulls"],[397,"polars_utils::ord"],[399,"polars_utils::partitioned"],[418,"polars_utils::slice"],[432,"polars_utils::sort"],[434,"polars_utils::sync"],[457,"polars_utils::sys"],[471,"polars_utils::total_ord"],[521,"polars_utils::unwrap"],[523,"polars_utils::vec"],[536,"num_traits"],[537,"core::cmp"],[538,"core::marker"],[539,"core::fmt"],[540,"core::clone"],[541,"core::option"],[542,"core::hash"],[543,"core::default"],[544,"core::ops::function"],[545,"core::result"],[546,"core::any"],[547,"core::borrow"],[548,"alloc::sync"],[549,"alloc::vec"],[550,"core::convert"],[551,"core::ops::range"],[552,"core::iter::traits::collect"],[553,"polars_utils::iter::fallible"],[554,"core::slice::iter"],[555,"polars_error"],[556,"std::fs"],[557,"std::path"],[558,"polars_utils::iter::enumerate_idx"],[559,"core::error"],[560,"core::iter::traits::iterator"],[561,"hashbrown::map"],[562,"core::mem::maybe_uninit"],[563,"core::slice::index"],[564,"num_traits::cast"],[565,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,37,34,37,34,34,34,34,37,34,37,34,37,34,37,37,34,34,34,34,37,34,34,37,34,37,34,34,37,34,34,37,34,37,34,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,44,44,44,44,44,0,45,0,0,0,0,0,0,51,51,51,51,51,51,52,51,51,51,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,65,0,0,0,0,63,64,63,64,0,63,64,63,64,63,64,63,64,63,64,63,63,63,63,64,63,64,63,63,64,65,65,63,63,64,63,64,63,64,67,64,63,63,67,63,64,68,64,69,63,63,64,63,64,63,64,63,64,0,0,0,0,0,78,0,78,72,72,72,72,74,58,78,0,0,80,80,80,80,80,80,66,66,0,66,66,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"```````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Cn}}}Cn}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}Cn}{Ab{{Al{c}}}{}}{{{Al{Cn}}}{{Al{c}}}{}}{{{Al{AhCn}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhCn}}}B`}{AbCn}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{D`{c}}}}c}AbDb}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Dd{ce}}}}}{{Dd{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Dd{ce}}}{DfDh}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dj{ceg}}}}cBf}e{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Dd{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Dn{c}}DfDh}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Dd{ce}}}}ce}{{Al{Ahe}}}{DfDh}{}}{ce{}{}}0{{gAb}{{Dj{ceg}}}{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Dd{ce}}}{DfDh}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Dd{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{Dn{c}}DfDh}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{E`{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{E`{c}}}{}}{cc{}}{Ebc{}}{{{Al{{E`{c}}}}}{}Dl}{{{Al{Ah{E`{c}}}}}{{Al{Ahc}}}Dl}{{}Ab}{ce{}{}}{{{E`{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EdEd}Ed}0{EdEd}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Ef{c}}}}}cCb}>={Ab{{Ef{c}}}Cb}{{{Al{{Ef{c}}}}c}B`Cb}<<;{{}Bf}0`00{{{Al{Eh}}}Bf}10`{{EjEj}{{El{EjEj}}}}{{{En{c}}e}{{En{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{D`{e}}}}{Bn{Ab}}}{{F`{c}}}Bb{{Fb{{D`{c}}}}}}{{AbAb{Fd{Ab}}}{{Fd{Ab}}}}{{{En{c}}g}{{Ch{{En{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``?>{{{Al{Ff}}}Ff}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Fh}}}Ed}{{{Al{Ff}}}Ed}?{{{Al{Ff}}{Al{Ff}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ff}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Ff}}{Al{Ahc}}}B`C`}{{EdAb}Ab}{{}Ab}{ce{}{}}{{{Al{Ff}}}Bf}{{{Bn{{Al{{D`{Fj}}}}}}Ed}Ff}2{{{Al{c}}}e{}{}}{{{Al{Ff}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ffc{}}``{{{Al{Ah{Fl{c}}}}}{{Al{Ah{D`{c}}}}}{}}0{{{Al{{Fl{c}}}}}{{Al{{D`{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fl{c}}}}}Ab{}}{{{Al{{Fl{c}}}}}{{Fl{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fl{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Fl{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fl{c}}}}}B`{}}{AbB`}{{{Al{{Fl{c}}}}{Al{{Fl{c}}}}}BfFn}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fl{c}}}}e}B`{}{{Gb{}{{G`{c}}}}}}{{{Al{{Fl{c}}}}{Al{AhBh}}}Bjl}{{{Al{{D`{c}}}}}{{Fl{c}}}Bb}{cc{}}{{{F`{c}}}{{Fl{c}}}{}}{g{{Ch{ic}}}{}{}{{Gd{c}{{G`{e}}}}}{}}{e{{Fl{c}}}{}{{Gb{}{{G`{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fl{c}}}}}Bf{}}{{{Al{{Fl{c}}}}}{{Gf{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Gh{c}}}{}}{{{Al{{Fl{c}}}}}Ab{}}{{}{{Fl{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fl{c}}}}c}B`{}}0{{{Al{Ah{Fl{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fl{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{D`{Gj}}}}Gj}{{Gl{B`}}}}{{{Al{Gn}}}Gn}{{{Al{H`}}}H`}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Gn}}{Al{Gn}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{H`{{El{GjGj}}}}{{{Al{Gn}}{Al{AhBh}}}Bj}{{{Al{H`}}{Al{AhBh}}}Bj}{GjGn}{cc{}}0{{{Al{{Hb{}{{G`{c}}}}}}Ab}cHd}0{{{Al{Gn}}}Gj}{{}Ab}0`{{{Al{AhH`}}}{{Al{AhEd}}}}{ce{}{}}0{{{Al{Hf}}}Bf}{{{Al{H`}}}Bf}{{{Al{Gn}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hf}}}Ab}{{}Gn}{{}H`}{{{Al{Hh}}}Ab}{{GjGj}H`}{{HjEd}Gj}{{{Al{Gn}}}{{Bn{Gj}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gl{Hl}}}{{Fb{Hn}}}}0``````{I`{{`{I`Gj}}}}0{I`{{`{I`Ib}}}}0{g{{Ch{Idc}}}If{}{{Gd{c}{{G`{e}}}}}}{{{Al{AhGd}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{G`{c}}}}}}{{{Al{{D`{c}}}}}{{Al{Ah{D`{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hd{}{{Jb{c}}}}}}}Bf{}}{{{Hd{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEh}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{D`{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{F`{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{F`{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{El{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{D`{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{D`{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{D`{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{D`{Fj}}}}}Ed}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Fd{Ab}}}Kh}0{{e{Al{Ah{F`{Fj}}}}Ab}{{Al{Ah{D`{g}}}}}{Kjj}{{Gb{}{{G`{c}}}}}{Klj}}{{{Al{Kn}}{Al{{D`{{El{GjGj}}}}}}{Al{Ah{F`{Gj}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{L`{c}}}{}}0{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ed};87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EdFh}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHd}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{D`{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHd{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{F`{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{F`{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{El{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{El{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",41],[10,"Num",536],[10,"PartialOrd",537],[10,"Copy",538],[10,"Debug",539],[10,"Send",538],[10,"Sync",538],[1,"usize"],[8,"PlHashMap",45],[8,"PlHashSet",45],[0,"mut"],[5,"Arena",61],[1,"reference"],[5,"Node",61],[1,"unit"],[10,"Clone",540],[6,"Ordering",537],[1,"bool"],[5,"Formatter",539],[8,"Result",539],[1,"array"],[6,"Option",541],[10,"Hasher",542],[10,"Default",543],[17,"Output"],[10,"FnOnce",544],[6,"Result",545],[10,"FnMut",544],[5,"TypeId",546],[5,"SyncCounter",120],[1,"slice"],[10,"Ord",537],[5,"FastFixedCache",142],[10,"Hash",542],[10,"Eq",537],[5,"FastCachedFunc",142],[10,"Sized",538],[10,"Borrow",547],[5,"SyncUnsafeCell",178],[1,"never"],[1,"u64"],[5,"LowContentionPool",202],[10,"IsFloat",219],[10,"FloorDivMod",225],[1,"tuple"],[5,"Arc",548],[5,"Vec",549],[10,"AsRef",550],[5,"Range",551],[5,"BytesHash",231],[10,"DirtyHash",231],[1,"u8"],[5,"UnitVec",263],[10,"PartialEq",537],[17,"Item"],[10,"IntoIterator",552],[10,"FallibleIterator",371,553],[5,"Iter",554],[5,"IterMut",554],[8,"IdxSize",307],[8,"PolarsResult",555],[5,"NullableIdxSize",307],[5,"ChunkId",307],[10,"Indexable",307],[10,"IsNull",392],[10,"Bounded",307],[10,"NullCount",307],[10,"ToIdx",307],[5,"File",556],[5,"Path",557],[10,"EnumerateIdxTrait",371,558],[1,"u32"],[10,"FromFallibleIterator",371,553],[10,"Error",559],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",371],[10,"Iterator",560],[10,"MinMax",385],[17,"Inner"],[5,"PartitionedHashMap",399],[5,"HashMap",561],[5,"RawEntryBuilder",561],[5,"RawEntryBuilderMut",561],[10,"Slice2Uninit",418],[20,"MaybeUninit",562],[10,"GetSaferUnchecked",418],[10,"SliceIndex",563],[10,"SortedSlice",418],[10,"Extrema",418],[10,"SliceAble",418],[10,"TotalOrd",471],[10,"FromPrimitive",564],[5,"ThreadPool",565],[5,"SyncPtr",434],[5,"MemInfo",457],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",471],[10,"TotalEq",471],[10,"TotalHash",471],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",471],[10,"UnwrapUncheckedRelease",521],[17,"ItemIn"],[10,"ConvertVec",523],[10,"ResizeFaster",523],[10,"IntoRawParts",523],[10,"PushUnchecked",523],[10,"CapacityByFactor",523],[10,"InitHashMaps",45],[8,"PlIndexMap",45],[8,"PlIndexSet",45]],"r":[[0,307],[1,307],[371,558],[372,553],[373,553]],"b":[[286,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[288,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4BNQAAAAgACgBPAFwAAABeAAEAYQACAGYAEgB6AAkAhQAAAIgABACQAA4AoQAFAKkACQC0AAEAtwACALwAAAC/AAAAxAAMANIAAQDVAAYA3QAKAOkADgD5AAIA/QALAAoBFQAhAQMAJgEGAC4BJQBWAQAAWAEEAF8BFwB4AQAAegEGAIIBCwCQAQUAlwECAJsBDQCrAQQAsQEAALQBBQC7AQEAvgEDAMMBAADFAQUAzAEEANMBAADVAQMA3QEDAOMBCwDwAQMA9QEVAAwCBAASAgMAFwIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
